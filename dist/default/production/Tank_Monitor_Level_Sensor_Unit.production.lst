

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed May 24 20:07:08 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 1.41
    50                           ; Generated 25/01/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F458 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	smallconst
    85  000600                     __psmallconst:
    86                           	opt stack 0
    87  000600  00                 	db	0
    88  000601                     _speed:
    89                           	opt stack 0
    90  000601  4268               	dw	17000
    91  000603                     __end_of_speed:
    92                           	opt stack 0
    93  0000                     _TXB1CON	set	3888
    94  0000                     _RXB1DLC	set	3925
    95  0000                     _RXB1EIDL	set	3924
    96  0000                     _RXB1EIDH	set	3923
    97  0000                     _RXB1SIDL	set	3922
    98  0000                     _RXB1SIDH	set	3921
    99  0000                     _RXB1SIDLbits	set	3922
   100  0000                     _RXB1CONbits	set	3920
   101  0000                     _RXM1EIDL	set	3871
   102  0000                     _RXM1EIDH	set	3870
   103  0000                     _RXM1SIDL	set	3869
   104  0000                     _RXM1SIDH	set	3868
   105  0000                     _RXB1CON	set	3920
   106  0000                     _RXM0EIDL	set	3867
   107  0000                     _RXM0EIDH	set	3866
   108  0000                     _RXM0SIDL	set	3865
   109  0000                     _RXM0SIDH	set	3864
   110  0000                     _TXB0CON	set	3904
   111  0000                     _RXB1D0	set	3926
   112  0000                     _RXF5SIDH	set	3860
   113  0000                     _RXF4SIDH	set	3856
   114  0000                     _RXF3SIDH	set	3852
   115  0000                     _RXF2SIDH	set	3848
   116  0000                     _RXF1SIDH	set	3844
   117  0000                     _RXF0SIDH	set	3840
   118  0000                     _TMR1	set	4046
   119  0000                     _T3CONbits	set	4017
   120  0000                     _PIE1bits	set	3997
   121  0000                     _CCP1CONbits	set	4029
   122  0000                     _CCPR1H	set	4031
   123  0000                     _CCPR1L	set	4030
   124  0000                     _TMR3L	set	4018
   125  0000                     _TMR3H	set	4019
   126  0000                     _COMSTATbits	set	3956
   127  0000                     _PIE3	set	4003
   128  0000                     _RXB0DLC	set	3941
   129  0000                     _RXB0EIDL	set	3940
   130  0000                     _RXB0EIDH	set	3939
   131  0000                     _RXB0SIDL	set	3938
   132  0000                     _RXB0SIDH	set	3937
   133  0000                     _RXB0SIDLbits	set	3938
   134  0000                     _RXB0CONbits	set	3936
   135  0000                     _PIR3	set	4004
   136  0000                     _RXB0CON	set	3936
   137  0000                     _BRGCON3	set	3954
   138  0000                     _BRGCON2	set	3953
   139  0000                     _BRGCON1	set	3952
   140  0000                     _CANSTAT	set	3950
   141  0000                     _CANCON	set	3951
   142  0000                     _CIOCON	set	3955
   143  0000                     _TRISDbits	set	3989
   144  0000                     _TRISBbits	set	3987
   145  0000                     _PORTE	set	3972
   146  0000                     _PORTD	set	3971
   147  0000                     _PORTC	set	3970
   148  0000                     _PORTB	set	3969
   149  0000                     _PORTA	set	3968
   150  0000                     _LATE	set	3981
   151  0000                     _LATD	set	3980
   152  0000                     _LATC	set	3979
   153  0000                     _LATB	set	3978
   154  0000                     _LATA	set	3977
   155  0000                     _TRISE	set	3990
   156  0000                     _TRISD	set	3989
   157  0000                     _TRISC	set	3988
   158  0000                     _TRISB	set	3987
   159  0000                     _TRISA	set	3986
   160  0000                     _PIR1bits	set	3998
   161  0000                     _PORTBbits	set	3969
   162  0000                     _INTCONbits	set	4082
   163  0000                     _LATDbits	set	3980
   164  0000                     _PIR3bits	set	4004
   165  0000                     _RXB0D0	set	3942
   166  0000                     _T1CKPS0	set	32364
   167  0000                     _T1CKPS1	set	32365
   168  0000                     _TMR1CS	set	32361
   169  0000                     _T1RD16	set	32367
   170  0000                     _TMR1ON	set	32360
   171  0000                     _GIE	set	32663
   172  000603                     STR_1:
   173  000603  48                 	db	72	;'H'
   174  000604  65                 	db	101	;'e'
   175  000605  69                 	db	105	;'i'
   176  000606  67                 	db	103	;'g'
   177  000607  68                 	db	104	;'h'
   178  000608  74                 	db	116	;'t'
   179  000609  3D                 	db	61	;'='
   180  00060A  20                 	db	32
   181  00060B  20                 	db	32
   182  00060C  20                 	db	32
   183  00060D  20                 	db	32
   184  00060E  20                 	db	32
   185  00060F  20                 	db	32
   186  000610  63                 	db	99	;'c'
   187  000611  6D                 	db	109	;'m'
   188  000612  00                 	db	0
   189  000613                     STR_2:
   190  000613  58                 	db	88	;'X'
   191  000614  58                 	db	88	;'X'
   192  000615  58                 	db	88	;'X'
   193  000616  00                 	db	0
   194                           
   195                           ; #config settings
   196  000617  00                 	db	0	; dummy byte at the end
   197  0000                     
   198                           	psect	cinit
   199  00222E                     __pcinit:
   200                           	opt stack 0
   201  00222E                     start_initialization:
   202                           	opt stack 0
   203  00222E                     __initialization:
   204                           	opt stack 0
   205                           
   206                           ; Clear objects allocated to BANK0 (34 bytes)
   207  00222E  EE00  F0A9         	lfsr	0,__pbssBANK0
   208  002232  0E22               	movlw	34
   209  002234                     clear_0:
   210  002234  6AEE               	clrf	postinc0,c
   211  002236  06E8               	decf	wreg,f,c
   212  002238  E1FD               	bnz	clear_0
   213                           
   214                           ; Clear objects allocated to COMRAM (26 bytes)
   215  00223A  EE00  F036         	lfsr	0,__pbssCOMRAM
   216  00223E  0E1A               	movlw	26
   217  002240                     clear_1:
   218  002240  6AEE               	clrf	postinc0,c
   219  002242  06E8               	decf	wreg,f,c
   220  002244  E1FD               	bnz	clear_1
   221  002246                     end_of_initialization:
   222                           	opt stack 0
   223  002246                     __end_of__initialization:
   224                           	opt stack 0
   225  002246  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   226  002248  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   227  00224A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   228  00224C  6EF8               	movwf	tblptru,c
   229  00224E  0100               	movlb	0
   230  002250  EF28  F009         	goto	_main	;jump to C main() function
   231                           tblptru	equ	0xFF8
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	bssCOMRAM
   236  000036                     __pbssCOMRAM:
   237                           	opt stack 0
   238  000036                     _Reply:
   239                           	opt stack 0
   240  000036                     	ds	18
   241  000048                     _distance:
   242                           	opt stack 0
   243  000048                     	ds	2
   244  00004A                     _clockcounts:
   245                           	opt stack 0
   246  00004A                     	ds	2
   247  00004C                     _average_dist:
   248                           	opt stack 0
   249  00004C                     	ds	2
   250  00004E                     _ui8Status:
   251                           	opt stack 0
   252  00004E                     	ds	1
   253  00004F                     _counter:
   254                           	opt stack 0
   255  00004F                     	ds	1
   256                           tblptru	equ	0xFF8
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           
   260                           	psect	bssBANK0
   261  0000A9                     __pbssBANK0:
   262                           	opt stack 0
   263  0000A9                     _Sync_Arrival_Time:
   264                           	opt stack 0
   265  0000A9                     	ds	4
   266  0000AD                     _tickcntr:
   267                           	opt stack 0
   268  0000AD                     	ds	4
   269  0000B1                     _dist:
   270                           	opt stack 0
   271  0000B1                     	ds	2
   272  0000B3                     _AllowTxFlag:
   273                           	opt stack 0
   274  0000B3                     	ds	1
   275  0000B4                     _bRxMsgFlag:
   276                           	opt stack 0
   277  0000B4                     	ds	1
   278  0000B5                     _rxCANMessage:
   279                           	opt stack 0
   280  0000B5                     	ds	18
   281  0000C7                     _str_dist:
   282                           	opt stack 0
   283  0000C7                     	ds	4
   284                           tblptru	equ	0xFF8
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           
   288                           	psect	cstackBANK0
   289  000060                     __pcstackBANK0:
   290                           	opt stack 0
   291  000060                     ??_CANMessageGet:
   292  000060                     ___fttol@sign1:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x0
   296  000060                     	ds	1
   297  000061                     ___fttol@lval:
   298                           	opt stack 0
   299                           
   300                           ; 4 bytes @ 0x1
   301  000061                     	ds	4
   302  000065                     ___fttol@exp1:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x5
   306  000065                     	ds	1
   307  000066                     AvgMeasure@counter:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x6
   311  000066                     	ds	1
   312  000067                     AvgMeasure@average_dist:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x7
   316  000067                     	ds	30
   317  000085                     ??_main:
   318                           
   319                           ; 1 bytes @ 0x25
   320  000085                     	ds	12
   321  000091                     main@response_time:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x31
   325  000091                     	ds	2
   326  000093                     main@ui16ReplyData:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x33
   330  000093                     	ds	2
   331  000095                     main@sync_period:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x35
   335  000095                     	ds	2
   336  000097                     main@Reply:
   337                           	opt stack 0
   338                           
   339                           ; 18 bytes @ 0x37
   340  000097                     	ds	18
   341                           tblptru	equ	0xFF8
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345                           	psect	cstackCOMRAM
   346  000001                     __pcstackCOMRAM:
   347                           	opt stack 0
   348  000001                     CANIntStatus@status:
   349                           	opt stack 0
   350  000001                     i2CANIntClear@type:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x0
   354  000001                     	ds	1
   355  000002                     ??_ISR:
   356                           
   357                           ; 1 bytes @ 0x1
   358  000002                     	ds	14
   359  000010                     ??_CANSetMode:
   360  000010                     ?___lwdiv:
   361                           	opt stack 0
   362  000010                     ?___lwmod:
   363                           	opt stack 0
   364  000010                     ?___ftpack:
   365                           	opt stack 0
   366  000010                     GPIOPinTypeGPIOOutput@Mask:
   367                           	opt stack 0
   368  000010                     GPIOPinWrite@Mask:
   369                           	opt stack 0
   370  000010                     CANIntEnable@type:
   371                           	opt stack 0
   372  000010                     CANIntClear@type:
   373                           	opt stack 0
   374  000010                     CANSetMask@pObject:
   375                           	opt stack 0
   376  000010                     CANSetFilter@pObject:
   377                           	opt stack 0
   378  000010                     CANMessageGet@psMsgObject:
   379                           	opt stack 0
   380  000010                     CANMessageSend@psMsgObject:
   381                           	opt stack 0
   382  000010                     ___lwdiv@dividend:
   383                           	opt stack 0
   384  000010                     ___lwmod@dividend:
   385                           	opt stack 0
   386  000010                     ___ftpack@arg:
   387                           	opt stack 0
   388  000010                     CANSetBaudRate@baudrate:
   389                           	opt stack 0
   390  000010                     Clock_Init@ulConstCompareValue:
   391                           	opt stack 0
   392                           
   393                           ; 4 bytes @ 0xF
   394  000010                     	ds	1
   395  000011                     GPIOPinTypeGPIOOutput@Port:
   396                           	opt stack 0
   397  000011                     GPIOPinWrite@Data:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x10
   401  000011                     	ds	1
   402  000012                     ??_GPIOPinWrite:
   403  000012                     ??_CANSetFilter:
   404  000012                     CANSetMode@mode:
   405                           	opt stack 0
   406  000012                     CANSetMask@ui8IDType:
   407                           	opt stack 0
   408  000012                     CANMessageGet@bClrPendingInt:
   409                           	opt stack 0
   410  000012                     CANMessageSend@FrameType:
   411                           	opt stack 0
   412  000012                     ___lwdiv@divisor:
   413                           	opt stack 0
   414  000012                     ___lwmod@divisor:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x11
   418  000012                     	ds	1
   419  000013                     ??_CANMessageSend:
   420  000013                     GPIOPinWrite@Port:
   421                           	opt stack 0
   422  000013                     CANSetMask@bDoubleBuffer:
   423                           	opt stack 0
   424  000013                     ___ftpack@exp:
   425                           	opt stack 0
   426  000013                     CANMessageGet@i:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x12
   430  000013                     	ds	1
   431  000014                     ??_CANSetMask:
   432  000014                     SendCommand@command_id:
   433                           	opt stack 0
   434  000014                     SendData@data:
   435                           	opt stack 0
   436  000014                     ___ftpack@sign:
   437                           	opt stack 0
   438  000014                     ___lwdiv@counter:
   439                           	opt stack 0
   440  000014                     ___lwmod@counter:
   441                           	opt stack 0
   442  000014                     Clock_Init@ulCompareValue:
   443                           	opt stack 0
   444                           
   445                           ; 4 bytes @ 0x13
   446  000014                     	ds	1
   447  000015                     ??___ftpack:
   448  000015                     LCD_GoToXy@y:
   449                           	opt stack 0
   450  000015                     LCD_DispString@StrPtr:
   451                           	opt stack 0
   452  000015                     CANMessageGet@rxBuffer_ptr:
   453                           	opt stack 0
   454  000015                     ___lwdiv@quotient:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x14
   458  000015                     	ds	1
   459  000016                     LCD_GoToXy@x:
   460                           	opt stack 0
   461  000016                     CANSetFilter@RXFEIDH_PTR:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x15
   465  000016                     	ds	1
   466  000017                     ??_LCD_Init:
   467  000017                     itoa_new@val:
   468                           	opt stack 0
   469  000017                     CANMessageGet@data_ptr:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x16
   473  000017                     	ds	1
   474  000018                     ?___lwtoft:
   475                           	opt stack 0
   476  000018                     CANSetFilter@RXFEIDL_PTR:
   477                           	opt stack 0
   478  000018                     ___lwtoft@c:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x17
   482  000018                     	ds	1
   483  000019                     CANSetMask@ui8CanBfrNum:
   484                           	opt stack 0
   485  000019                     itoa_new@str:
   486                           	opt stack 0
   487  000019                     CANMessageGet@i_975:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x18
   491  000019                     	ds	1
   492  00001A                     CANSetFilter@ui8CanFltrNum:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x19
   496  00001A                     	ds	1
   497  00001B                     ?___ftdiv:
   498                           	opt stack 0
   499  00001B                     itoa_new@temp_val:
   500                           	opt stack 0
   501  00001B                     CANSetFilter@RXFSIDH_PTR:
   502                           	opt stack 0
   503  00001B                     CANMessageGet@rxBuffer_ptr_976:
   504                           	opt stack 0
   505  00001B                     CANMessageSend@TXBEIDH_PTR:
   506                           	opt stack 0
   507  00001B                     ___ftdiv@f1:
   508                           	opt stack 0
   509                           
   510                           ; 3 bytes @ 0x1A
   511  00001B                     	ds	2
   512  00001D                     CANSetFilter@RXFSIDL_PTR:
   513                           	opt stack 0
   514  00001D                     CANMessageGet@data_ptr_977:
   515                           	opt stack 0
   516  00001D                     CANMessageSend@TXBEIDL_PTR:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x1C
   520  00001D                     	ds	1
   521  00001E                     ___ftdiv@f2:
   522                           	opt stack 0
   523                           
   524                           ; 3 bytes @ 0x1D
   525  00001E                     	ds	1
   526  00001F                     CANMessageGet@RXMsgFlag:
   527                           	opt stack 0
   528  00001F                     CANSetFilter@FILTER_BASE_ADDRESS:
   529                           	opt stack 0
   530  00001F                     CANMessageSend@TXBD0_PTR:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x1E
   534  00001F                     	ds	2
   535  000021                     ??___ftdiv:
   536  000021                     CANMessageSend@i:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x20
   540  000021                     	ds	2
   541  000023                     CANMessageSend@data_reg_ptr:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x22
   545  000023                     	ds	1
   546  000024                     ___ftdiv@cntr:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x23
   550  000024                     	ds	1
   551  000025                     CANMessageSend@data_ptr:
   552                           	opt stack 0
   553  000025                     ___ftdiv@f3:
   554                           	opt stack 0
   555                           
   556                           ; 3 bytes @ 0x24
   557  000025                     	ds	2
   558  000027                     CANMessageSend@TXBCON_PTR:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x26
   562  000027                     	ds	1
   563  000028                     ___ftdiv@exp:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x27
   567  000028                     	ds	1
   568  000029                     ___ftdiv@sign:
   569                           	opt stack 0
   570  000029                     CANMessageSend@TXBSIDH_PTR:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x28
   574  000029                     	ds	1
   575  00002A                     ?___fttol:
   576                           	opt stack 0
   577  00002A                     ___fttol@f1:
   578                           	opt stack 0
   579                           
   580                           ; 3 bytes @ 0x29
   581  00002A                     	ds	1
   582  00002B                     CANMessageSend@TXBDLC_PTR:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x2A
   586  00002B                     	ds	2
   587  00002D                     CANMessageSend@TXB_BASE_ADDRESS:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x2C
   591  00002D                     	ds	1
   592  00002E                     ??___fttol:
   593                           
   594                           ; 1 bytes @ 0x2D
   595  00002E                     	ds	1
   596  00002F                     CANMessageSend@TXBSIDL_PTR:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x2E
   600  00002F                     	ds	4
   601  000033                     ?_AvgMeasure:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x32
   605  000033                     	ds	2
   606  000035                     ??_AvgMeasure:
   607                           
   608                           ; 1 bytes @ 0x34
   609  000035                     	ds	1
   610                           tblptru	equ	0xFF8
   611                           postinc0	equ	0xFEE
   612                           wreg	equ	0xFE8
   613                           
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 131 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  Reply          18   55[BANK0 ] struct .
   624 ;;  sync_period     2   53[BANK0 ] unsigned int 
   625 ;;  ui16ReplyDat    2   51[BANK0 ] unsigned int 
   626 ;;  response_tim    2   49[BANK0 ] unsigned int 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  2   65[None  ] int 
   629 ;; Registers used:
   630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   636 ;;      Params:         0       0       0       0       0       0       0
   637 ;;      Locals:         0      24       0       0       0       0       0
   638 ;;      Temps:          0      12       0       0       0       0       0
   639 ;;      Totals:         0      36       0       0       0       0       0
   640 ;;Total ram usage:       36 bytes
   641 ;; Hardware stack levels required when called:    6
   642 ;; This function calls:
   643 ;;		_AvgMeasure
   644 ;;		_CANMessageGet
   645 ;;		_CANMessageSend
   646 ;;		_Clock_Init
   647 ;;		_ComInit
   648 ;;		_Hcsr04_Init
   649 ;;		_LCD_DispString
   650 ;;		_LCD_GoToXy
   651 ;;		_LCD_Init
   652 ;;		_LedsInit
   653 ;;		___lwdiv
   654 ;;		_itoa_new
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           	psect	text0
   661  001250                     __ptext0:
   662                           	opt stack 0
   663  001250                     _main:
   664                           	opt stack 0
   665  001250  FFFF               	dw	65535	; assembler added errata NOP
   666                           
   667                           ;main.c: 135: uint16_t ui16ReplyData = 0 ;
   668                           
   669                           ;incstack = 0
   670  001252  0E00               	movlw	0
   671  001254  0100               	movlb	0	; () banked
   672  001256  6F94               	movwf	(main@ui16ReplyData+1)& (0+255),b
   673  001258  0E00               	movlw	0
   674  00125A  6F93               	movwf	main@ui16ReplyData& (0+255),b
   675                           
   676                           ;main.c: 145: uint16_t response_time = 0;
   677  00125C  0E00               	movlw	0
   678  00125E  0100               	movlb	0	; () banked
   679  001260  6F92               	movwf	(main@response_time+1)& (0+255),b
   680  001262  0E00               	movlw	0
   681  001264  6F91               	movwf	main@response_time& (0+255),b
   682                           
   683                           ;main.c: 146: uint16_t sync_period = 0;
   684  001266  0E00               	movlw	0
   685  001268  0100               	movlb	0	; () banked
   686  00126A  6F96               	movwf	(main@sync_period+1)& (0+255),b
   687  00126C  0E00               	movlw	0
   688  00126E  6F95               	movwf	main@sync_period& (0+255),b
   689                           
   690                           ;main.c: 147: rxCANMessage.ui32MsgID = 0x100;
   691  001270  0E00               	movlw	0
   692  001272  0100               	movlb	0	; () banked
   693  001274  6FB5               	movwf	_rxCANMessage& (0+255),b
   694  001276  0E01               	movlw	1
   695  001278  6FB6               	movwf	(_rxCANMessage+1)& (0+255),b
   696  00127A  0E00               	movlw	0
   697  00127C  6FB7               	movwf	(_rxCANMessage+2)& (0+255),b
   698  00127E  0E00               	movlw	0
   699  001280  6FB8               	movwf	(_rxCANMessage+3)& (0+255),b
   700                           
   701                           ;main.c: 148: rxCANMessage.ui32MsgIDMask = 0x7ff;
   702  001282  0EFF               	movlw	255
   703  001284  0100               	movlb	0	; () banked
   704  001286  6FB9               	movwf	(_rxCANMessage+4)& (0+255),b
   705  001288  0E07               	movlw	7
   706  00128A  6FBA               	movwf	(_rxCANMessage+5)& (0+255),b
   707  00128C  0E00               	movlw	0
   708  00128E  6FBB               	movwf	(_rxCANMessage+6)& (0+255),b
   709  001290  0E00               	movlw	0
   710  001292  6FBC               	movwf	(_rxCANMessage+7)& (0+255),b
   711                           
   712                           ; BSR set to: 0
   713                           ;main.c: 149: rxCANMessage.pui8MsgData = (uint8_t *)&sync_period;
   714  001294  0E95               	movlw	low main@sync_period
   715  001296  0100               	movlb	0	; () banked
   716  001298  6FC5               	movwf	(_rxCANMessage+16)& (0+255),b
   717  00129A  0E00               	movlw	high main@sync_period
   718  00129C  0100               	movlb	0	; () banked
   719  00129E  6FC6               	movwf	(_rxCANMessage+17)& (0+255),b
   720                           
   721                           ; BSR set to: 0
   722                           ;main.c: 152: tCANMsgObject Reply;
   723                           ;main.c: 158: Reply.ui32MsgID = ((0x02<<8) | (0x01)) ;
   724  0012A0  0E01               	movlw	1
   725  0012A2  0100               	movlb	0	; () banked
   726  0012A4  6F97               	movwf	main@Reply& (0+255),b
   727  0012A6  0E02               	movlw	2
   728  0012A8  6F98               	movwf	(main@Reply+1)& (0+255),b
   729  0012AA  0E00               	movlw	0
   730  0012AC  6F99               	movwf	(main@Reply+2)& (0+255),b
   731  0012AE  0E00               	movlw	0
   732  0012B0  6F9A               	movwf	(main@Reply+3)& (0+255),b
   733                           
   734                           ; BSR set to: 0
   735                           ;main.c: 159: Reply.ui32MsgLen = sizeof(ui16ReplyData);
   736  0012B2  0E02               	movlw	2
   737  0012B4  0100               	movlb	0	; () banked
   738  0012B6  6FA3               	movwf	(main@Reply+12)& (0+255),b
   739  0012B8  0E00               	movlw	0
   740  0012BA  6FA4               	movwf	(main@Reply+13)& (0+255),b
   741  0012BC  0E00               	movlw	0
   742  0012BE  6FA5               	movwf	(main@Reply+14)& (0+255),b
   743  0012C0  0E00               	movlw	0
   744  0012C2  6FA6               	movwf	(main@Reply+15)& (0+255),b
   745                           
   746                           ; BSR set to: 0
   747                           ;main.c: 160: Reply.pui8MsgData = (uint8_t *)(&ui16ReplyData);
   748  0012C4  0E93               	movlw	low main@ui16ReplyData
   749  0012C6  0100               	movlb	0	; () banked
   750  0012C8  6FA7               	movwf	(main@Reply+16)& (0+255),b
   751  0012CA  0E00               	movlw	high main@ui16ReplyData
   752  0012CC  0100               	movlb	0	; () banked
   753  0012CE  6FA8               	movwf	(main@Reply+17)& (0+255),b
   754                           
   755                           ; BSR set to: 0
   756                           ;main.c: 163: Clock_Init();
   757  0012D0  EC4D  F010         	call	_Clock_Init	;wreg free
   758                           
   759                           ;main.c: 164: ComInit();
   760  0012D4  EC1E  F010         	call	_ComInit	;wreg free
   761                           
   762                           ;main.c: 165: LedsInit();
   763  0012D8  EC3F  F011         	call	_LedsInit	;wreg free
   764                           
   765                           ;main.c: 166: Hcsr04_Init();
   766  0012DC  EC2A  F011         	call	_Hcsr04_Init	;wreg free
   767                           
   768                           ;main.c: 167: LCD_Init();
   769  0012E0  EC0E  F00F         	call	_LCD_Init	;wreg free
   770                           
   771                           ;main.c: 169: LCD_DispString("Height=      cm");
   772  0012E4  0E03               	movlw	low STR_1
   773  0012E6  6E15               	movwf	LCD_DispString@StrPtr,c
   774  0012E8  0E06               	movlw	high STR_1
   775  0012EA  6E16               	movwf	LCD_DispString@StrPtr+1,c
   776  0012EC  ECBE  F00F         	call	_LCD_DispString	;wreg free
   777  0012F0                     l3131:
   778  0012F0  FFFF               	dw	65535	; assembler added errata NOP
   779                           
   780                           ;main.c: 172: {
   781                           ;main.c: 174: dist = AvgMeasure();
   782  0012F2  EC9F  F00C         	call	_AvgMeasure	;wreg free
   783  0012F6  C033  F0B1         	movff	?_AvgMeasure,_dist
   784  0012FA  C034  F0B2         	movff	?_AvgMeasure+1,_dist+1
   785                           
   786                           ;main.c: 177: if(dist<400)
   787  0012FE  0E90               	movlw	144
   788  001300  0100               	movlb	0	; () banked
   789  001302  5DB1               	subwf	_dist& (0+255),w,b
   790  001304  0E01               	movlw	1
   791  001306  0100               	movlb	0	; () banked
   792  001308  59B2               	subwfb	(_dist+1)& (0+255),w,b
   793  00130A  B0D8               	btfsc	status,0,c
   794  00130C  D016               	goto	l3141
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 178: {
   798                           ;main.c: 179: itoa_new(dist, str_dist);
   799  00130E  C0B1  F017         	movff	_dist,itoa_new@val
   800  001312  C0B2  F018         	movff	_dist+1,itoa_new@val+1
   801  001316  0EC7               	movlw	low _str_dist
   802  001318  6E19               	movwf	itoa_new@str,c
   803  00131A  0E00               	movlw	high _str_dist
   804  00131C  6E1A               	movwf	itoa_new@str+1,c
   805  00131E  ECFB  F00C         	call	_itoa_new	;wreg free
   806                           
   807                           ;main.c: 180: LCD_GoToXy(8,0);
   808  001322  0E00               	movlw	0
   809  001324  6E15               	movwf	LCD_GoToXy@y,c
   810  001326  0E08               	movlw	8
   811  001328  ECEE  F010         	call	_LCD_GoToXy
   812                           
   813                           ;main.c: 181: LCD_DispString(str_dist);
   814  00132C  0EC7               	movlw	low _str_dist
   815  00132E  6E15               	movwf	LCD_DispString@StrPtr,c
   816  001330  0E00               	movlw	high _str_dist
   817  001332  6E16               	movwf	LCD_DispString@StrPtr+1,c
   818  001334  ECBE  F00F         	call	_LCD_DispString	;wreg free
   819                           
   820                           ;main.c: 182: }
   821  001338  D00C               	goto	l3145
   822  00133A                     l3141:
   823  00133A  FFFF               	dw	65535	; assembler added errata NOP
   824                           
   825                           ;main.c: 184: else
   826                           ;main.c: 185: {
   827                           ;main.c: 186: LCD_GoToXy(8,0);
   828  00133C  0E00               	movlw	0
   829  00133E  6E15               	movwf	LCD_GoToXy@y,c
   830  001340  0E08               	movlw	8
   831  001342  ECEE  F010         	call	_LCD_GoToXy
   832                           
   833                           ;main.c: 187: LCD_DispString("XXX");
   834  001346  0E13               	movlw	low STR_2
   835  001348  6E15               	movwf	LCD_DispString@StrPtr,c
   836  00134A  0E06               	movlw	high STR_2
   837  00134C  6E16               	movwf	LCD_DispString@StrPtr+1,c
   838  00134E  ECBE  F00F         	call	_LCD_DispString	;wreg free
   839  001352                     l3145:
   840  001352  FFFF               	dw	65535	; assembler added errata NOP
   841                           
   842                           ;main.c: 188: }
   843                           ;main.c: 193: ui16ReplyData = dist;
   844  001354  C0B1  F093         	movff	_dist,main@ui16ReplyData
   845  001358  C0B2  F094         	movff	_dist+1,main@ui16ReplyData+1
   846                           
   847                           ;main.c: 196: if( bRxMsgFlag == 1 )
   848  00135C  0100               	movlb	0	; () banked
   849  00135E  05B4               	decf	_bRxMsgFlag& (0+255),w,b	;volatile
   850  001360  A4D8               	btfss	status,2,c
   851  001362  D034               	goto	l3167
   852                           
   853                           ; BSR set to: 0
   854                           ;main.c: 197: {
   855                           ;main.c: 198: GIE = 0;
   856  001364  9EF2               	bcf	intcon,7,c	;volatile
   857                           
   858                           ; BSR set to: 0
   859                           ;main.c: 199: CANMessageGet( &rxCANMessage, 0 );
   860  001366  0EB5               	movlw	low _rxCANMessage
   861  001368  6E10               	movwf	CANMessageGet@psMsgObject,c
   862  00136A  0E00               	movlw	high _rxCANMessage
   863  00136C  6E11               	movwf	CANMessageGet@psMsgObject+1,c
   864  00136E  0E00               	movlw	0
   865  001370  6E12               	movwf	CANMessageGet@bClrPendingInt,c
   866  001372  EC0C  F003         	call	_CANMessageGet	;wreg free
   867                           
   868                           ;main.c: 201: Sync_Arrival_Time = tickcntr;
   869  001376  C0AD  F0A9         	movff	_tickcntr,_Sync_Arrival_Time	;volatile
   870  00137A  C0AE  F0AA         	movff	_tickcntr+1,_Sync_Arrival_Time+1	;volatile
   871  00137E  C0AF  F0AB         	movff	_tickcntr+2,_Sync_Arrival_Time+2	;volatile
   872  001382  C0B0  F0AC         	movff	_tickcntr+3,_Sync_Arrival_Time+3	;volatile
   873                           
   874                           ;main.c: 202: GIE = 1;
   875  001386  8EF2               	bsf	intcon,7,c	;volatile
   876                           
   877                           ;main.c: 204: bRxMsgFlag = 0;
   878  001388  0E00               	movlw	0
   879  00138A  0100               	movlb	0	; () banked
   880  00138C  6FB4               	movwf	_bRxMsgFlag& (0+255),b	;volatile
   881                           
   882                           ; BSR set to: 0
   883                           ;main.c: 209: if( rxCANMessage.ui32MsgID == 0x100)
   884  00138E  0100               	movlb	0	; () banked
   885  001390  05B6               	decf	(_rxCANMessage+1)& (0+255),w,b
   886  001392  0100               	movlb	0	; () banked
   887  001394  11B5               	iorwf	_rxCANMessage& (0+255),w,b
   888  001396  0100               	movlb	0	; () banked
   889  001398  11B7               	iorwf	(_rxCANMessage+2)& (0+255),w,b
   890  00139A  0100               	movlb	0	; () banked
   891  00139C  11B8               	iorwf	(_rxCANMessage+3)& (0+255),w,b
   892  00139E  A4D8               	btfss	status,2,c
   893  0013A0  D015               	goto	l3167
   894                           
   895                           ; BSR set to: 0
   896                           ;main.c: 210: {
   897                           ;main.c: 211: AllowTxFlag = 1;
   898  0013A2  0E01               	movlw	1
   899  0013A4  0100               	movlb	0	; () banked
   900  0013A6  6FB3               	movwf	_AllowTxFlag& (0+255),b	;volatile
   901                           
   902                           ; BSR set to: 0
   903                           ;main.c: 212: response_time = sync_period * (0x01);
   904  0013A8  C095  F091         	movff	main@sync_period,main@response_time
   905  0013AC  C096  F092         	movff	main@sync_period+1,main@response_time+1
   906                           
   907                           ; BSR set to: 0
   908                           ;main.c: 213: response_time = response_time/100;
   909  0013B0  C091  F010         	movff	main@response_time,___lwdiv@dividend
   910  0013B4  C092  F011         	movff	main@response_time+1,___lwdiv@dividend+1
   911  0013B8  0E00               	movlw	0
   912  0013BA  6E13               	movwf	___lwdiv@divisor+1,c
   913  0013BC  0E64               	movlw	100
   914  0013BE  6E12               	movwf	___lwdiv@divisor,c
   915  0013C0  ECEE  F00F         	call	___lwdiv	;wreg free
   916  0013C4  C010  F091         	movff	?___lwdiv,main@response_time
   917  0013C8  C011  F092         	movff	?___lwdiv+1,main@response_time+1
   918  0013CC                     l3167:
   919  0013CC  FFFF               	dw	65535	; assembler added errata NOP
   920                           
   921                           ;main.c: 214: }
   922                           ;main.c: 216: }
   923                           ;main.c: 219: if( AllowTxFlag == 1)
   924  0013CE  0100               	movlb	0	; () banked
   925  0013D0  05B3               	decf	_AllowTxFlag& (0+255),w,b	;volatile
   926  0013D2  A4D8               	btfss	status,2,c
   927  0013D4  D053               	goto	l73
   928                           
   929                           ; BSR set to: 0
   930                           ;main.c: 220: {
   931                           ;main.c: 223: if( ( tickcntr - Sync_Arrival_Time ) > response_time )
   932  0013D6  C0A9  F085         	movff	_Sync_Arrival_Time,??_main	;volatile
   933  0013DA  C0AA  F086         	movff	_Sync_Arrival_Time+1,??_main+1	;volatile
   934  0013DE  C0AB  F087         	movff	_Sync_Arrival_Time+2,??_main+2	;volatile
   935  0013E2  C0AC  F088         	movff	_Sync_Arrival_Time+3,??_main+3	;volatile
   936  0013E6  0100               	movlb	0	; () banked
   937  0013E8  1F85               	comf	??_main& (0+255),f,b
   938  0013EA  1F86               	comf	(??_main+1)& (0+255),f,b
   939  0013EC  1F87               	comf	(??_main+2)& (0+255),f,b
   940  0013EE  1F88               	comf	(??_main+3)& (0+255),f,b
   941  0013F0  2B85               	incf	??_main& (0+255),f,b
   942  0013F2  0E00               	movlw	0
   943  0013F4  2386               	addwfc	(??_main+1)& (0+255),f,b
   944  0013F6  2387               	addwfc	(??_main+2)& (0+255),f,b
   945  0013F8  2388               	addwfc	(??_main+3)& (0+255),f,b
   946  0013FA  0100               	movlb	0	; () banked
   947  0013FC  51AD               	movf	_tickcntr& (0+255),w,b	;volatile
   948  0013FE  0100               	movlb	0	; () banked
   949  001400  2585               	addwf	??_main& (0+255),w,b
   950  001402  0100               	movlb	0	; () banked
   951  001404  6F89               	movwf	(??_main+4)& (0+255),b
   952  001406  0100               	movlb	0	; () banked
   953  001408  51AE               	movf	(_tickcntr+1)& (0+255),w,b	;volatile
   954  00140A  0100               	movlb	0	; () banked
   955  00140C  2186               	addwfc	(??_main+1)& (0+255),w,b
   956  00140E  0100               	movlb	0	; () banked
   957  001410  6F8A               	movwf	(??_main+5)& (0+255),b
   958  001412  0100               	movlb	0	; () banked
   959  001414  51AF               	movf	(_tickcntr+2)& (0+255),w,b	;volatile
   960  001416  0100               	movlb	0	; () banked
   961  001418  2187               	addwfc	(??_main+2)& (0+255),w,b
   962  00141A  0100               	movlb	0	; () banked
   963  00141C  6F8B               	movwf	(??_main+6)& (0+255),b
   964  00141E  0100               	movlb	0	; () banked
   965  001420  51B0               	movf	(_tickcntr+3)& (0+255),w,b	;volatile
   966  001422  0100               	movlb	0	; () banked
   967  001424  2188               	addwfc	(??_main+3)& (0+255),w,b
   968  001426  0100               	movlb	0	; () banked
   969  001428  6F8C               	movwf	(??_main+7)& (0+255),b
   970  00142A  0100               	movlb	0	; () banked
   971  00142C  5191               	movf	main@response_time& (0+255),w,b
   972  00142E  0100               	movlb	0	; () banked
   973  001430  6F8D               	movwf	(??_main+8)& (0+255),b
   974  001432  0100               	movlb	0	; () banked
   975  001434  5192               	movf	(main@response_time+1)& (0+255),w,b
   976  001436  0100               	movlb	0	; () banked
   977  001438  6F8E               	movwf	(??_main+9)& (0+255),b
   978  00143A  0100               	movlb	0	; () banked
   979  00143C  6B8F               	clrf	(??_main+10)& (0+255),b
   980  00143E  0100               	movlb	0	; () banked
   981  001440  6B90               	clrf	(??_main+11)& (0+255),b
   982  001442  0100               	movlb	0	; () banked
   983  001444  5189               	movf	(??_main+4)& (0+255),w,b
   984  001446  0100               	movlb	0	; () banked
   985  001448  5D8D               	subwf	(??_main+8)& (0+255),w,b
   986  00144A  0100               	movlb	0	; () banked
   987  00144C  518A               	movf	(??_main+5)& (0+255),w,b
   988  00144E  0100               	movlb	0	; () banked
   989  001450  598E               	subwfb	(??_main+9)& (0+255),w,b
   990  001452  0100               	movlb	0	; () banked
   991  001454  518B               	movf	(??_main+6)& (0+255),w,b
   992  001456  0100               	movlb	0	; () banked
   993  001458  598F               	subwfb	(??_main+10)& (0+255),w,b
   994  00145A  0100               	movlb	0	; () banked
   995  00145C  518C               	movf	(??_main+7)& (0+255),w,b
   996  00145E  0100               	movlb	0	; () banked
   997  001460  5990               	subwfb	(??_main+11)& (0+255),w,b
   998  001462  B0D8               	btfsc	status,0,c
   999  001464  D00B               	goto	l73
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;main.c: 224: {
  1003                           ;main.c: 225: CANMessageSend( &Reply, 1<<2 );
  1004  001466  0E97               	movlw	low main@Reply
  1005  001468  6E10               	movwf	CANMessageSend@psMsgObject,c
  1006  00146A  0E00               	movlw	high main@Reply
  1007  00146C  6E11               	movwf	CANMessageSend@psMsgObject+1,c
  1008  00146E  0E04               	movlw	4
  1009  001470  6E12               	movwf	CANMessageSend@FrameType,c
  1010  001472  EC05  F006         	call	_CANMessageSend	;wreg free
  1011                           
  1012                           ;main.c: 226: AllowTxFlag = 0;
  1013  001476  0E00               	movlw	0
  1014  001478  0100               	movlb	0	; () banked
  1015  00147A  6FB3               	movwf	_AllowTxFlag& (0+255),b	;volatile
  1016  00147C                     l73:
  1017  00147C  FFFF               	dw	65535	; assembler added errata NOP
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;main.c: 234: if(PIR3bits.ERRIF == 1)
  1021  00147E  AAA4               	btfss	4004,5,c	;volatile
  1022  001480  D004               	goto	l74
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main.c: 235: {
  1026                           ;main.c: 236: LATDbits.LD2 = 1;
  1027  001482  848C               	bsf	3980,2,c	;volatile
  1028                           
  1029                           ;main.c: 237: LATDbits.LD3 = 0;
  1030  001484  968C               	bcf	3980,3,c	;volatile
  1031                           
  1032                           ;main.c: 239: PIR3bits.ERRIF = 0;
  1033  001486  9AA4               	bcf	4004,5,c	;volatile
  1034                           
  1035                           ;main.c: 240: }
  1036  001488  D733               	goto	l3131
  1037  00148A                     l74:
  1038  00148A  FFFF               	dw	65535	; assembler added errata NOP
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;main.c: 241: else
  1042                           ;main.c: 242: {
  1043                           ;main.c: 243: LATDbits.LD3 = 1;
  1044  00148C  868C               	bsf	3980,3,c	;volatile
  1045                           
  1046                           ;main.c: 244: LATDbits.LD2 = 0;
  1047  00148E  948C               	bcf	3980,2,c	;volatile
  1048                           
  1049                           ; BSR set to: 0
  1050                           
  1051                           ; BSR set to: 0
  1052  001490  D72F               	goto	l3131
  1053  001492                     __end_of_main:
  1054                           	opt stack 0
  1055                           tblptru	equ	0xFF8
  1056                           intcon	equ	0xFF2
  1057                           postinc0	equ	0xFEE
  1058                           wreg	equ	0xFE8
  1059                           status	equ	0xFD8
  1060                           
  1061 ;; *************** function _itoa_new *****************
  1062 ;; Defined at:
  1063 ;;		line 113 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  val             2   22[COMRAM] unsigned int 
  1066 ;;  str             2   24[COMRAM] PTR unsigned char 
  1067 ;;		 -> str_dist(4), 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  temp_val        2   26[COMRAM] unsigned int 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1079 ;;      Params:         4       0       0       0       0       0       0
  1080 ;;      Locals:         2       0       0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0
  1082 ;;      Totals:         6       0       0       0       0       0       0
  1083 ;;Total ram usage:        6 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    3
  1086 ;; This function calls:
  1087 ;;		___lwdiv
  1088 ;;		___lwmod
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text1
  1095  0019F6                     __ptext1:
  1096                           	opt stack 0
  1097  0019F6                     _itoa_new:
  1098                           	opt stack 0
  1099  0019F6  FFFF               	dw	65535	; assembler added errata NOP
  1100                           
  1101                           ;main.c: 115: uint16_t temp_val;
  1102                           ;main.c: 116: temp_val = val;
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;incstack = 0
  1106  0019F8  C017  F01B         	movff	itoa_new@val,itoa_new@temp_val
  1107  0019FC  C018  F01C         	movff	itoa_new@val+1,itoa_new@temp_val+1
  1108                           
  1109                           ;main.c: 117: str[0] = (temp_val / 100) + 48;
  1110  001A00  C01B  F010         	movff	itoa_new@temp_val,___lwdiv@dividend
  1111  001A04  C01C  F011         	movff	itoa_new@temp_val+1,___lwdiv@dividend+1
  1112  001A08  0E00               	movlw	0
  1113  001A0A  6E13               	movwf	___lwdiv@divisor+1,c
  1114  001A0C  0E64               	movlw	100
  1115  001A0E  6E12               	movwf	___lwdiv@divisor,c
  1116  001A10  ECEE  F00F         	call	___lwdiv	;wreg free
  1117  001A14  5010               	movf	?___lwdiv,w,c
  1118  001A16  0F30               	addlw	48
  1119  001A18  C019  FFD9         	movff	itoa_new@str,fsr2l
  1120  001A1C  C01A  FFDA         	movff	itoa_new@str+1,fsr2h
  1121  001A20  6EDF               	movwf	indf2,c
  1122                           
  1123                           ;main.c: 118: temp_val = (temp_val % 100);
  1124  001A22  C01B  F010         	movff	itoa_new@temp_val,___lwmod@dividend
  1125  001A26  C01C  F011         	movff	itoa_new@temp_val+1,___lwmod@dividend+1
  1126  001A2A  0E00               	movlw	0
  1127  001A2C  6E13               	movwf	___lwmod@divisor+1,c
  1128  001A2E  0E64               	movlw	100
  1129  001A30  6E12               	movwf	___lwmod@divisor,c
  1130  001A32  ECA8  F010         	call	___lwmod	;wreg free
  1131  001A36  C010  F01B         	movff	?___lwmod,itoa_new@temp_val
  1132  001A3A  C011  F01C         	movff	?___lwmod+1,itoa_new@temp_val+1
  1133                           
  1134                           ;main.c: 119: str[1] = (temp_val / 10) + 48;
  1135  001A3E  EE20 F001          	lfsr	2,1
  1136  001A42  5019               	movf	itoa_new@str,w,c
  1137  001A44  26D9               	addwf	fsr2l,f,c
  1138  001A46  501A               	movf	itoa_new@str+1,w,c
  1139  001A48  22DA               	addwfc	fsr2h,f,c
  1140  001A4A  C01B  F010         	movff	itoa_new@temp_val,___lwdiv@dividend
  1141  001A4E  C01C  F011         	movff	itoa_new@temp_val+1,___lwdiv@dividend+1
  1142  001A52  0E00               	movlw	0
  1143  001A54  6E13               	movwf	___lwdiv@divisor+1,c
  1144  001A56  0E0A               	movlw	10
  1145  001A58  6E12               	movwf	___lwdiv@divisor,c
  1146  001A5A  ECEE  F00F         	call	___lwdiv	;wreg free
  1147  001A5E  5010               	movf	?___lwdiv,w,c
  1148  001A60  0F30               	addlw	48
  1149  001A62  6EDF               	movwf	indf2,c
  1150                           
  1151                           ;main.c: 120: str[2] = (temp_val % 10) + 48;
  1152  001A64  EE20 F002          	lfsr	2,2
  1153  001A68  5019               	movf	itoa_new@str,w,c
  1154  001A6A  26D9               	addwf	fsr2l,f,c
  1155  001A6C  501A               	movf	itoa_new@str+1,w,c
  1156  001A6E  22DA               	addwfc	fsr2h,f,c
  1157  001A70  C01B  F010         	movff	itoa_new@temp_val,___lwmod@dividend
  1158  001A74  C01C  F011         	movff	itoa_new@temp_val+1,___lwmod@dividend+1
  1159  001A78  0E00               	movlw	0
  1160  001A7A  6E13               	movwf	___lwmod@divisor+1,c
  1161  001A7C  0E0A               	movlw	10
  1162  001A7E  6E12               	movwf	___lwmod@divisor,c
  1163  001A80  ECA8  F010         	call	___lwmod	;wreg free
  1164  001A84  5010               	movf	?___lwmod,w,c
  1165  001A86  0F30               	addlw	48
  1166  001A88  6EDF               	movwf	indf2,c
  1167                           
  1168                           ;main.c: 121: str[3] = '\0';
  1169  001A8A  EE20 F003          	lfsr	2,3
  1170  001A8E  5019               	movf	itoa_new@str,w,c
  1171  001A90  26D9               	addwf	fsr2l,f,c
  1172  001A92  501A               	movf	itoa_new@str+1,w,c
  1173  001A94  22DA               	addwfc	fsr2h,f,c
  1174  001A96  0E00               	movlw	0
  1175  001A98  6EDF               	movwf	indf2,c
  1176  001A9A  0012               	return		;funcret
  1177  001A9C  FFFF               	dw	65535	; errata NOP
  1178  001A9E                     __end_of_itoa_new:
  1179                           	opt stack 0
  1180                           tblptru	equ	0xFF8
  1181                           intcon	equ	0xFF2
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           indf2	equ	0xFDF
  1185                           fsr2h	equ	0xFDA
  1186                           fsr2l	equ	0xFD9
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function ___lwmod *****************
  1190 ;; Defined at:
  1191 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  dividend        2   15[COMRAM] unsigned int 
  1194 ;;  divisor         2   17[COMRAM] unsigned int 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  counter         1   19[COMRAM] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  2   15[COMRAM] unsigned int 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1206 ;;      Params:         4       0       0       0       0       0       0
  1207 ;;      Locals:         1       0       0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0
  1209 ;;      Totals:         5       0       0       0       0       0       0
  1210 ;;Total ram usage:        5 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    2
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_itoa_new
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text2
  1221  002150                     __ptext2:
  1222                           	opt stack 0
  1223  002150                     ___lwmod:
  1224                           	opt stack 0
  1225  002150  FFFF               	dw	65535	; assembler added errata NOP
  1226                           
  1227                           ;incstack = 0
  1228  002152  5012               	movf	___lwmod@divisor,w,c
  1229  002154  1013               	iorwf	___lwmod@divisor+1,w,c
  1230  002156  B4D8               	btfsc	status,2,c
  1231  002158  D01C               	goto	l954
  1232  00215A  0E01               	movlw	1
  1233  00215C  6E14               	movwf	___lwmod@counter,c
  1234  00215E  D005               	goto	l2407
  1235  002160                     l2405:
  1236  002160  FFFF               	dw	65535	; assembler added errata NOP
  1237  002162  90D8               	bcf	status,0,c
  1238  002164  3612               	rlcf	___lwmod@divisor,f,c
  1239  002166  3613               	rlcf	___lwmod@divisor+1,f,c
  1240  002168  2A14               	incf	___lwmod@counter,f,c
  1241  00216A                     l2407:
  1242  00216A  FFFF               	dw	65535	; assembler added errata NOP
  1243  00216C  AE13               	btfss	___lwmod@divisor+1,7,c
  1244  00216E  D7F8               	goto	l2405
  1245  002170                     l2409:
  1246  002170  FFFF               	dw	65535	; assembler added errata NOP
  1247  002172  5012               	movf	___lwmod@divisor,w,c
  1248  002174  5C10               	subwf	___lwmod@dividend,w,c
  1249  002176  5013               	movf	___lwmod@divisor+1,w,c
  1250  002178  5811               	subwfb	___lwmod@dividend+1,w,c
  1251  00217A  A0D8               	btfss	status,0,c
  1252  00217C  D004               	goto	l2413
  1253  00217E  5012               	movf	___lwmod@divisor,w,c
  1254  002180  5E10               	subwf	___lwmod@dividend,f,c
  1255  002182  5013               	movf	___lwmod@divisor+1,w,c
  1256  002184  5A11               	subwfb	___lwmod@dividend+1,f,c
  1257  002186                     l2413:
  1258  002186  FFFF               	dw	65535	; assembler added errata NOP
  1259  002188  90D8               	bcf	status,0,c
  1260  00218A  3213               	rrcf	___lwmod@divisor+1,f,c
  1261  00218C  3212               	rrcf	___lwmod@divisor,f,c
  1262  00218E  2E14               	decfsz	___lwmod@counter,f,c
  1263  002190  D7EF               	goto	l2409
  1264  002192                     l954:
  1265  002192  FFFF               	dw	65535	; assembler added errata NOP
  1266  002194  C010  F010         	movff	___lwmod@dividend,?___lwmod
  1267  002198  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  1268  00219C  0012               	return		;funcret
  1269  00219E  FFFF               	dw	65535	; errata NOP
  1270  0021A0                     __end_of___lwmod:
  1271                           	opt stack 0
  1272                           tblptru	equ	0xFF8
  1273                           intcon	equ	0xFF2
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           indf2	equ	0xFDF
  1277                           fsr2h	equ	0xFDA
  1278                           fsr2l	equ	0xFD9
  1279                           status	equ	0xFD8
  1280                           
  1281 ;; *************** function _LedsInit *****************
  1282 ;; Defined at:
  1283 ;;		line 12 in file "Leds.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		None
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1297 ;;      Params:         0       0       0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0
  1300 ;;      Totals:         0       0       0       0       0       0       0
  1301 ;;Total ram usage:        0 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    2
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text3
  1312  00227E                     __ptext3:
  1313                           	opt stack 0
  1314  00227E                     _LedsInit:
  1315                           	opt stack 0
  1316  00227E  FFFF               	dw	65535	; assembler added errata NOP
  1317                           
  1318                           ;Leds.c: 15: TRISDbits.RD3 = 0;
  1319                           
  1320                           ;incstack = 0
  1321  002280  9695               	bcf	3989,3,c	;volatile
  1322                           
  1323                           ;Leds.c: 16: TRISDbits.RD2 = 0;
  1324  002282  9495               	bcf	3989,2,c	;volatile
  1325                           
  1326                           ;Leds.c: 19: LATDbits.LD2 = 0;
  1327  002284  948C               	bcf	3980,2,c	;volatile
  1328                           
  1329                           ;Leds.c: 20: LATDbits.LD3 = 0;
  1330  002286  968C               	bcf	3980,3,c	;volatile
  1331  002288  0012               	return		;funcret
  1332  00228A  FFFF               	dw	65535	; errata NOP
  1333  00228C                     __end_of_LedsInit:
  1334                           	opt stack 0
  1335                           tblptru	equ	0xFF8
  1336                           intcon	equ	0xFF2
  1337                           postinc0	equ	0xFEE
  1338                           wreg	equ	0xFE8
  1339                           indf2	equ	0xFDF
  1340                           fsr2h	equ	0xFDA
  1341                           fsr2l	equ	0xFD9
  1342                           status	equ	0xFD8
  1343                           
  1344 ;; *************** function _LCD_Init *****************
  1345 ;; Defined at:
  1346 ;;		line 56 in file "lcd.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, status,0, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1360 ;;      Params:         0       0       0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0
  1362 ;;      Temps:          2       0       0       0       0       0       0
  1363 ;;      Totals:         2       0       0       0       0       0       0
  1364 ;;Total ram usage:        2 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    5
  1367 ;; This function calls:
  1368 ;;		_GPIOPinTypeGPIOOutput
  1369 ;;		_GPIOPinWrite
  1370 ;;		_LCD_GoToXy
  1371 ;;		_SendCommand
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text4
  1378  001E1C                     __ptext4:
  1379                           	opt stack 0
  1380  001E1C                     _LCD_Init:
  1381                           	opt stack 0
  1382  001E1C  FFFF               	dw	65535	; assembler added errata NOP
  1383                           
  1384                           ;lcd.c: 58: GPIOPinTypeGPIOOutput( 0x02, 0xfc );
  1385                           
  1386                           ;incstack = 0
  1387  001E1E  0EFC               	movlw	252
  1388  001E20  6E10               	movwf	GPIOPinTypeGPIOOutput@Mask,c
  1389  001E22  0E02               	movlw	2
  1390  001E24  EC89  F00F         	call	_GPIOPinTypeGPIOOutput
  1391                           
  1392                           ;lcd.c: 59: GPIOPinWrite( 0x02, 0xfc, 0x00 );
  1393  001E28  0EFC               	movlw	252
  1394  001E2A  6E10               	movwf	GPIOPinWrite@Mask,c
  1395  001E2C  0E00               	movlw	0
  1396  001E2E  6E11               	movwf	GPIOPinWrite@Data,c
  1397  001E30  0E02               	movlw	2
  1398  001E32  EC39  F00E         	call	_GPIOPinWrite
  1399                           
  1400                           ;lcd.c: 61: _delay((unsigned long)((100)*(32000000/4000.0)));
  1401  001E36  0E04               	movlw	4
  1402  001E38  6E18               	movwf	(??_LCD_Init+1)& (0+255),c
  1403  001E3A  0E0C               	movlw	12
  1404  001E3C  6E17               	movwf	??_LCD_Init& (0+255),c
  1405  001E3E  0EB7               	movlw	183
  1406  001E40                     u3047:
  1407  001E40  FFFF               	dw	65535	; errata NOP
  1408  001E42  2EE8               	decfsz	wreg,f,c
  1409  001E44  D7FD               	bra	u3047
  1410  001E46  2E17               	decfsz	??_LCD_Init& (0+255),f,c
  1411  001E48  D7FB               	bra	u3047
  1412  001E4A  2E18               	decfsz	(??_LCD_Init+1)& (0+255),f,c
  1413  001E4C  D7F9               	bra	u3047
  1414                           
  1415                           ;lcd.c: 79: SendCommand(0x03);
  1416  001E4E  0E03               	movlw	3
  1417  001E50  EC4F  F00D         	call	_SendCommand
  1418                           
  1419                           ;lcd.c: 82: SendCommand( 0x20 | 1<<3 | 0<<2 );
  1420  001E54  0E28               	movlw	40
  1421  001E56  EC4F  F00D         	call	_SendCommand
  1422                           
  1423                           ;lcd.c: 85: SendCommand( 0x20 | 1<<3 | 0<<2 );
  1424  001E5A  0E28               	movlw	40
  1425  001E5C  EC4F  F00D         	call	_SendCommand
  1426                           
  1427                           ;lcd.c: 88: SendCommand( 1<<3 | 0x04 );
  1428  001E60  0E0C               	movlw	12
  1429  001E62  EC4F  F00D         	call	_SendCommand
  1430                           
  1431                           ;lcd.c: 92: SendCommand( 0x01 );
  1432  001E66  0E01               	movlw	1
  1433  001E68  EC4F  F00D         	call	_SendCommand
  1434                           
  1435                           ;lcd.c: 94: _delay((unsigned long)((100)*(32000000/4000.0)));
  1436  001E6C  0E04               	movlw	4
  1437  001E6E  6E18               	movwf	(??_LCD_Init+1)& (0+255),c
  1438  001E70  0E0C               	movlw	12
  1439  001E72  6E17               	movwf	??_LCD_Init& (0+255),c
  1440  001E74  0EB7               	movlw	183
  1441  001E76                     u3057:
  1442  001E76  FFFF               	dw	65535	; errata NOP
  1443  001E78  2EE8               	decfsz	wreg,f,c
  1444  001E7A  D7FD               	bra	u3057
  1445  001E7C  2E17               	decfsz	??_LCD_Init& (0+255),f,c
  1446  001E7E  D7FB               	bra	u3057
  1447  001E80  2E18               	decfsz	(??_LCD_Init+1)& (0+255),f,c
  1448  001E82  D7F9               	bra	u3057
  1449                           
  1450                           ;lcd.c: 97: SendCommand( 1<<2 | 0x02 | 0x00 );
  1451  001E84  0E06               	movlw	6
  1452  001E86  EC4F  F00D         	call	_SendCommand
  1453                           
  1454                           ;lcd.c: 99: LCD_GoToXy(0,0);
  1455  001E8A  0E00               	movlw	0
  1456  001E8C  6E15               	movwf	LCD_GoToXy@y,c
  1457  001E8E  0E00               	movlw	0
  1458  001E90  ECEE  F010         	call	_LCD_GoToXy
  1459  001E94  0012               	return		;funcret
  1460  001E96  FFFF               	dw	65535	; errata NOP
  1461  001E98                     __end_of_LCD_Init:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           intcon	equ	0xFF2
  1465                           postinc0	equ	0xFEE
  1466                           wreg	equ	0xFE8
  1467                           indf2	equ	0xFDF
  1468                           fsr2h	equ	0xFDA
  1469                           fsr2l	equ	0xFD9
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _LCD_GoToXy *****************
  1473 ;; Defined at:
  1474 ;;		line 109 in file "lcd.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  x               1    wreg     unsigned char 
  1477 ;;  y               1   20[COMRAM] unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  x               1   21[COMRAM] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1489 ;;      Params:         1       0       0       0       0       0       0
  1490 ;;      Locals:         1       0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0
  1492 ;;      Totals:         2       0       0       0       0       0       0
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    4
  1496 ;; This function calls:
  1497 ;;		_SendCommand
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;;		_LCD_Init
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text5
  1505  0021DC                     __ptext5:
  1506                           	opt stack 0
  1507  0021DC                     _LCD_GoToXy:
  1508                           	opt stack 0
  1509  0021DC  FFFF               	dw	65535	; assembler added errata NOP
  1510                           
  1511                           ;incstack = 0
  1512                           ;LCD_GoToXy@x stored from wreg
  1513  0021DE  6E16               	movwf	LCD_GoToXy@x,c
  1514                           
  1515                           ;lcd.c: 113: if(y==0)
  1516  0021E0  5015               	movf	LCD_GoToXy@y,w,c
  1517  0021E2  A4D8               	btfss	status,2,c
  1518  0021E4  D005               	goto	l2105
  1519                           
  1520                           ;lcd.c: 114: {
  1521                           ;lcd.c: 115: SendCommand( 0x80 | x );
  1522  0021E6  5016               	movf	LCD_GoToXy@x,w,c
  1523  0021E8  0980               	iorlw	128
  1524  0021EA  EC4F  F00D         	call	_SendCommand
  1525                           
  1526                           ;lcd.c: 116: }
  1527  0021EE  D008               	goto	l188
  1528  0021F0                     l2105:
  1529  0021F0  FFFF               	dw	65535	; assembler added errata NOP
  1530                           
  1531                           ;lcd.c: 118: else if (y==1)
  1532  0021F2  0415               	decf	LCD_GoToXy@y,w,c
  1533  0021F4  A4D8               	btfss	status,2,c
  1534  0021F6  D004               	goto	l188
  1535                           
  1536                           ;lcd.c: 119: {
  1537                           ;lcd.c: 120: SendCommand( 0x80 | 0x40 | x );
  1538  0021F8  5016               	movf	LCD_GoToXy@x,w,c
  1539  0021FA  09C0               	iorlw	192
  1540  0021FC  EC4F  F00D         	call	_SendCommand
  1541  002200                     l188:
  1542  002200  FFFF               	dw	65535	; assembler added errata NOP
  1543  002202  0012               	return		;funcret
  1544  002204  FFFF               	dw	65535	; errata NOP
  1545  002206                     __end_of_LCD_GoToXy:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           intcon	equ	0xFF2
  1549                           postinc0	equ	0xFEE
  1550                           wreg	equ	0xFE8
  1551                           indf2	equ	0xFDF
  1552                           fsr2h	equ	0xFDA
  1553                           fsr2l	equ	0xFD9
  1554                           status	equ	0xFD8
  1555                           
  1556 ;; *************** function _SendCommand *****************
  1557 ;; Defined at:
  1558 ;;		line 16 in file "lcd.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  command_id      1    wreg     unsigned char 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  command_id      1   19[COMRAM] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1572 ;;      Params:         0       0       0       0       0       0       0
  1573 ;;      Locals:         1       0       0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0
  1575 ;;      Totals:         1       0       0       0       0       0       0
  1576 ;;Total ram usage:        1 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    3
  1579 ;; This function calls:
  1580 ;;		_GPIOPinWrite
  1581 ;; This function is called by:
  1582 ;;		_LCD_Init
  1583 ;;		_LCD_GoToXy
  1584 ;;		_LCD_Clear
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text6
  1589  001A9E                     __ptext6:
  1590                           	opt stack 0
  1591  001A9E                     _SendCommand:
  1592                           	opt stack 0
  1593  001A9E  FFFF               	dw	65535	; assembler added errata NOP
  1594                           
  1595                           ;incstack = 0
  1596                           ;SendCommand@command_id stored from wreg
  1597  001AA0  6E14               	movwf	SendCommand@command_id,c
  1598                           
  1599                           ;lcd.c: 19: GPIOPinWrite( 0x02, 1<<2, 0x00 );
  1600  001AA2  0E04               	movlw	4
  1601  001AA4  6E10               	movwf	GPIOPinWrite@Mask,c
  1602  001AA6  0E00               	movlw	0
  1603  001AA8  6E11               	movwf	GPIOPinWrite@Data,c
  1604  001AAA  0E02               	movlw	2
  1605  001AAC  EC39  F00E         	call	_GPIOPinWrite
  1606                           
  1607                           ;lcd.c: 20: GPIOPinWrite( 0x02, 1<<3, 0xff );
  1608  001AB0  0E08               	movlw	8
  1609  001AB2  6E10               	movwf	GPIOPinWrite@Mask,c
  1610  001AB4  0EFF               	movlw	255
  1611  001AB6  6E11               	movwf	GPIOPinWrite@Data,c
  1612  001AB8  0E02               	movlw	2
  1613  001ABA  EC39  F00E         	call	_GPIOPinWrite
  1614                           
  1615                           ;lcd.c: 21: GPIOPinWrite( 0x02, ((1<<4) | (1<<5) | (1<<6) | (1<<7)), command_id );
  1616  001ABE  0EF0               	movlw	240
  1617  001AC0  6E10               	movwf	GPIOPinWrite@Mask,c
  1618  001AC2  C014  F011         	movff	SendCommand@command_id,GPIOPinWrite@Data
  1619  001AC6  0E02               	movlw	2
  1620  001AC8  EC39  F00E         	call	_GPIOPinWrite
  1621                           
  1622                           ;lcd.c: 22: _delay((unsigned long)((2)*(32000000/4000000.0)));
  1623  001ACC  0E04               	movlw	4
  1624  001ACE                     u3067:
  1625  001ACE  FFFF               	dw	65535	; errata NOP
  1626  001AD0  2EE8               	decfsz	wreg,f,c
  1627  001AD2  D7FD               	bra	u3067
  1628                           
  1629                           ;lcd.c: 23: GPIOPinWrite( 0x02, 1<<3, 0);
  1630  001AD4  0E08               	movlw	8
  1631  001AD6  6E10               	movwf	GPIOPinWrite@Mask,c
  1632  001AD8  0E00               	movlw	0
  1633  001ADA  6E11               	movwf	GPIOPinWrite@Data,c
  1634  001ADC  0E02               	movlw	2
  1635  001ADE  EC39  F00E         	call	_GPIOPinWrite
  1636                           
  1637                           ;lcd.c: 24: _delay((unsigned long)((2)*(32000000/4000000.0)));
  1638  001AE2  0E04               	movlw	4
  1639  001AE4                     u3077:
  1640  001AE4  FFFF               	dw	65535	; errata NOP
  1641  001AE6  2EE8               	decfsz	wreg,f,c
  1642  001AE8  D7FD               	bra	u3077
  1643                           
  1644                           ;lcd.c: 27: GPIOPinWrite( 0x02, 1<<2, 0x00 );
  1645  001AEA  0E04               	movlw	4
  1646  001AEC  6E10               	movwf	GPIOPinWrite@Mask,c
  1647  001AEE  0E00               	movlw	0
  1648  001AF0  6E11               	movwf	GPIOPinWrite@Data,c
  1649  001AF2  0E02               	movlw	2
  1650  001AF4  EC39  F00E         	call	_GPIOPinWrite
  1651                           
  1652                           ;lcd.c: 28: GPIOPinWrite( 0x02, 1<<3, 0xff );
  1653  001AF8  0E08               	movlw	8
  1654  001AFA  6E10               	movwf	GPIOPinWrite@Mask,c
  1655  001AFC  0EFF               	movlw	255
  1656  001AFE  6E11               	movwf	GPIOPinWrite@Data,c
  1657  001B00  0E02               	movlw	2
  1658  001B02  EC39  F00E         	call	_GPIOPinWrite
  1659                           
  1660                           ;lcd.c: 29: GPIOPinWrite( 0x02, ((1<<4) | (1<<5) | (1<<6) | (1<<7)), (command_id<<4) );
  1661  001B06  0EF0               	movlw	240
  1662  001B08  6E10               	movwf	GPIOPinWrite@Mask,c
  1663  001B0A  3814               	swapf	SendCommand@command_id,w,c
  1664  001B0C  0BF0               	andlw	240
  1665  001B0E  6E11               	movwf	GPIOPinWrite@Data,c
  1666  001B10  0E02               	movlw	2
  1667  001B12  EC39  F00E         	call	_GPIOPinWrite
  1668                           
  1669                           ;lcd.c: 30: _delay((unsigned long)((2)*(32000000/4000000.0)));
  1670  001B16  0E04               	movlw	4
  1671  001B18                     u3087:
  1672  001B18  FFFF               	dw	65535	; errata NOP
  1673  001B1A  2EE8               	decfsz	wreg,f,c
  1674  001B1C  D7FD               	bra	u3087
  1675                           
  1676                           ;lcd.c: 31: GPIOPinWrite( 0x02, 1<<3, 0);
  1677  001B1E  0E08               	movlw	8
  1678  001B20  6E10               	movwf	GPIOPinWrite@Mask,c
  1679  001B22  0E00               	movlw	0
  1680  001B24  6E11               	movwf	GPIOPinWrite@Data,c
  1681  001B26  0E02               	movlw	2
  1682  001B28  EC39  F00E         	call	_GPIOPinWrite
  1683                           
  1684                           ;lcd.c: 33: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1685  001B2C  0EA0               	movlw	160
  1686  001B2E                     u3097:
  1687  001B2E  FFFF               	dw	65535	; errata NOP
  1688  001B30  F000               	nop	
  1689  001B32  2EE8               	decfsz	wreg,f,c
  1690  001B34  D7FC               	bra	u3097
  1691  001B36  0012               	return		;funcret
  1692  001B38  FFFF               	dw	65535	; errata NOP
  1693  001B3A                     __end_of_SendCommand:
  1694                           	opt stack 0
  1695                           tblptru	equ	0xFF8
  1696                           intcon	equ	0xFF2
  1697                           postinc0	equ	0xFEE
  1698                           wreg	equ	0xFE8
  1699                           indf2	equ	0xFDF
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function _GPIOPinTypeGPIOOutput *****************
  1705 ;; Defined at:
  1706 ;;		line 39 in file "gpio.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  Port            1    wreg     unsigned char 
  1709 ;;  Mask            1   15[COMRAM] unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  Port            1   16[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1721 ;;      Params:         1       0       0       0       0       0       0
  1722 ;;      Locals:         1       0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0
  1724 ;;      Totals:         2       0       0       0       0       0       0
  1725 ;;Total ram usage:        2 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    2
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_LCD_Init
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text7
  1736  001F12                     __ptext7:
  1737                           	opt stack 0
  1738  001F12                     _GPIOPinTypeGPIOOutput:
  1739                           	opt stack 0
  1740  001F12  FFFF               	dw	65535	; assembler added errata NOP
  1741                           
  1742                           ;incstack = 0
  1743                           ;GPIOPinTypeGPIOOutput@Port stored from wreg
  1744  001F14  6E11               	movwf	GPIOPinTypeGPIOOutput@Port,c
  1745                           
  1746                           ;gpio.c: 41: switch (Port)
  1747  001F16  D01E               	goto	l2153
  1748  001F18                     l2141:
  1749  001F18  FFFF               	dw	65535	; assembler added errata NOP
  1750                           
  1751                           ;gpio.c: 44: TRISA = (TRISA & ~(Mask)) | (Mask & 0x00);
  1752  001F1A  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1753  001F1C  0AFF               	xorlw	255
  1754  001F1E  1492               	andwf	3986,w,c	;volatile
  1755  001F20  6E92               	movwf	3986,c	;volatile
  1756                           
  1757                           ;gpio.c: 45: break;
  1758  001F22  D029               	goto	l141
  1759  001F24                     l2143:
  1760  001F24  FFFF               	dw	65535	; assembler added errata NOP
  1761                           
  1762                           ;gpio.c: 48: TRISB = (TRISB & ~(Mask)) | (Mask & 0x00);
  1763  001F26  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1764  001F28  0AFF               	xorlw	255
  1765  001F2A  1493               	andwf	3987,w,c	;volatile
  1766  001F2C  6E93               	movwf	3987,c	;volatile
  1767                           
  1768                           ;gpio.c: 49: break;
  1769  001F2E  D023               	goto	l141
  1770  001F30                     l2145:
  1771  001F30  FFFF               	dw	65535	; assembler added errata NOP
  1772                           
  1773                           ;gpio.c: 52: TRISC = (TRISC & ~(Mask)) | (Mask & 0x00);
  1774  001F32  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1775  001F34  0AFF               	xorlw	255
  1776  001F36  1494               	andwf	3988,w,c	;volatile
  1777  001F38  6E94               	movwf	3988,c	;volatile
  1778                           
  1779                           ;gpio.c: 53: break;
  1780  001F3A  D01D               	goto	l141
  1781  001F3C                     l2147:
  1782  001F3C  FFFF               	dw	65535	; assembler added errata NOP
  1783                           
  1784                           ;gpio.c: 56: TRISD = (TRISD & ~(Mask)) | (Mask & 0x00);
  1785  001F3E  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1786  001F40  0AFF               	xorlw	255
  1787  001F42  1495               	andwf	3989,w,c	;volatile
  1788  001F44  6E95               	movwf	3989,c	;volatile
  1789                           
  1790                           ;gpio.c: 57: break;
  1791  001F46  D017               	goto	l141
  1792  001F48                     l2149:
  1793  001F48  FFFF               	dw	65535	; assembler added errata NOP
  1794                           
  1795                           ;gpio.c: 60: TRISE = (TRISE & ~(Mask)) | (Mask & 0x00);
  1796  001F4A  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1797  001F4C  0AFF               	xorlw	255
  1798  001F4E  1496               	andwf	3990,w,c	;volatile
  1799  001F50  6E96               	movwf	3990,c	;volatile
  1800                           
  1801                           ;gpio.c: 62: }
  1802                           
  1803                           ;gpio.c: 61: break;
  1804  001F52  D011               	goto	l141
  1805  001F54                     l2153:
  1806  001F54  FFFF               	dw	65535	; assembler added errata NOP
  1807  001F56  5011               	movf	GPIOPinTypeGPIOOutput@Port,w,c
  1808                           
  1809                           ; Switch size 1, requested type "space"
  1810                           ; Number of cases is 5, Range of values is 0 to 4
  1811                           ; switch strategies available:
  1812                           ; Name         Instructions Cycles
  1813                           ; simple_byte           16     9 (average)
  1814                           ;	Chosen strategy is simple_byte
  1815  001F58  0A00               	xorlw	0	; case 0
  1816  001F5A  B4D8               	btfsc	status,2,c
  1817  001F5C  D7DD               	goto	l2141
  1818  001F5E  0A01               	xorlw	1	; case 1
  1819  001F60  B4D8               	btfsc	status,2,c
  1820  001F62  D7E0               	goto	l2143
  1821  001F64  0A03               	xorlw	3	; case 2
  1822  001F66  B4D8               	btfsc	status,2,c
  1823  001F68  D7E3               	goto	l2145
  1824  001F6A  0A01               	xorlw	1	; case 3
  1825  001F6C  B4D8               	btfsc	status,2,c
  1826  001F6E  D7E6               	goto	l2147
  1827  001F70  0A07               	xorlw	7	; case 4
  1828  001F72  B4D8               	btfsc	status,2,c
  1829  001F74  D7E9               	goto	l2149
  1830  001F76                     l141:
  1831  001F76  FFFF               	dw	65535	; assembler added errata NOP
  1832  001F78  0012               	return		;funcret
  1833  001F7A  FFFF               	dw	65535	; errata NOP
  1834  001F7C                     __end_of_GPIOPinTypeGPIOOutput:
  1835                           	opt stack 0
  1836                           tblptru	equ	0xFF8
  1837                           intcon	equ	0xFF2
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           indf2	equ	0xFDF
  1841                           fsr2h	equ	0xFDA
  1842                           fsr2l	equ	0xFD9
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function _LCD_DispString *****************
  1846 ;; Defined at:
  1847 ;;		line 131 in file "lcd.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  StrPtr          2   20[COMRAM] PTR unsigned char 
  1850 ;;		 -> STR_2(4), str_dist(4), STR_1(16), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1862 ;;      Params:         2       0       0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0
  1865 ;;      Totals:         2       0       0       0       0       0       0
  1866 ;;Total ram usage:        2 bytes
  1867 ;; Hardware stack levels used:    1
  1868 ;; Hardware stack levels required when called:    4
  1869 ;; This function calls:
  1870 ;;		_SendData
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text8
  1877  001F7C                     __ptext8:
  1878                           	opt stack 0
  1879  001F7C                     _LCD_DispString:
  1880                           	opt stack 0
  1881  001F7C  FFFF               	dw	65535	; assembler added errata NOP
  1882                           
  1883                           ;lcd.c: 133: while( *StrPtr != '\0' )
  1884                           
  1885                           ;incstack = 0
  1886  001F7E  D016               	goto	l2527
  1887  001F80                     l2523:
  1888  001F80  FFFF               	dw	65535	; assembler added errata NOP
  1889                           
  1890                           ;lcd.c: 134: {
  1891                           ;lcd.c: 135: SendData( *StrPtr );
  1892  001F82  C015  FFF6         	movff	LCD_DispString@StrPtr,tblptrl
  1893  001F86  C016  FFF7         	movff	LCD_DispString@StrPtr+1,tblptrh
  1894  001F8A  6AF8               	clrf	tblptru,c
  1895  001F8C  0E05               	movlw	(high __ramtop+-1)
  1896  001F8E  64F7               	cpfsgt	tblptrh,c
  1897  001F90  D004               	bra	u2067
  1898  001F92  0008               	tblrd		*
  1899  001F94  FFFF               	dw	65535	; errata NOP
  1900  001F96  50F5               	movf	tablat,w,c
  1901  001F98  D005               	bra	u2060
  1902  001F9A                     u2067:
  1903  001F9A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1904  001F9E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1905  001FA2  50EF               	movf	indf0,w,c
  1906  001FA4                     u2060:
  1907  001FA4  EC9D  F00D         	call	_SendData
  1908                           
  1909                           ;lcd.c: 136: StrPtr ++;
  1910  001FA8  4A15               	infsnz	LCD_DispString@StrPtr,f,c
  1911  001FAA  2A16               	incf	LCD_DispString@StrPtr+1,f,c
  1912  001FAC                     l2527:
  1913  001FAC  FFFF               	dw	65535	; assembler added errata NOP
  1914  001FAE  C015  FFF6         	movff	LCD_DispString@StrPtr,tblptrl
  1915  001FB2  C016  FFF7         	movff	LCD_DispString@StrPtr+1,tblptrh
  1916  001FB6  6AF8               	clrf	tblptru,c
  1917  001FB8  0E05               	movlw	(high __ramtop+-1)
  1918  001FBA  64F7               	cpfsgt	tblptrh,c
  1919  001FBC  D004               	bra	u2077
  1920  001FBE  0008               	tblrd		*
  1921  001FC0  FFFF               	dw	65535	; errata NOP
  1922  001FC2  50F5               	movf	tablat,w,c
  1923  001FC4  D005               	bra	u2070
  1924  001FC6                     u2077:
  1925  001FC6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1926  001FCA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1927  001FCE  50EF               	movf	indf0,w,c
  1928  001FD0                     u2070:
  1929  001FD0  0900               	iorlw	0
  1930  001FD2  B4D8               	btfsc	status,2,c
  1931  001FD4  0012               	return		;funcret
  1932  001FD6  FFFF               	dw	65535	; assembler added errata NOP
  1933  001FD8  D7D3               	goto	l2523
  1934  001FDA  FFFF               	dw	65535	; errata NOP
  1935  001FDC                     __end_of_LCD_DispString:
  1936                           	opt stack 0
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           intcon	equ	0xFF2
  1942                           indf0	equ	0xFEF
  1943                           postinc0	equ	0xFEE
  1944                           fsr0h	equ	0xFEA
  1945                           fsr0l	equ	0xFE9
  1946                           wreg	equ	0xFE8
  1947                           indf2	equ	0xFDF
  1948                           fsr2h	equ	0xFDA
  1949                           fsr2l	equ	0xFD9
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function _SendData *****************
  1953 ;; Defined at:
  1954 ;;		line 36 in file "lcd.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  data            1    wreg     unsigned char 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  data            1   19[COMRAM] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1968 ;;      Params:         0       0       0       0       0       0       0
  1969 ;;      Locals:         1       0       0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0
  1971 ;;      Totals:         1       0       0       0       0       0       0
  1972 ;;Total ram usage:        1 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    3
  1975 ;; This function calls:
  1976 ;;		_GPIOPinWrite
  1977 ;; This function is called by:
  1978 ;;		_LCD_DispString
  1979 ;;		_LCD_DispChar
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text9
  1984  001B3A                     __ptext9:
  1985                           	opt stack 0
  1986  001B3A                     _SendData:
  1987                           	opt stack 0
  1988  001B3A  FFFF               	dw	65535	; assembler added errata NOP
  1989                           
  1990                           ;incstack = 0
  1991                           ;SendData@data stored from wreg
  1992  001B3C  6E14               	movwf	SendData@data,c
  1993                           
  1994                           ;lcd.c: 39: GPIOPinWrite( 0x02, 1<<2, 0xff );
  1995  001B3E  0E04               	movlw	4
  1996  001B40  6E10               	movwf	GPIOPinWrite@Mask,c
  1997  001B42  0EFF               	movlw	255
  1998  001B44  6E11               	movwf	GPIOPinWrite@Data,c
  1999  001B46  0E02               	movlw	2
  2000  001B48  EC39  F00E         	call	_GPIOPinWrite
  2001                           
  2002                           ;lcd.c: 40: GPIOPinWrite( 0x02, 1<<3, 0xff );
  2003  001B4C  0E08               	movlw	8
  2004  001B4E  6E10               	movwf	GPIOPinWrite@Mask,c
  2005  001B50  0EFF               	movlw	255
  2006  001B52  6E11               	movwf	GPIOPinWrite@Data,c
  2007  001B54  0E02               	movlw	2
  2008  001B56  EC39  F00E         	call	_GPIOPinWrite
  2009                           
  2010                           ;lcd.c: 41: GPIOPinWrite( 0x02, ((1<<4) | (1<<5) | (1<<6) | (1<<7)), data );
  2011  001B5A  0EF0               	movlw	240
  2012  001B5C  6E10               	movwf	GPIOPinWrite@Mask,c
  2013  001B5E  C014  F011         	movff	SendData@data,GPIOPinWrite@Data
  2014  001B62  0E02               	movlw	2
  2015  001B64  EC39  F00E         	call	_GPIOPinWrite
  2016                           
  2017                           ;lcd.c: 42: _delay((unsigned long)((2)*(32000000/4000000.0)));
  2018  001B68  0E04               	movlw	4
  2019  001B6A                     u3107:
  2020  001B6A  FFFF               	dw	65535	; errata NOP
  2021  001B6C  2EE8               	decfsz	wreg,f,c
  2022  001B6E  D7FD               	bra	u3107
  2023                           
  2024                           ;lcd.c: 43: GPIOPinWrite( 0x02, 1<<3, 0);
  2025  001B70  0E08               	movlw	8
  2026  001B72  6E10               	movwf	GPIOPinWrite@Mask,c
  2027  001B74  0E00               	movlw	0
  2028  001B76  6E11               	movwf	GPIOPinWrite@Data,c
  2029  001B78  0E02               	movlw	2
  2030  001B7A  EC39  F00E         	call	_GPIOPinWrite
  2031                           
  2032                           ;lcd.c: 44: _delay((unsigned long)((2)*(32000000/4000000.0)));
  2033  001B7E  0E04               	movlw	4
  2034  001B80                     u3117:
  2035  001B80  FFFF               	dw	65535	; errata NOP
  2036  001B82  2EE8               	decfsz	wreg,f,c
  2037  001B84  D7FD               	bra	u3117
  2038                           
  2039                           ;lcd.c: 47: GPIOPinWrite( 0x02, 1<<2, 0xff );
  2040  001B86  0E04               	movlw	4
  2041  001B88  6E10               	movwf	GPIOPinWrite@Mask,c
  2042  001B8A  0EFF               	movlw	255
  2043  001B8C  6E11               	movwf	GPIOPinWrite@Data,c
  2044  001B8E  0E02               	movlw	2
  2045  001B90  EC39  F00E         	call	_GPIOPinWrite
  2046                           
  2047                           ;lcd.c: 48: GPIOPinWrite( 0x02, 1<<3, 0xff );
  2048  001B94  0E08               	movlw	8
  2049  001B96  6E10               	movwf	GPIOPinWrite@Mask,c
  2050  001B98  0EFF               	movlw	255
  2051  001B9A  6E11               	movwf	GPIOPinWrite@Data,c
  2052  001B9C  0E02               	movlw	2
  2053  001B9E  EC39  F00E         	call	_GPIOPinWrite
  2054                           
  2055                           ;lcd.c: 49: GPIOPinWrite( 0x02, ((1<<4) | (1<<5) | (1<<6) | (1<<7)), (data<<4) );
  2056  001BA2  0EF0               	movlw	240
  2057  001BA4  6E10               	movwf	GPIOPinWrite@Mask,c
  2058  001BA6  3814               	swapf	SendData@data,w,c
  2059  001BA8  0BF0               	andlw	240
  2060  001BAA  6E11               	movwf	GPIOPinWrite@Data,c
  2061  001BAC  0E02               	movlw	2
  2062  001BAE  EC39  F00E         	call	_GPIOPinWrite
  2063                           
  2064                           ;lcd.c: 50: _delay((unsigned long)((2)*(32000000/4000000.0)));
  2065  001BB2  0E04               	movlw	4
  2066  001BB4                     u3127:
  2067  001BB4  FFFF               	dw	65535	; errata NOP
  2068  001BB6  2EE8               	decfsz	wreg,f,c
  2069  001BB8  D7FD               	bra	u3127
  2070                           
  2071                           ;lcd.c: 51: GPIOPinWrite( 0x02, 1<<3, 0);
  2072  001BBA  0E08               	movlw	8
  2073  001BBC  6E10               	movwf	GPIOPinWrite@Mask,c
  2074  001BBE  0E00               	movlw	0
  2075  001BC0  6E11               	movwf	GPIOPinWrite@Data,c
  2076  001BC2  0E02               	movlw	2
  2077  001BC4  EC39  F00E         	call	_GPIOPinWrite
  2078                           
  2079                           ;lcd.c: 53: _delay((unsigned long)((100)*(32000000/4000000.0)));
  2080  001BC8  0EA0               	movlw	160
  2081  001BCA                     u3137:
  2082  001BCA  FFFF               	dw	65535	; errata NOP
  2083  001BCC  F000               	nop	
  2084  001BCE  2EE8               	decfsz	wreg,f,c
  2085  001BD0  D7FC               	bra	u3137
  2086  001BD2  0012               	return		;funcret
  2087  001BD4  FFFF               	dw	65535	; errata NOP
  2088  001BD6                     __end_of_SendData:
  2089                           	opt stack 0
  2090                           tblptru	equ	0xFF8
  2091                           tblptrh	equ	0xFF7
  2092                           tblptrl	equ	0xFF6
  2093                           tablat	equ	0xFF5
  2094                           intcon	equ	0xFF2
  2095                           indf0	equ	0xFEF
  2096                           postinc0	equ	0xFEE
  2097                           fsr0h	equ	0xFEA
  2098                           fsr0l	equ	0xFE9
  2099                           wreg	equ	0xFE8
  2100                           indf2	equ	0xFDF
  2101                           fsr2h	equ	0xFDA
  2102                           fsr2l	equ	0xFD9
  2103                           status	equ	0xFD8
  2104                           
  2105 ;; *************** function _GPIOPinWrite *****************
  2106 ;; Defined at:
  2107 ;;		line 65 in file "gpio.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  Port            1    wreg     unsigned char 
  2110 ;;  Mask            1   15[COMRAM] unsigned char 
  2111 ;;  Data            1   16[COMRAM] unsigned char 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  Port            1   18[COMRAM] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2123 ;;      Params:         2       0       0       0       0       0       0
  2124 ;;      Locals:         1       0       0       0       0       0       0
  2125 ;;      Temps:          1       0       0       0       0       0       0
  2126 ;;      Totals:         4       0       0       0       0       0       0
  2127 ;;Total ram usage:        4 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    2
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_SendCommand
  2134 ;;		_SendData
  2135 ;;		_LCD_Init
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text10
  2140  001C72                     __ptext10:
  2141                           	opt stack 0
  2142  001C72                     _GPIOPinWrite:
  2143                           	opt stack 0
  2144  001C72  FFFF               	dw	65535	; assembler added errata NOP
  2145                           
  2146                           ;incstack = 0
  2147                           ;GPIOPinWrite@Port stored from wreg
  2148  001C74  6E13               	movwf	GPIOPinWrite@Port,c
  2149                           
  2150                           ;gpio.c: 67: switch (Port)
  2151  001C76  D032               	goto	l2047
  2152  001C78                     l2035:
  2153  001C78  FFFF               	dw	65535	; assembler added errata NOP
  2154                           
  2155                           ;gpio.c: 70: LATA = (LATA & ~(Mask)) | (Mask & Data);
  2156  001C7A  5010               	movf	GPIOPinWrite@Mask,w,c
  2157  001C7C  1411               	andwf	GPIOPinWrite@Data,w,c
  2158  001C7E  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2159  001C80  5010               	movf	GPIOPinWrite@Mask,w,c
  2160  001C82  0AFF               	xorlw	255
  2161  001C84  1489               	andwf	3977,w,c	;volatile
  2162  001C86  1012               	iorwf	??_GPIOPinWrite,w,c
  2163  001C88  6E89               	movwf	3977,c	;volatile
  2164                           
  2165                           ;gpio.c: 71: break;
  2166  001C8A  D039               	goto	l151
  2167  001C8C                     l2037:
  2168  001C8C  FFFF               	dw	65535	; assembler added errata NOP
  2169                           
  2170                           ;gpio.c: 74: LATB = (LATB & ~(Mask)) | (Mask & Data);
  2171  001C8E  5010               	movf	GPIOPinWrite@Mask,w,c
  2172  001C90  1411               	andwf	GPIOPinWrite@Data,w,c
  2173  001C92  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2174  001C94  5010               	movf	GPIOPinWrite@Mask,w,c
  2175  001C96  0AFF               	xorlw	255
  2176  001C98  148A               	andwf	3978,w,c	;volatile
  2177  001C9A  1012               	iorwf	??_GPIOPinWrite,w,c
  2178  001C9C  6E8A               	movwf	3978,c	;volatile
  2179                           
  2180                           ;gpio.c: 75: break;
  2181  001C9E  D02F               	goto	l151
  2182  001CA0                     l2039:
  2183  001CA0  FFFF               	dw	65535	; assembler added errata NOP
  2184                           
  2185                           ;gpio.c: 78: LATC = (LATC & ~(Mask)) | (Mask & Data);
  2186  001CA2  5010               	movf	GPIOPinWrite@Mask,w,c
  2187  001CA4  1411               	andwf	GPIOPinWrite@Data,w,c
  2188  001CA6  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2189  001CA8  5010               	movf	GPIOPinWrite@Mask,w,c
  2190  001CAA  0AFF               	xorlw	255
  2191  001CAC  148B               	andwf	3979,w,c	;volatile
  2192  001CAE  1012               	iorwf	??_GPIOPinWrite,w,c
  2193  001CB0  6E8B               	movwf	3979,c	;volatile
  2194                           
  2195                           ;gpio.c: 79: break;
  2196  001CB2  D025               	goto	l151
  2197  001CB4                     l2041:
  2198  001CB4  FFFF               	dw	65535	; assembler added errata NOP
  2199                           
  2200                           ;gpio.c: 82: LATD = (LATD & ~(Mask)) | (Mask & Data);
  2201  001CB6  5010               	movf	GPIOPinWrite@Mask,w,c
  2202  001CB8  1411               	andwf	GPIOPinWrite@Data,w,c
  2203  001CBA  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2204  001CBC  5010               	movf	GPIOPinWrite@Mask,w,c
  2205  001CBE  0AFF               	xorlw	255
  2206  001CC0  148C               	andwf	3980,w,c	;volatile
  2207  001CC2  1012               	iorwf	??_GPIOPinWrite,w,c
  2208  001CC4  6E8C               	movwf	3980,c	;volatile
  2209                           
  2210                           ;gpio.c: 83: break;
  2211  001CC6  D01B               	goto	l151
  2212  001CC8                     l2043:
  2213  001CC8  FFFF               	dw	65535	; assembler added errata NOP
  2214                           
  2215                           ;gpio.c: 86: LATE = (LATE & ~(Mask)) | (Mask & Data);
  2216  001CCA  5010               	movf	GPIOPinWrite@Mask,w,c
  2217  001CCC  1411               	andwf	GPIOPinWrite@Data,w,c
  2218  001CCE  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2219  001CD0  5010               	movf	GPIOPinWrite@Mask,w,c
  2220  001CD2  0AFF               	xorlw	255
  2221  001CD4  148D               	andwf	3981,w,c	;volatile
  2222  001CD6  1012               	iorwf	??_GPIOPinWrite,w,c
  2223  001CD8  6E8D               	movwf	3981,c	;volatile
  2224                           
  2225                           ;gpio.c: 88: }
  2226                           
  2227                           ;gpio.c: 87: break;
  2228  001CDA  D011               	goto	l151
  2229  001CDC                     l2047:
  2230  001CDC  FFFF               	dw	65535	; assembler added errata NOP
  2231  001CDE  5013               	movf	GPIOPinWrite@Port,w,c
  2232                           
  2233                           ; Switch size 1, requested type "space"
  2234                           ; Number of cases is 5, Range of values is 0 to 4
  2235                           ; switch strategies available:
  2236                           ; Name         Instructions Cycles
  2237                           ; simple_byte           16     9 (average)
  2238                           ;	Chosen strategy is simple_byte
  2239  001CE0  0A00               	xorlw	0	; case 0
  2240  001CE2  B4D8               	btfsc	status,2,c
  2241  001CE4  D7C9               	goto	l2035
  2242  001CE6  0A01               	xorlw	1	; case 1
  2243  001CE8  B4D8               	btfsc	status,2,c
  2244  001CEA  D7D0               	goto	l2037
  2245  001CEC  0A03               	xorlw	3	; case 2
  2246  001CEE  B4D8               	btfsc	status,2,c
  2247  001CF0  D7D7               	goto	l2039
  2248  001CF2  0A01               	xorlw	1	; case 3
  2249  001CF4  B4D8               	btfsc	status,2,c
  2250  001CF6  D7DE               	goto	l2041
  2251  001CF8  0A07               	xorlw	7	; case 4
  2252  001CFA  B4D8               	btfsc	status,2,c
  2253  001CFC  D7E5               	goto	l2043
  2254  001CFE                     l151:
  2255  001CFE  FFFF               	dw	65535	; assembler added errata NOP
  2256  001D00  0012               	return		;funcret
  2257  001D02  FFFF               	dw	65535	; errata NOP
  2258  001D04                     __end_of_GPIOPinWrite:
  2259                           	opt stack 0
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           intcon	equ	0xFF2
  2265                           indf0	equ	0xFEF
  2266                           postinc0	equ	0xFEE
  2267                           fsr0h	equ	0xFEA
  2268                           fsr0l	equ	0xFE9
  2269                           wreg	equ	0xFE8
  2270                           indf2	equ	0xFDF
  2271                           fsr2h	equ	0xFDA
  2272                           fsr2l	equ	0xFD9
  2273                           status	equ	0xFD8
  2274                           
  2275 ;; *************** function _Hcsr04_Init *****************
  2276 ;; Defined at:
  2277 ;;		line 9 in file "hcsr04.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2291 ;;      Params:         0       0       0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    3
  2298 ;; This function calls:
  2299 ;;		_Timer1_Init
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text11
  2306  002254                     __ptext11:
  2307                           	opt stack 0
  2308  002254                     _Hcsr04_Init:
  2309                           	opt stack 0
  2310  002254  FFFF               	dw	65535	; assembler added errata NOP
  2311                           
  2312                           ;hcsr04.c: 11: Timer1_Init();
  2313                           
  2314                           ;incstack = 0
  2315  002256  EC46  F011         	call	_Timer1_Init	;wreg free
  2316                           
  2317                           ;hcsr04.c: 13: TRISBbits.RB4 = 1;
  2318  00225A  8893               	bsf	3987,4,c	;volatile
  2319                           
  2320                           ;hcsr04.c: 14: TRISDbits.RD0 = 0;
  2321  00225C  9095               	bcf	3989,0,c	;volatile
  2322                           
  2323                           ;hcsr04.c: 15: LATDbits.LD0 = 0;
  2324  00225E  908C               	bcf	3980,0,c	;volatile
  2325                           
  2326                           ;hcsr04.c: 18: INTCONbits.RBIF = 0;
  2327  002260  90F2               	bcf	intcon,0,c	;volatile
  2328                           
  2329                           ;hcsr04.c: 19: INTCONbits.RBIE = 1;
  2330  002262  86F2               	bsf	intcon,3,c	;volatile
  2331                           
  2332                           ;hcsr04.c: 21: INTCONbits.PEIE = 1;
  2333  002264  8CF2               	bsf	intcon,6,c	;volatile
  2334                           
  2335                           ;hcsr04.c: 22: INTCONbits.GIE = 1;
  2336  002266  8EF2               	bsf	intcon,7,c	;volatile
  2337  002268  0012               	return		;funcret
  2338  00226A  FFFF               	dw	65535	; errata NOP
  2339  00226C                     __end_of_Hcsr04_Init:
  2340                           	opt stack 0
  2341                           tblptru	equ	0xFF8
  2342                           tblptrh	equ	0xFF7
  2343                           tblptrl	equ	0xFF6
  2344                           tablat	equ	0xFF5
  2345                           intcon	equ	0xFF2
  2346                           indf0	equ	0xFEF
  2347                           postinc0	equ	0xFEE
  2348                           fsr0h	equ	0xFEA
  2349                           fsr0l	equ	0xFE9
  2350                           wreg	equ	0xFE8
  2351                           indf2	equ	0xFDF
  2352                           fsr2h	equ	0xFDA
  2353                           fsr2l	equ	0xFD9
  2354                           status	equ	0xFD8
  2355                           
  2356 ;; *************** function _Timer1_Init *****************
  2357 ;; Defined at:
  2358 ;;		line 8 in file "timer1.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		None
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2372 ;;      Params:         0       0       0       0       0       0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0
  2375 ;;      Totals:         0       0       0       0       0       0       0
  2376 ;;Total ram usage:        0 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    2
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_Hcsr04_Init
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text12
  2387  00228C                     __ptext12:
  2388                           	opt stack 0
  2389  00228C                     _Timer1_Init:
  2390                           	opt stack 0
  2391  00228C  FFFF               	dw	65535	; assembler added errata NOP
  2392                           
  2393                           ;timer1.c: 10: T1RD16 = 1;
  2394                           
  2395                           ;incstack = 0
  2396  00228E  8ECD               	bsf	4045,7,c	;volatile
  2397                           
  2398                           ;timer1.c: 11: TMR1CS = 0;
  2399  002290  92CD               	bcf	4045,1,c	;volatile
  2400                           
  2401                           ;timer1.c: 12: T1CKPS1 = 1;
  2402  002292  8ACD               	bsf	4045,5,c	;volatile
  2403                           
  2404                           ;timer1.c: 13: T1CKPS0 = 1;
  2405  002294  88CD               	bsf	4045,4,c	;volatile
  2406  002296  0012               	return		;funcret
  2407  002298  FFFF               	dw	65535	; errata NOP
  2408  00229A                     __end_of_Timer1_Init:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           intcon	equ	0xFF2
  2415                           indf0	equ	0xFEF
  2416                           postinc0	equ	0xFEE
  2417                           fsr0h	equ	0xFEA
  2418                           fsr0l	equ	0xFE9
  2419                           wreg	equ	0xFE8
  2420                           indf2	equ	0xFDF
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _ComInit *****************
  2426 ;; Defined at:
  2427 ;;		line 13 in file "com_can.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2441 ;;      Params:         0       0       0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    3
  2448 ;; This function calls:
  2449 ;;		_CANInit
  2450 ;;		_CANIntClear
  2451 ;;		_CANIntEnable
  2452 ;;		_CANSetBaudRate
  2453 ;;		_CANSetFilter
  2454 ;;		_CANSetMask
  2455 ;;		_CANSetMode
  2456 ;; This function is called by:
  2457 ;;		_main
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text13
  2462  00203C                     __ptext13:
  2463                           	opt stack 0
  2464  00203C                     _ComInit:
  2465                           	opt stack 0
  2466  00203C  FFFF               	dw	65535	; assembler added errata NOP
  2467                           
  2468                           ;com_can.c: 15: CANInit();
  2469                           
  2470                           ;incstack = 0
  2471  00203E  EC4D  F011         	call	_CANInit	;wreg free
  2472                           
  2473                           ;com_can.c: 16: CANSetMode( 4 );
  2474  002042  0E04               	movlw	4
  2475  002044  EC7B  F010         	call	_CANSetMode
  2476                           
  2477                           ;com_can.c: 19: CANSetBaudRate( 125000 );
  2478  002048  0E48               	movlw	72
  2479  00204A  6E10               	movwf	CANSetBaudRate@baudrate,c
  2480  00204C  0EE8               	movlw	232
  2481  00204E  6E11               	movwf	CANSetBaudRate@baudrate+1,c
  2482  002050  0E01               	movlw	1
  2483  002052  6E12               	movwf	CANSetBaudRate@baudrate+2,c
  2484  002054  0E00               	movlw	0
  2485  002056  6E13               	movwf	CANSetBaudRate@baudrate+3,c
  2486  002058  EC4C  F00F         	call	_CANSetBaudRate	;wreg free
  2487                           
  2488                           ;com_can.c: 20: CANSetMask( 0, &rxCANMessage, 0x00, 0 );
  2489  00205C  0EB5               	movlw	low _rxCANMessage
  2490  00205E  6E10               	movwf	CANSetMask@pObject,c
  2491  002060  0E00               	movlw	high _rxCANMessage
  2492  002062  6E11               	movwf	CANSetMask@pObject+1,c
  2493  002064  0E00               	movlw	0
  2494  002066  6E12               	movwf	CANSetMask@ui8IDType,c
  2495  002068  0E00               	movlw	0
  2496  00206A  6E13               	movwf	CANSetMask@bDoubleBuffer,c
  2497  00206C  0E00               	movlw	0
  2498  00206E  ECB5  F007         	call	_CANSetMask
  2499                           
  2500                           ;com_can.c: 21: CANSetFilter( 0, &rxCANMessage );
  2501  002072  0EB5               	movlw	low _rxCANMessage
  2502  002074  6E10               	movwf	CANSetFilter@pObject,c
  2503  002076  0E00               	movlw	high _rxCANMessage
  2504  002078  6E11               	movwf	CANSetFilter@pObject+1,c
  2505  00207A  0E00               	movlw	0
  2506  00207C  EC49  F00A         	call	_CANSetFilter
  2507                           
  2508                           ;com_can.c: 23: CANSetMode( 0 );
  2509  002080  0E00               	movlw	0
  2510  002082  EC7B  F010         	call	_CANSetMode
  2511                           
  2512                           ;com_can.c: 25: CANIntClear( 1<<0 | 1<<1 );
  2513  002086  0E03               	movlw	3
  2514  002088  EC82  F00E         	call	_CANIntClear
  2515                           
  2516                           ;com_can.c: 26: CANIntEnable( 1<<0 | 1<<1 );
  2517  00208C  0E03               	movlw	3
  2518  00208E  ECEB  F00D         	call	_CANIntEnable
  2519                           
  2520                           ;com_can.c: 28: INTCONbits.GIE = 1 ;
  2521  002092  8EF2               	bsf	intcon,7,c	;volatile
  2522                           
  2523                           ;com_can.c: 29: INTCONbits.PEIE = 1;
  2524  002094  8CF2               	bsf	intcon,6,c	;volatile
  2525  002096  0012               	return		;funcret
  2526  002098  FFFF               	dw	65535	; errata NOP
  2527  00209A                     __end_of_ComInit:
  2528                           	opt stack 0
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           intcon	equ	0xFF2
  2534                           indf0	equ	0xFEF
  2535                           postinc0	equ	0xFEE
  2536                           fsr0h	equ	0xFEA
  2537                           fsr0l	equ	0xFE9
  2538                           wreg	equ	0xFE8
  2539                           indf2	equ	0xFDF
  2540                           fsr2h	equ	0xFDA
  2541                           fsr2l	equ	0xFD9
  2542                           status	equ	0xFD8
  2543                           
  2544 ;; *************** function _CANSetMode *****************
  2545 ;; Defined at:
  2546 ;;		line 18 in file "CAN.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  mode            1    wreg     unsigned char 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  mode            1   17[COMRAM] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2560 ;;      Params:         0       0       0       0       0       0       0
  2561 ;;      Locals:         1       0       0       0       0       0       0
  2562 ;;      Temps:          2       0       0       0       0       0       0
  2563 ;;      Totals:         3       0       0       0       0       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    2
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_ComInit
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text14
  2575  0020F6                     __ptext14:
  2576                           	opt stack 0
  2577  0020F6                     _CANSetMode:
  2578                           	opt stack 0
  2579  0020F6  FFFF               	dw	65535	; assembler added errata NOP
  2580                           
  2581                           ;incstack = 0
  2582                           ;CANSetMode@mode stored from wreg
  2583  0020F8  6E12               	movwf	CANSetMode@mode,c
  2584                           
  2585                           ;CAN.c: 21: CANCON = (CANCON & ~(0xE0)) | (0xE0 & mode<<5);
  2586  0020FA  C012  F010         	movff	CANSetMode@mode,??_CANSetMode
  2587  0020FE  0E05               	movlw	5
  2588  002100  6E11               	movwf	(??_CANSetMode+1)& (0+255),c
  2589  002102                     u1525:
  2590  002102  FFFF               	dw	65535	; assembler added errata NOP
  2591  002104  90D8               	bcf	status,0,c
  2592  002106  3610               	rlcf	??_CANSetMode,f,c
  2593  002108  2E11               	decfsz	(??_CANSetMode+1)& (0+255),f,c
  2594  00210A  D7FB               	goto	u1525
  2595  00210C  0EE0               	movlw	224
  2596  00210E  1610               	andwf	??_CANSetMode,f,c
  2597  002110  506F               	movf	3951,w,c	;volatile
  2598  002112  0B1F               	andlw	31
  2599  002114  1010               	iorwf	??_CANSetMode,w,c
  2600  002116  6E6F               	movwf	3951,c	;volatile
  2601  002118                     l2187:
  2602  002118  FFFF               	dw	65535	; assembler added errata NOP
  2603  00211A  5012               	movf	CANSetMode@mode,w,c
  2604  00211C  6E10               	movwf	??_CANSetMode& (0+255),c
  2605  00211E  6A11               	clrf	(??_CANSetMode+1)& (0+255),c
  2606  002120  0E05               	movlw	5
  2607  002122                     u1535:
  2608  002122  FFFF               	dw	65535	; assembler added errata NOP
  2609  002124  90D8               	bcf	status,0,c
  2610  002126  3610               	rlcf	??_CANSetMode,f,c
  2611  002128  3611               	rlcf	??_CANSetMode+1,f,c
  2612  00212A  2EE8               	decfsz	wreg,f,c
  2613  00212C  D7FA               	goto	u1535
  2614  00212E  0EE0               	movlw	224
  2615  002130  1810               	xorwf	??_CANSetMode,w,c
  2616  002132  1011               	iorwf	??_CANSetMode+1,w,c
  2617  002134  B4D8               	btfsc	status,2,c
  2618  002136  D002               	goto	u1540
  2619  002138  0E01               	movlw	1
  2620  00213A  D002               	goto	u1550
  2621  00213C                     u1540:
  2622  00213C  FFFF               	dw	65535	; assembler added errata NOP
  2623  00213E  0E00               	movlw	0
  2624  002140                     u1550:
  2625  002140  FFFF               	dw	65535	; assembler added errata NOP
  2626  002142  146E               	andwf	3950,w,c	;volatile
  2627  002144  0900               	iorlw	0
  2628  002146  B4D8               	btfsc	status,2,c
  2629  002148  0012               	return		;funcret
  2630  00214A  FFFF               	dw	65535	; assembler added errata NOP
  2631  00214C  D7E5               	goto	l2187
  2632  00214E  FFFF               	dw	65535	; errata NOP
  2633  002150                     __end_of_CANSetMode:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           intcon	equ	0xFF2
  2640                           indf0	equ	0xFEF
  2641                           postinc0	equ	0xFEE
  2642                           fsr0h	equ	0xFEA
  2643                           fsr0l	equ	0xFE9
  2644                           wreg	equ	0xFE8
  2645                           indf2	equ	0xFDF
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function _CANSetMask *****************
  2651 ;; Defined at:
  2652 ;;		line 86 in file "CAN.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  ui8CanBfrNum    1    wreg     unsigned char 
  2655 ;;  pObject         2   15[COMRAM] PTR struct .
  2656 ;;		 -> rxCANMessage(18), 
  2657 ;;  ui8IDType       1   17[COMRAM] unsigned char 
  2658 ;;  bDoubleBuffe    1   18[COMRAM] unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  ui8CanBfrNum    1   24[COMRAM] unsigned char 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2670 ;;      Params:         4       0       0       0       0       0       0
  2671 ;;      Locals:         1       0       0       0       0       0       0
  2672 ;;      Temps:          5       0       0       0       0       0       0
  2673 ;;      Totals:        10       0       0       0       0       0       0
  2674 ;;Total ram usage:       10 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    2
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_ComInit
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text15
  2685  000F6A                     __ptext15:
  2686                           	opt stack 0
  2687  000F6A                     _CANSetMask:
  2688                           	opt stack 0
  2689  000F6A  FFFF               	dw	65535	; assembler added errata NOP
  2690                           
  2691                           ;incstack = 0
  2692                           ;CANSetMask@ui8CanBfrNum stored from wreg
  2693  000F6C  6E19               	movwf	CANSetMask@ui8CanBfrNum,c
  2694                           
  2695                           ;CAN.c: 93: if( ui8CanBfrNum == 0 )
  2696  000F6E  5019               	movf	CANSetMask@ui8CanBfrNum,w,c
  2697  000F70  A4D8               	btfss	status,2,c
  2698  000F72  D0B3               	goto	l2217
  2699                           
  2700                           ;CAN.c: 94: {
  2701                           ;CAN.c: 95: RXB0CON = (RXB0CON & ~(((3<<5) | (1<<2)))) | (((3<<5) | (1<<2)) & ((ui8IDTyp
      +                          e<<5) | (bDoubleBuffer<<2)));
  2702  000F74  C013  F014         	movff	CANSetMask@bDoubleBuffer,??_CANSetMask
  2703  000F78  90D8               	bcf	status,0,c
  2704  000F7A  3614               	rlcf	??_CANSetMask,f,c
  2705  000F7C  90D8               	bcf	status,0,c
  2706  000F7E  3614               	rlcf	??_CANSetMask,f,c
  2707  000F80  3812               	swapf	CANSetMask@ui8IDType,w,c
  2708  000F82  46E8               	rlncf	wreg,f,c
  2709  000F84  0BE0               	andlw	224
  2710  000F86  1014               	iorwf	??_CANSetMask,w,c
  2711  000F88  6E15               	movwf	(??_CANSetMask+1)& (0+255),c
  2712  000F8A  0E64               	movlw	100
  2713  000F8C  1615               	andwf	??_CANSetMask+1,f,c
  2714  000F8E  5060               	movf	3936,w,c	;volatile
  2715  000F90  0B9B               	andlw	155
  2716  000F92  1015               	iorwf	??_CANSetMask+1,w,c
  2717  000F94  6E60               	movwf	3936,c	;volatile
  2718                           
  2719                           ;CAN.c: 98: if( pObject->ui32MsgID <= 0x7ff )
  2720  000F96  C010  FFD9         	movff	CANSetMask@pObject,fsr2l
  2721  000F9A  C011  FFDA         	movff	CANSetMask@pObject+1,fsr2h
  2722  000F9E  0E03               	movlw	3
  2723  000FA0  50DB               	movf	plusw2,w,c
  2724  000FA2  E13C               	bnz	l2215
  2725  000FA4  0E02               	movlw	2
  2726  000FA6  50DB               	movf	plusw2,w,c
  2727  000FA8  E139               	bnz	l2215
  2728  000FAA  52DE               	movf	postinc2,f,c
  2729  000FAC  0E08               	movlw	8
  2730  000FAE  5CDE               	subwf	postinc2,w,c
  2731  000FB0  B0D8               	btfsc	status,0,c
  2732  000FB2  D034               	goto	l2215
  2733                           
  2734                           ;CAN.c: 99: {
  2735                           ;CAN.c: 100: RXM0SIDH = (RXM0SIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>3);
  2736  000FB4  EE20 F004          	lfsr	2,4
  2737  000FB8  5010               	movf	CANSetMask@pObject,w,c
  2738  000FBA  26D9               	addwf	fsr2l,f,c
  2739  000FBC  5011               	movf	CANSetMask@pObject+1,w,c
  2740  000FBE  22DA               	addwfc	fsr2h,f,c
  2741  000FC0  CFDE F014          	movff	postinc2,??_CANSetMask
  2742  000FC4  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2743  000FC8  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2744  000FCC  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2745  000FD0  0E04               	movlw	4
  2746  000FD2  D006               	goto	u1630
  2747  000FD4                     u1635:
  2748  000FD4  FFFF               	dw	65535	; assembler added errata NOP
  2749  000FD6  90D8               	bcf	status,0,c
  2750  000FD8  3217               	rrcf	??_CANSetMask+3,f,c
  2751  000FDA  3216               	rrcf	??_CANSetMask+2,f,c
  2752  000FDC  3215               	rrcf	??_CANSetMask+1,f,c
  2753  000FDE  3214               	rrcf	??_CANSetMask,f,c
  2754  000FE0                     u1630:
  2755  000FE0  FFFF               	dw	65535	; assembler added errata NOP
  2756  000FE2  2EE8               	decfsz	wreg,f,c
  2757  000FE4  D7F7               	goto	u1635
  2758  000FE6  C014  FF18         	movff	??_CANSetMask,3864
  2759                           
  2760                           ;CAN.c: 101: RXM0SIDL = (RXM0SIDL & ~(0xE0)) | (0xE0 & pObject->ui32MsgIDMask<<5);
  2761  000FEA  EE20 F004          	lfsr	2,4
  2762  000FEE  5010               	movf	CANSetMask@pObject,w,c
  2763  000FF0  26D9               	addwf	fsr2l,f,c
  2764  000FF2  5011               	movf	CANSetMask@pObject+1,w,c
  2765  000FF4  22DA               	addwfc	fsr2h,f,c
  2766  000FF6  50DF               	movf	indf2,w,c
  2767  000FF8  6E14               	movwf	??_CANSetMask& (0+255),c
  2768  000FFA  0E05               	movlw	5
  2769  000FFC  6E15               	movwf	(??_CANSetMask+1)& (0+255),c
  2770  000FFE                     u1645:
  2771  000FFE  FFFF               	dw	65535	; assembler added errata NOP
  2772  001000  90D8               	bcf	status,0,c
  2773  001002  3614               	rlcf	??_CANSetMask,f,c
  2774  001004  2E15               	decfsz	(??_CANSetMask+1)& (0+255),f,c
  2775  001006  D7FB               	goto	u1645
  2776  001008  0EE0               	movlw	224
  2777  00100A  1614               	andwf	??_CANSetMask,f,c
  2778                           
  2779                           ; multi bank
  2780  00100C  010F               	movlb	15
  2781  00100E  5119               	movf	25,w,b
  2782  001010  0B1F               	andlw	31
  2783  001012  1014               	iorwf	??_CANSetMask,w,c
  2784  001014  6E16               	movwf	(??_CANSetMask+2)& (0+255),c
  2785  001016  C016  FF19         	movff	??_CANSetMask+2,3865
  2786                           
  2787                           ;CAN.c: 102: }
  2788  00101A  D05F               	goto	l2217
  2789  00101C                     l2215:
  2790  00101C  FFFF               	dw	65535	; assembler added errata NOP
  2791                           
  2792                           ;CAN.c: 104: else
  2793                           ;CAN.c: 105: {
  2794                           ;CAN.c: 106: RXM0SIDH = (RXM0SIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>21);
  2795  00101E  EE20 F004          	lfsr	2,4
  2796  001022  5010               	movf	CANSetMask@pObject,w,c
  2797  001024  26D9               	addwf	fsr2l,f,c
  2798  001026  5011               	movf	CANSetMask@pObject+1,w,c
  2799  001028  22DA               	addwfc	fsr2h,f,c
  2800  00102A  CFDE F014          	movff	postinc2,??_CANSetMask
  2801  00102E  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2802  001032  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2803  001036  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2804  00103A  0E16               	movlw	22
  2805  00103C  D006               	goto	u1650
  2806  00103E                     u1655:
  2807  00103E  FFFF               	dw	65535	; assembler added errata NOP
  2808  001040  90D8               	bcf	status,0,c
  2809  001042  3217               	rrcf	??_CANSetMask+3,f,c
  2810  001044  3216               	rrcf	??_CANSetMask+2,f,c
  2811  001046  3215               	rrcf	??_CANSetMask+1,f,c
  2812  001048  3214               	rrcf	??_CANSetMask,f,c
  2813  00104A                     u1650:
  2814  00104A  FFFF               	dw	65535	; assembler added errata NOP
  2815  00104C  2EE8               	decfsz	wreg,f,c
  2816  00104E  D7F7               	goto	u1655
  2817  001050  C014  FF18         	movff	??_CANSetMask,3864
  2818                           
  2819                           ;CAN.c: 107: RXM0SIDL = (RXM0SIDL & ~(0x03)) | (0x03 & pObject->ui32MsgIDMask>>16);
  2820  001054  EE20 F004          	lfsr	2,4
  2821  001058  5010               	movf	CANSetMask@pObject,w,c
  2822  00105A  26D9               	addwf	fsr2l,f,c
  2823  00105C  5011               	movf	CANSetMask@pObject+1,w,c
  2824  00105E  22DA               	addwfc	fsr2h,f,c
  2825  001060  CFDE F014          	movff	postinc2,??_CANSetMask
  2826  001064  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2827  001068  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2828  00106C  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2829  001070  0E11               	movlw	17
  2830  001072  D006               	goto	u1660
  2831  001074                     u1665:
  2832  001074  FFFF               	dw	65535	; assembler added errata NOP
  2833  001076  90D8               	bcf	status,0,c
  2834  001078  3217               	rrcf	??_CANSetMask+3,f,c
  2835  00107A  3216               	rrcf	??_CANSetMask+2,f,c
  2836  00107C  3215               	rrcf	??_CANSetMask+1,f,c
  2837  00107E  3214               	rrcf	??_CANSetMask,f,c
  2838  001080                     u1660:
  2839  001080  FFFF               	dw	65535	; assembler added errata NOP
  2840  001082  2EE8               	decfsz	wreg,f,c
  2841  001084  D7F7               	goto	u1665
  2842  001086  0E03               	movlw	3
  2843  001088  1614               	andwf	??_CANSetMask,f,c
  2844                           
  2845                           ; multi bank
  2846  00108A  010F               	movlb	15
  2847  00108C  5119               	movf	25,w,b
  2848  00108E  0BFC               	andlw	252
  2849  001090  1014               	iorwf	??_CANSetMask,w,c
  2850  001092  6E18               	movwf	(??_CANSetMask+4)& (0+255),c
  2851  001094  C018  FF19         	movff	??_CANSetMask+4,3865
  2852                           
  2853                           ;CAN.c: 108: RXM0EIDH = (RXM0EIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>8);
  2854  001098  EE20 F004          	lfsr	2,4
  2855  00109C  5010               	movf	CANSetMask@pObject,w,c
  2856  00109E  26D9               	addwf	fsr2l,f,c
  2857  0010A0  5011               	movf	CANSetMask@pObject+1,w,c
  2858  0010A2  22DA               	addwfc	fsr2h,f,c
  2859  0010A4  CFDE F014          	movff	postinc2,??_CANSetMask
  2860  0010A8  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2861  0010AC  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2862  0010B0  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2863  0010B4  C015  F014         	movff	??_CANSetMask+1,??_CANSetMask
  2864  0010B8  C016  F015         	movff	??_CANSetMask+2,??_CANSetMask+1
  2865  0010BC  C017  F016         	movff	??_CANSetMask+3,??_CANSetMask+2
  2866  0010C0  6A17               	clrf	??_CANSetMask+3,c
  2867  0010C2  C014  FF1A         	movff	??_CANSetMask,3866
  2868                           
  2869                           ;CAN.c: 109: RXM0EIDL = (RXM0EIDL & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask);
  2870  0010C6  EE20 F004          	lfsr	2,4
  2871  0010CA  5010               	movf	CANSetMask@pObject,w,c
  2872  0010CC  26D9               	addwf	fsr2l,f,c
  2873  0010CE  5011               	movf	CANSetMask@pObject+1,w,c
  2874  0010D0  22DA               	addwfc	fsr2h,f,c
  2875  0010D2  50DF               	movf	indf2,w,c
  2876  0010D4  6E14               	movwf	??_CANSetMask& (0+255),c
  2877  0010D6  C014  FF1B         	movff	??_CANSetMask,3867
  2878  0010DA                     l2217:
  2879  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  2880                           
  2881                           ;CAN.c: 118: if ( ui8CanBfrNum == 1)
  2882  0010DC  0419               	decf	CANSetMask@ui8CanBfrNum,w,c
  2883  0010DE  A4D8               	btfss	status,2,c
  2884  0010E0  D0B4               	goto	l371
  2885                           
  2886                           ;CAN.c: 119: {
  2887                           ;CAN.c: 120: RXB1CON = (RXB1CON & ~((3<<5))) | ((3<<5) & ui8IDType<<5);
  2888  0010E2  C012  F014         	movff	CANSetMask@ui8IDType,??_CANSetMask
  2889  0010E6  0E05               	movlw	5
  2890  0010E8  6E15               	movwf	(??_CANSetMask+1)& (0+255),c
  2891  0010EA                     u1685:
  2892  0010EA  FFFF               	dw	65535	; assembler added errata NOP
  2893  0010EC  90D8               	bcf	status,0,c
  2894  0010EE  3614               	rlcf	??_CANSetMask,f,c
  2895  0010F0  2E15               	decfsz	(??_CANSetMask+1)& (0+255),f,c
  2896  0010F2  D7FB               	goto	u1685
  2897  0010F4  0E60               	movlw	96
  2898  0010F6  1614               	andwf	??_CANSetMask,f,c
  2899                           
  2900                           ; multi bank
  2901  0010F8  010F               	movlb	15
  2902  0010FA  5150               	movf	80,w,b
  2903  0010FC  0B9F               	andlw	159
  2904  0010FE  1014               	iorwf	??_CANSetMask,w,c
  2905  001100  6E16               	movwf	(??_CANSetMask+2)& (0+255),c
  2906  001102  C016  FF50         	movff	??_CANSetMask+2,3920
  2907                           
  2908                           ;CAN.c: 123: if( pObject->ui32MsgID <= 0x7ff )
  2909  001106  C010  FFD9         	movff	CANSetMask@pObject,fsr2l
  2910  00110A  C011  FFDA         	movff	CANSetMask@pObject+1,fsr2h
  2911  00110E  0E03               	movlw	3
  2912  001110  50DB               	movf	plusw2,w,c
  2913  001112  E13C               	bnz	l2225
  2914  001114  0E02               	movlw	2
  2915  001116  50DB               	movf	plusw2,w,c
  2916  001118  E139               	bnz	l2225
  2917  00111A  52DE               	movf	postinc2,f,c
  2918  00111C  0E08               	movlw	8
  2919  00111E  5CDE               	subwf	postinc2,w,c
  2920  001120  B0D8               	btfsc	status,0,c
  2921  001122  D034               	goto	l2225
  2922                           
  2923                           ;CAN.c: 124: {
  2924                           ;CAN.c: 125: RXM1SIDH = (RXM1SIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>3);
  2925  001124  EE20 F004          	lfsr	2,4
  2926  001128  5010               	movf	CANSetMask@pObject,w,c
  2927  00112A  26D9               	addwf	fsr2l,f,c
  2928  00112C  5011               	movf	CANSetMask@pObject+1,w,c
  2929  00112E  22DA               	addwfc	fsr2h,f,c
  2930  001130  CFDE F014          	movff	postinc2,??_CANSetMask
  2931  001134  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2932  001138  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2933  00113C  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2934  001140  0E04               	movlw	4
  2935  001142  D006               	goto	u1700
  2936  001144                     u1705:
  2937  001144  FFFF               	dw	65535	; assembler added errata NOP
  2938  001146  90D8               	bcf	status,0,c
  2939  001148  3217               	rrcf	??_CANSetMask+3,f,c
  2940  00114A  3216               	rrcf	??_CANSetMask+2,f,c
  2941  00114C  3215               	rrcf	??_CANSetMask+1,f,c
  2942  00114E  3214               	rrcf	??_CANSetMask,f,c
  2943  001150                     u1700:
  2944  001150  FFFF               	dw	65535	; assembler added errata NOP
  2945  001152  2EE8               	decfsz	wreg,f,c
  2946  001154  D7F7               	goto	u1705
  2947  001156  C014  FF1C         	movff	??_CANSetMask,3868
  2948                           
  2949                           ;CAN.c: 126: RXM1SIDL = (RXM1SIDL & ~(0xE0)) | (0xE0 & pObject->ui32MsgIDMask<<5);
  2950  00115A  EE20 F004          	lfsr	2,4
  2951  00115E  5010               	movf	CANSetMask@pObject,w,c
  2952  001160  26D9               	addwf	fsr2l,f,c
  2953  001162  5011               	movf	CANSetMask@pObject+1,w,c
  2954  001164  22DA               	addwfc	fsr2h,f,c
  2955  001166  50DF               	movf	indf2,w,c
  2956  001168  6E14               	movwf	??_CANSetMask& (0+255),c
  2957  00116A  0E05               	movlw	5
  2958  00116C  6E15               	movwf	(??_CANSetMask+1)& (0+255),c
  2959  00116E                     u1715:
  2960  00116E  FFFF               	dw	65535	; assembler added errata NOP
  2961  001170  90D8               	bcf	status,0,c
  2962  001172  3614               	rlcf	??_CANSetMask,f,c
  2963  001174  2E15               	decfsz	(??_CANSetMask+1)& (0+255),f,c
  2964  001176  D7FB               	goto	u1715
  2965  001178  0EE0               	movlw	224
  2966  00117A  1614               	andwf	??_CANSetMask,f,c
  2967                           
  2968                           ; multi bank
  2969  00117C  010F               	movlb	15
  2970  00117E  511D               	movf	29,w,b
  2971  001180  0B1F               	andlw	31
  2972  001182  1014               	iorwf	??_CANSetMask,w,c
  2973  001184  6E16               	movwf	(??_CANSetMask+2)& (0+255),c
  2974  001186  C016  FF1D         	movff	??_CANSetMask+2,3869
  2975                           
  2976                           ;CAN.c: 127: }
  2977  00118A  D05F               	goto	l371
  2978  00118C                     l2225:
  2979  00118C  FFFF               	dw	65535	; assembler added errata NOP
  2980                           
  2981                           ;CAN.c: 129: else
  2982                           ;CAN.c: 130: {
  2983                           ;CAN.c: 131: RXM1SIDH = (RXM1SIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>21);
  2984  00118E  EE20 F004          	lfsr	2,4
  2985  001192  5010               	movf	CANSetMask@pObject,w,c
  2986  001194  26D9               	addwf	fsr2l,f,c
  2987  001196  5011               	movf	CANSetMask@pObject+1,w,c
  2988  001198  22DA               	addwfc	fsr2h,f,c
  2989  00119A  CFDE F014          	movff	postinc2,??_CANSetMask
  2990  00119E  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2991  0011A2  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2992  0011A6  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2993  0011AA  0E16               	movlw	22
  2994  0011AC  D006               	goto	u1720
  2995  0011AE                     u1725:
  2996  0011AE  FFFF               	dw	65535	; assembler added errata NOP
  2997  0011B0  90D8               	bcf	status,0,c
  2998  0011B2  3217               	rrcf	??_CANSetMask+3,f,c
  2999  0011B4  3216               	rrcf	??_CANSetMask+2,f,c
  3000  0011B6  3215               	rrcf	??_CANSetMask+1,f,c
  3001  0011B8  3214               	rrcf	??_CANSetMask,f,c
  3002  0011BA                     u1720:
  3003  0011BA  FFFF               	dw	65535	; assembler added errata NOP
  3004  0011BC  2EE8               	decfsz	wreg,f,c
  3005  0011BE  D7F7               	goto	u1725
  3006  0011C0  C014  FF1C         	movff	??_CANSetMask,3868
  3007                           
  3008                           ;CAN.c: 132: RXM1SIDL = (RXM1SIDL & ~(0x03)) | (0x03 & pObject->ui32MsgIDMask>>16);
  3009  0011C4  EE20 F004          	lfsr	2,4
  3010  0011C8  5010               	movf	CANSetMask@pObject,w,c
  3011  0011CA  26D9               	addwf	fsr2l,f,c
  3012  0011CC  5011               	movf	CANSetMask@pObject+1,w,c
  3013  0011CE  22DA               	addwfc	fsr2h,f,c
  3014  0011D0  CFDE F014          	movff	postinc2,??_CANSetMask
  3015  0011D4  CFDE F015          	movff	postinc2,??_CANSetMask+1
  3016  0011D8  CFDE F016          	movff	postinc2,??_CANSetMask+2
  3017  0011DC  CFDE F017          	movff	postinc2,??_CANSetMask+3
  3018  0011E0  0E11               	movlw	17
  3019  0011E2  D006               	goto	u1730
  3020  0011E4                     u1735:
  3021  0011E4  FFFF               	dw	65535	; assembler added errata NOP
  3022  0011E6  90D8               	bcf	status,0,c
  3023  0011E8  3217               	rrcf	??_CANSetMask+3,f,c
  3024  0011EA  3216               	rrcf	??_CANSetMask+2,f,c
  3025  0011EC  3215               	rrcf	??_CANSetMask+1,f,c
  3026  0011EE  3214               	rrcf	??_CANSetMask,f,c
  3027  0011F0                     u1730:
  3028  0011F0  FFFF               	dw	65535	; assembler added errata NOP
  3029  0011F2  2EE8               	decfsz	wreg,f,c
  3030  0011F4  D7F7               	goto	u1735
  3031  0011F6  0E03               	movlw	3
  3032  0011F8  1614               	andwf	??_CANSetMask,f,c
  3033                           
  3034                           ; multi bank
  3035  0011FA  010F               	movlb	15
  3036  0011FC  511D               	movf	29,w,b
  3037  0011FE  0BFC               	andlw	252
  3038  001200  1014               	iorwf	??_CANSetMask,w,c
  3039  001202  6E18               	movwf	(??_CANSetMask+4)& (0+255),c
  3040  001204  C018  FF1D         	movff	??_CANSetMask+4,3869
  3041                           
  3042                           ;CAN.c: 133: RXM1EIDH = (RXM1EIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>8);
  3043  001208  EE20 F004          	lfsr	2,4
  3044  00120C  5010               	movf	CANSetMask@pObject,w,c
  3045  00120E  26D9               	addwf	fsr2l,f,c
  3046  001210  5011               	movf	CANSetMask@pObject+1,w,c
  3047  001212  22DA               	addwfc	fsr2h,f,c
  3048  001214  CFDE F014          	movff	postinc2,??_CANSetMask
  3049  001218  CFDE F015          	movff	postinc2,??_CANSetMask+1
  3050  00121C  CFDE F016          	movff	postinc2,??_CANSetMask+2
  3051  001220  CFDE F017          	movff	postinc2,??_CANSetMask+3
  3052  001224  C015  F014         	movff	??_CANSetMask+1,??_CANSetMask
  3053  001228  C016  F015         	movff	??_CANSetMask+2,??_CANSetMask+1
  3054  00122C  C017  F016         	movff	??_CANSetMask+3,??_CANSetMask+2
  3055  001230  6A17               	clrf	??_CANSetMask+3,c
  3056  001232  C014  FF1E         	movff	??_CANSetMask,3870
  3057                           
  3058                           ;CAN.c: 134: RXM1EIDL = (RXM1EIDL & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask);
  3059  001236  EE20 F004          	lfsr	2,4
  3060  00123A  5010               	movf	CANSetMask@pObject,w,c
  3061  00123C  26D9               	addwf	fsr2l,f,c
  3062  00123E  5011               	movf	CANSetMask@pObject+1,w,c
  3063  001240  22DA               	addwfc	fsr2h,f,c
  3064  001242  50DF               	movf	indf2,w,c
  3065  001244  6E14               	movwf	??_CANSetMask& (0+255),c
  3066  001246  C014  FF1F         	movff	??_CANSetMask,3871
  3067  00124A                     l371:
  3068  00124A  FFFF               	dw	65535	; assembler added errata NOP
  3069  00124C  0012               	return		;funcret
  3070  00124E  FFFF               	dw	65535	; errata NOP
  3071  001250                     __end_of_CANSetMask:
  3072                           	opt stack 0
  3073                           tblptru	equ	0xFF8
  3074                           tblptrh	equ	0xFF7
  3075                           tblptrl	equ	0xFF6
  3076                           tablat	equ	0xFF5
  3077                           intcon	equ	0xFF2
  3078                           indf0	equ	0xFEF
  3079                           postinc0	equ	0xFEE
  3080                           fsr0h	equ	0xFEA
  3081                           fsr0l	equ	0xFE9
  3082                           wreg	equ	0xFE8
  3083                           indf2	equ	0xFDF
  3084                           postinc2	equ	0xFDE
  3085                           plusw2	equ	0xFDB
  3086                           fsr2h	equ	0xFDA
  3087                           fsr2l	equ	0xFD9
  3088                           status	equ	0xFD8
  3089                           
  3090 ;; *************** function _CANSetFilter *****************
  3091 ;; Defined at:
  3092 ;;		line 150 in file "CAN.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  ui8CanFltrNu    1    wreg     unsigned char 
  3095 ;;  pObject         2   15[COMRAM] PTR struct .
  3096 ;;		 -> rxCANMessage(18), 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  ui8CanFltrNu    1   25[COMRAM] unsigned char 
  3099 ;;  FILTER_BASE_    2   30[COMRAM] PTR volatile unsigned ch
  3100 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3101 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3102 ;;  RXFSIDL_PTR     2   28[COMRAM] PTR volatile unsigned ch
  3103 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3104 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3105 ;;  RXFSIDH_PTR     2   26[COMRAM] PTR volatile unsigned ch
  3106 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3107 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3108 ;;  RXFEIDL_PTR     2   23[COMRAM] PTR volatile unsigned ch
  3109 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3110 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3111 ;;  RXFEIDH_PTR     2   21[COMRAM] PTR volatile unsigned ch
  3112 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3113 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3123 ;;      Params:         2       0       0       0       0       0       0
  3124 ;;      Locals:        11       0       0       0       0       0       0
  3125 ;;      Temps:          4       0       0       0       0       0       0
  3126 ;;      Totals:        17       0       0       0       0       0       0
  3127 ;;Total ram usage:       17 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    2
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_ComInit
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text16
  3138  001492                     __ptext16:
  3139                           	opt stack 0
  3140  001492                     _CANSetFilter:
  3141                           	opt stack 0
  3142  001492  FFFF               	dw	65535	; assembler added errata NOP
  3143                           
  3144                           ;incstack = 0
  3145                           ;CANSetFilter@ui8CanFltrNum stored from wreg
  3146  001494  6E1A               	movwf	CANSetFilter@ui8CanFltrNum,c
  3147                           
  3148                           ;CAN.c: 161: volatile uint8_t * FILTER_BASE_ADDRESS = 0;
  3149  001496  0E00               	movlw	0
  3150  001498  6E1F               	movwf	CANSetFilter@FILTER_BASE_ADDRESS,c
  3151  00149A  0E00               	movlw	0
  3152  00149C  6E20               	movwf	CANSetFilter@FILTER_BASE_ADDRESS+1,c
  3153                           
  3154                           ;CAN.c: 163: switch (ui8CanFltrNum)
  3155  00149E  D016               	goto	l2243
  3156  0014A0                     l2229:
  3157  0014A0  FFFF               	dw	65535	; assembler added errata NOP
  3158                           
  3159                           ;CAN.c: 166: FILTER_BASE_ADDRESS = &RXF0SIDH;
  3160  0014A2  0E00               	movlw	0
  3161  0014A4  D00E               	goto	L5
  3162  0014A6                     l2231:
  3163  0014A6  FFFF               	dw	65535	; assembler added errata NOP
  3164                           
  3165                           ;CAN.c: 169: FILTER_BASE_ADDRESS = &RXF1SIDH;
  3166  0014A8  0E04               	movlw	4
  3167  0014AA  D00B               	goto	L5
  3168  0014AC                     l2233:
  3169  0014AC  FFFF               	dw	65535	; assembler added errata NOP
  3170                           
  3171                           ;CAN.c: 172: FILTER_BASE_ADDRESS = &RXF2SIDH;
  3172  0014AE  0E08               	movlw	8
  3173  0014B0  D008               	goto	L5
  3174  0014B2                     l2235:
  3175  0014B2  FFFF               	dw	65535	; assembler added errata NOP
  3176                           
  3177                           ;CAN.c: 175: FILTER_BASE_ADDRESS = &RXF3SIDH;
  3178  0014B4  0E0C               	movlw	12
  3179  0014B6  D005               	goto	L5
  3180  0014B8                     l2237:
  3181  0014B8  FFFF               	dw	65535	; assembler added errata NOP
  3182                           
  3183                           ;CAN.c: 178: FILTER_BASE_ADDRESS = &RXF4SIDH;
  3184  0014BA  0E10               	movlw	16
  3185  0014BC  D002               	goto	L5
  3186  0014BE                     l2239:
  3187  0014BE  FFFF               	dw	65535	; assembler added errata NOP
  3188                           
  3189                           ;CAN.c: 181: FILTER_BASE_ADDRESS = &RXF5SIDH;
  3190  0014C0  0E14               	movlw	20
  3191  0014C2                     L5:
  3192  0014C2  FFFF               	dw	65535	; assembler added errata NOP
  3193  0014C4  6E1F               	movwf	CANSetFilter@FILTER_BASE_ADDRESS,c
  3194  0014C6  0E0F               	movlw	15
  3195  0014C8  6E20               	movwf	CANSetFilter@FILTER_BASE_ADDRESS+1,c
  3196                           
  3197                           ;CAN.c: 183: }
  3198                           
  3199                           ;CAN.c: 182: break;
  3200  0014CA  D014               	goto	l376
  3201  0014CC                     l2243:
  3202  0014CC  FFFF               	dw	65535	; assembler added errata NOP
  3203  0014CE  501A               	movf	CANSetFilter@ui8CanFltrNum,w,c
  3204                           
  3205                           ; Switch size 1, requested type "space"
  3206                           ; Number of cases is 6, Range of values is 0 to 6
  3207                           ; switch strategies available:
  3208                           ; Name         Instructions Cycles
  3209                           ; simple_byte           19    10 (average)
  3210                           ;	Chosen strategy is simple_byte
  3211  0014D0  0A00               	xorlw	0	; case 0
  3212  0014D2  B4D8               	btfsc	status,2,c
  3213  0014D4  D7E5               	goto	l2229
  3214  0014D6  0A01               	xorlw	1	; case 1
  3215  0014D8  B4D8               	btfsc	status,2,c
  3216  0014DA  D7E5               	goto	l2231
  3217  0014DC  0A03               	xorlw	3	; case 2
  3218  0014DE  B4D8               	btfsc	status,2,c
  3219  0014E0  D7E5               	goto	l2233
  3220  0014E2  0A01               	xorlw	1	; case 3
  3221  0014E4  B4D8               	btfsc	status,2,c
  3222  0014E6  D7E5               	goto	l2235
  3223  0014E8  0A06               	xorlw	6	; case 5
  3224  0014EA  B4D8               	btfsc	status,2,c
  3225  0014EC  D7E5               	goto	l2237
  3226  0014EE  0A03               	xorlw	3	; case 6
  3227  0014F0  B4D8               	btfsc	status,2,c
  3228  0014F2  D7E5               	goto	l2239
  3229  0014F4                     l376:
  3230  0014F4  FFFF               	dw	65535	; assembler added errata NOP
  3231                           
  3232                           ;CAN.c: 186: volatile uint8_t * RXFSIDH_PTR = FILTER_BASE_ADDRESS ;
  3233  0014F6  C01F  F01B         	movff	CANSetFilter@FILTER_BASE_ADDRESS,CANSetFilter@RXFSIDH_PTR
  3234  0014FA  C020  F01C         	movff	CANSetFilter@FILTER_BASE_ADDRESS+1,CANSetFilter@RXFSIDH_PTR+1
  3235                           
  3236                           ;CAN.c: 187: volatile uint8_t * RXFSIDL_PTR = FILTER_BASE_ADDRESS + 1 ;
  3237  0014FE  0E01               	movlw	1
  3238  001500  241F               	addwf	CANSetFilter@FILTER_BASE_ADDRESS,w,c
  3239  001502  6E1D               	movwf	CANSetFilter@RXFSIDL_PTR,c
  3240  001504  0E00               	movlw	0
  3241  001506  2020               	addwfc	CANSetFilter@FILTER_BASE_ADDRESS+1,w,c
  3242  001508  6E1E               	movwf	CANSetFilter@RXFSIDL_PTR+1,c
  3243                           
  3244                           ;CAN.c: 188: volatile uint8_t * RXFEIDH_PTR = FILTER_BASE_ADDRESS + 2 ;
  3245  00150A  0E02               	movlw	2
  3246  00150C  241F               	addwf	CANSetFilter@FILTER_BASE_ADDRESS,w,c
  3247  00150E  6E16               	movwf	CANSetFilter@RXFEIDH_PTR,c
  3248  001510  0E00               	movlw	0
  3249  001512  2020               	addwfc	CANSetFilter@FILTER_BASE_ADDRESS+1,w,c
  3250  001514  6E17               	movwf	CANSetFilter@RXFEIDH_PTR+1,c
  3251                           
  3252                           ;CAN.c: 189: volatile uint8_t * RXFEIDL_PTR = FILTER_BASE_ADDRESS + 3 ;
  3253  001516  0E03               	movlw	3
  3254  001518  241F               	addwf	CANSetFilter@FILTER_BASE_ADDRESS,w,c
  3255  00151A  6E18               	movwf	CANSetFilter@RXFEIDL_PTR,c
  3256  00151C  0E00               	movlw	0
  3257  00151E  2020               	addwfc	CANSetFilter@FILTER_BASE_ADDRESS+1,w,c
  3258  001520  6E19               	movwf	CANSetFilter@RXFEIDL_PTR+1,c
  3259                           
  3260                           ;CAN.c: 195: if( pObject->ui32MsgID <= 0x7ff )
  3261  001522  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3262  001526  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3263  00152A  0E03               	movlw	3
  3264  00152C  50DB               	movf	plusw2,w,c
  3265  00152E  E141               	bnz	l2251
  3266  001530  0E02               	movlw	2
  3267  001532  50DB               	movf	plusw2,w,c
  3268  001534  E13E               	bnz	l2251
  3269  001536  52DE               	movf	postinc2,f,c
  3270  001538  0E08               	movlw	8
  3271  00153A  5CDE               	subwf	postinc2,w,c
  3272  00153C  B0D8               	btfsc	status,0,c
  3273  00153E  D039               	goto	l2251
  3274                           
  3275                           ;CAN.c: 196: {
  3276                           ;CAN.c: 198: *(RXFSIDH_PTR) = (*(RXFSIDH_PTR) & ~(0xFF)) | (0xFF & (pObject->ui32MsgID)>
      +                          >3);
  3277  001540  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3278  001544  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3279  001548  CFDE F012          	movff	postinc2,??_CANSetFilter
  3280  00154C  CFDE F013          	movff	postinc2,??_CANSetFilter+1
  3281  001550  CFDE F014          	movff	postinc2,??_CANSetFilter+2
  3282  001554  CFDE F015          	movff	postinc2,??_CANSetFilter+3
  3283  001558  0E04               	movlw	4
  3284  00155A  D006               	goto	u1750
  3285  00155C                     u1755:
  3286  00155C  FFFF               	dw	65535	; assembler added errata NOP
  3287  00155E  90D8               	bcf	status,0,c
  3288  001560  3215               	rrcf	??_CANSetFilter+3,f,c
  3289  001562  3214               	rrcf	??_CANSetFilter+2,f,c
  3290  001564  3213               	rrcf	??_CANSetFilter+1,f,c
  3291  001566  3212               	rrcf	??_CANSetFilter,f,c
  3292  001568                     u1750:
  3293  001568  FFFF               	dw	65535	; assembler added errata NOP
  3294  00156A  2EE8               	decfsz	wreg,f,c
  3295  00156C  D7F7               	goto	u1755
  3296  00156E  5012               	movf	??_CANSetFilter,w,c
  3297  001570  C01B  FFD9         	movff	CANSetFilter@RXFSIDH_PTR,fsr2l
  3298  001574  C01C  FFDA         	movff	CANSetFilter@RXFSIDH_PTR+1,fsr2h
  3299  001578  6EDF               	movwf	indf2,c
  3300                           
  3301                           ;CAN.c: 199: *(RXFSIDL_PTR) = (*(RXFSIDL_PTR) & ~(0xE0)) | (0xE0 & (pObject->ui32MsgID)<
      +                          <5);
  3302  00157A  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3303  00157E  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3304  001582  50DF               	movf	indf2,w,c
  3305  001584  6E12               	movwf	??_CANSetFilter& (0+255),c
  3306  001586  0E05               	movlw	5
  3307  001588  6E13               	movwf	(??_CANSetFilter+1)& (0+255),c
  3308  00158A                     u1765:
  3309  00158A  FFFF               	dw	65535	; assembler added errata NOP
  3310  00158C  90D8               	bcf	status,0,c
  3311  00158E  3612               	rlcf	??_CANSetFilter,f,c
  3312  001590  2E13               	decfsz	(??_CANSetFilter+1)& (0+255),f,c
  3313  001592  D7FB               	goto	u1765
  3314  001594  0EE0               	movlw	224
  3315  001596  1612               	andwf	??_CANSetFilter,f,c
  3316  001598  C01D  FFD9         	movff	CANSetFilter@RXFSIDL_PTR,fsr2l
  3317  00159C  C01E  FFDA         	movff	CANSetFilter@RXFSIDL_PTR+1,fsr2h
  3318  0015A0  50DF               	movf	indf2,w,c
  3319  0015A2  0B1F               	andlw	31
  3320  0015A4  1012               	iorwf	??_CANSetFilter,w,c
  3321  0015A6  C01D  FFD9         	movff	CANSetFilter@RXFSIDL_PTR,fsr2l
  3322  0015AA  C01E  FFDA         	movff	CANSetFilter@RXFSIDL_PTR+1,fsr2h
  3323  0015AE  6EDF               	movwf	indf2,c
  3324                           
  3325                           ;CAN.c: 200: }
  3326  0015B0  D066               	goto	l384
  3327  0015B2                     l2251:
  3328  0015B2  FFFF               	dw	65535	; assembler added errata NOP
  3329                           
  3330                           ;CAN.c: 202: else
  3331                           ;CAN.c: 203: {
  3332                           ;CAN.c: 204: *(RXFSIDH_PTR) = (*(RXFSIDH_PTR) & ~(0xFF)) | (0xFF & (pObject->ui32MsgID)>
      +                          >21);
  3333  0015B4  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3334  0015B8  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3335  0015BC  CFDE F012          	movff	postinc2,??_CANSetFilter
  3336  0015C0  CFDE F013          	movff	postinc2,??_CANSetFilter+1
  3337  0015C4  CFDE F014          	movff	postinc2,??_CANSetFilter+2
  3338  0015C8  CFDE F015          	movff	postinc2,??_CANSetFilter+3
  3339  0015CC  0E16               	movlw	22
  3340  0015CE  D006               	goto	u1770
  3341  0015D0                     u1775:
  3342  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  3343  0015D2  90D8               	bcf	status,0,c
  3344  0015D4  3215               	rrcf	??_CANSetFilter+3,f,c
  3345  0015D6  3214               	rrcf	??_CANSetFilter+2,f,c
  3346  0015D8  3213               	rrcf	??_CANSetFilter+1,f,c
  3347  0015DA  3212               	rrcf	??_CANSetFilter,f,c
  3348  0015DC                     u1770:
  3349  0015DC  FFFF               	dw	65535	; assembler added errata NOP
  3350  0015DE  2EE8               	decfsz	wreg,f,c
  3351  0015E0  D7F7               	goto	u1775
  3352  0015E2  5012               	movf	??_CANSetFilter,w,c
  3353  0015E4  C01B  FFD9         	movff	CANSetFilter@RXFSIDH_PTR,fsr2l
  3354  0015E8  C01C  FFDA         	movff	CANSetFilter@RXFSIDH_PTR+1,fsr2h
  3355  0015EC  6EDF               	movwf	indf2,c
  3356                           
  3357                           ;CAN.c: 205: *(RXFSIDL_PTR) = (*(RXFSIDL_PTR) & ~(0x03)) | (0x03 & (pObject->ui32MsgID)>
      +                          >16);
  3358  0015EE  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3359  0015F2  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3360  0015F6  CFDE F012          	movff	postinc2,??_CANSetFilter
  3361  0015FA  CFDE F013          	movff	postinc2,??_CANSetFilter+1
  3362  0015FE  CFDE F014          	movff	postinc2,??_CANSetFilter+2
  3363  001602  CFDE F015          	movff	postinc2,??_CANSetFilter+3
  3364  001606  0E11               	movlw	17
  3365  001608  D006               	goto	u1780
  3366  00160A                     u1785:
  3367  00160A  FFFF               	dw	65535	; assembler added errata NOP
  3368  00160C  90D8               	bcf	status,0,c
  3369  00160E  3215               	rrcf	??_CANSetFilter+3,f,c
  3370  001610  3214               	rrcf	??_CANSetFilter+2,f,c
  3371  001612  3213               	rrcf	??_CANSetFilter+1,f,c
  3372  001614  3212               	rrcf	??_CANSetFilter,f,c
  3373  001616                     u1780:
  3374  001616  FFFF               	dw	65535	; assembler added errata NOP
  3375  001618  2EE8               	decfsz	wreg,f,c
  3376  00161A  D7F7               	goto	u1785
  3377  00161C  0E03               	movlw	3
  3378  00161E  1612               	andwf	??_CANSetFilter,f,c
  3379  001620  C01D  FFD9         	movff	CANSetFilter@RXFSIDL_PTR,fsr2l
  3380  001624  C01E  FFDA         	movff	CANSetFilter@RXFSIDL_PTR+1,fsr2h
  3381  001628  50DF               	movf	indf2,w,c
  3382  00162A  0BFC               	andlw	252
  3383  00162C  1012               	iorwf	??_CANSetFilter,w,c
  3384  00162E  C01D  FFD9         	movff	CANSetFilter@RXFSIDL_PTR,fsr2l
  3385  001632  C01E  FFDA         	movff	CANSetFilter@RXFSIDL_PTR+1,fsr2h
  3386  001636  6EDF               	movwf	indf2,c
  3387                           
  3388                           ;CAN.c: 206: *(RXFEIDH_PTR) = (*(RXFEIDH_PTR) & ~(0xFF)) | (0xFF & (pObject->ui32MsgID)>
      +                          >8);
  3389  001638  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3390  00163C  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3391  001640  CFDE F012          	movff	postinc2,??_CANSetFilter
  3392  001644  CFDE F013          	movff	postinc2,??_CANSetFilter+1
  3393  001648  CFDE F014          	movff	postinc2,??_CANSetFilter+2
  3394  00164C  CFDE F015          	movff	postinc2,??_CANSetFilter+3
  3395  001650  C013  F012         	movff	??_CANSetFilter+1,??_CANSetFilter
  3396  001654  C014  F013         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3397  001658  C015  F014         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3398  00165C  6A15               	clrf	??_CANSetFilter+3,c
  3399  00165E  5012               	movf	??_CANSetFilter,w,c
  3400  001660  C016  FFD9         	movff	CANSetFilter@RXFEIDH_PTR,fsr2l
  3401  001664  C017  FFDA         	movff	CANSetFilter@RXFEIDH_PTR+1,fsr2h
  3402  001668  6EDF               	movwf	indf2,c
  3403                           
  3404                           ;CAN.c: 207: *(RXFEIDL_PTR) = (*(RXFEIDL_PTR) & ~(0xFF)) | (0xFF & (pObject->ui32MsgID))
      +                          ;
  3405  00166A  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3406  00166E  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3407  001672  C018  FFE1         	movff	CANSetFilter@RXFEIDL_PTR,fsr1l
  3408  001676  C019  FFE2         	movff	CANSetFilter@RXFEIDL_PTR+1,fsr1h
  3409  00167A  CFDF FFE7          	movff	indf2,indf1
  3410  00167E                     l384:
  3411  00167E  FFFF               	dw	65535	; assembler added errata NOP
  3412  001680  0012               	return		;funcret
  3413  001682  FFFF               	dw	65535	; errata NOP
  3414  001684                     __end_of_CANSetFilter:
  3415                           	opt stack 0
  3416                           tblptru	equ	0xFF8
  3417                           tblptrh	equ	0xFF7
  3418                           tblptrl	equ	0xFF6
  3419                           tablat	equ	0xFF5
  3420                           intcon	equ	0xFF2
  3421                           indf0	equ	0xFEF
  3422                           postinc0	equ	0xFEE
  3423                           fsr0h	equ	0xFEA
  3424                           fsr0l	equ	0xFE9
  3425                           wreg	equ	0xFE8
  3426                           indf1	equ	0xFE7
  3427                           fsr1h	equ	0xFE2
  3428                           fsr1l	equ	0xFE1
  3429                           indf2	equ	0xFDF
  3430                           postinc2	equ	0xFDE
  3431                           plusw2	equ	0xFDB
  3432                           fsr2h	equ	0xFDA
  3433                           fsr2l	equ	0xFD9
  3434                           status	equ	0xFD8
  3435                           
  3436 ;; *************** function _CANSetBaudRate *****************
  3437 ;; Defined at:
  3438 ;;		line 36 in file "CAN.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  baudrate        4   15[COMRAM] unsigned long 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3452 ;;      Params:         4       0       0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0
  3455 ;;      Totals:         4       0       0       0       0       0       0
  3456 ;;Total ram usage:        4 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    2
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_ComInit
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text17
  3467  001E98                     __ptext17:
  3468                           	opt stack 0
  3469  001E98                     _CANSetBaudRate:
  3470                           	opt stack 0
  3471  001E98  FFFF               	dw	65535	; assembler added errata NOP
  3472                           
  3473                           ;CAN.c: 40: if (baudrate==100000)
  3474                           
  3475                           ;incstack = 0
  3476  001E9A  0EA0               	movlw	160
  3477  001E9C  1810               	xorwf	CANSetBaudRate@baudrate,w,c
  3478  001E9E  E107               	bnz	l2193
  3479  001EA0  0E86               	movlw	134
  3480  001EA2  1811               	xorwf	CANSetBaudRate@baudrate+1,w,c
  3481  001EA4  E104               	bnz	l2193
  3482  001EA6  0412               	decf	CANSetBaudRate@baudrate+2,w,c
  3483  001EA8  1013               	iorwf	CANSetBaudRate@baudrate+3,w,c
  3484  001EAA  B4D8               	btfsc	status,2,c
  3485  001EAC  D028               	goto	l2205
  3486  001EAE                     l2193:
  3487                           
  3488                           ;CAN.c: 46: else if (baudrate==125000)
  3489  001EAE  0E48               	movlw	72
  3490  001EB0  1810               	xorwf	CANSetBaudRate@baudrate,w,c
  3491  001EB2  E109               	bnz	l2197
  3492  001EB4  0EE8               	movlw	232
  3493  001EB6  1811               	xorwf	CANSetBaudRate@baudrate+1,w,c
  3494  001EB8  E106               	bnz	l2197
  3495  001EBA  0412               	decf	CANSetBaudRate@baudrate+2,w,c
  3496  001EBC  1013               	iorwf	CANSetBaudRate@baudrate+3,w,c
  3497  001EBE  A4D8               	btfss	status,2,c
  3498  001EC0  D002               	goto	l2197
  3499                           
  3500                           ;CAN.c: 47: {
  3501                           ;CAN.c: 48: BRGCON1 = 0x87;
  3502  001EC2  0E87               	movlw	135
  3503  001EC4  D01E               	goto	L9
  3504  001EC6                     l2197:
  3505  001EC6  FFFF               	dw	65535	; assembler added errata NOP
  3506                           
  3507                           ;CAN.c: 52: else if (baudrate==500000)
  3508  001EC8  0E20               	movlw	32
  3509  001ECA  1810               	xorwf	CANSetBaudRate@baudrate,w,c
  3510  001ECC  E10A               	bnz	l2201
  3511  001ECE  0EA1               	movlw	161
  3512  001ED0  1811               	xorwf	CANSetBaudRate@baudrate+1,w,c
  3513  001ED2  E107               	bnz	l2201
  3514  001ED4  0E07               	movlw	7
  3515  001ED6  1812               	xorwf	CANSetBaudRate@baudrate+2,w,c
  3516  001ED8  1013               	iorwf	CANSetBaudRate@baudrate+3,w,c
  3517  001EDA  A4D8               	btfss	status,2,c
  3518  001EDC  D002               	goto	l2201
  3519                           
  3520                           ;CAN.c: 53: {
  3521                           ;CAN.c: 54: BRGCON1 = 0x81;
  3522  001EDE  0E81               	movlw	129
  3523  001EE0  D010               	goto	L9
  3524  001EE2                     l2201:
  3525  001EE2  FFFF               	dw	65535	; assembler added errata NOP
  3526                           
  3527                           ;CAN.c: 58: else if (baudrate==1000000)
  3528  001EE4  0E40               	movlw	64
  3529  001EE6  1810               	xorwf	CANSetBaudRate@baudrate,w,c
  3530  001EE8  E10A               	bnz	l2205
  3531  001EEA  0E42               	movlw	66
  3532  001EEC  1811               	xorwf	CANSetBaudRate@baudrate+1,w,c
  3533  001EEE  E107               	bnz	l2205
  3534  001EF0  0E0F               	movlw	15
  3535  001EF2  1812               	xorwf	CANSetBaudRate@baudrate+2,w,c
  3536  001EF4  1013               	iorwf	CANSetBaudRate@baudrate+3,w,c
  3537  001EF6  A4D8               	btfss	status,2,c
  3538  001EF8  D002               	goto	l2205
  3539                           
  3540                           ;CAN.c: 59: {
  3541                           ;CAN.c: 61: BRGCON1 = 0x80;
  3542  001EFA  0E80               	movlw	128
  3543  001EFC  D002               	goto	L9
  3544  001EFE                     l2205:
  3545  001EFE  FFFF               	dw	65535	; assembler added errata NOP
  3546                           
  3547                           ;CAN.c: 65: else
  3548                           ;CAN.c: 66: {
  3549                           ;CAN.c: 68: BRGCON1 = 0x89;
  3550  001F00  0E89               	movlw	137
  3551  001F02                     L9:
  3552  001F02  FFFF               	dw	65535	; assembler added errata NOP
  3553  001F04  6E70               	movwf	3952,c	;volatile
  3554                           
  3555                           ;CAN.c: 69: BRGCON2 = 0xB8;
  3556  001F06  0EB8               	movlw	184
  3557  001F08  6E71               	movwf	3953,c	;volatile
  3558                           
  3559                           ;CAN.c: 70: BRGCON3 = 0x05;
  3560  001F0A  0E05               	movlw	5
  3561  001F0C  6E72               	movwf	3954,c	;volatile
  3562  001F0E  0012               	return		;funcret
  3563  001F10  FFFF               	dw	65535	; errata NOP
  3564  001F12                     __end_of_CANSetBaudRate:
  3565                           	opt stack 0
  3566                           tblptru	equ	0xFF8
  3567                           tblptrh	equ	0xFF7
  3568                           tblptrl	equ	0xFF6
  3569                           tablat	equ	0xFF5
  3570                           intcon	equ	0xFF2
  3571                           indf0	equ	0xFEF
  3572                           postinc0	equ	0xFEE
  3573                           fsr0h	equ	0xFEA
  3574                           fsr0l	equ	0xFE9
  3575                           wreg	equ	0xFE8
  3576                           indf1	equ	0xFE7
  3577                           fsr1h	equ	0xFE2
  3578                           fsr1l	equ	0xFE1
  3579                           indf2	equ	0xFDF
  3580                           postinc2	equ	0xFDE
  3581                           plusw2	equ	0xFDB
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586 ;; *************** function _CANIntEnable *****************
  3587 ;; Defined at:
  3588 ;;		line 447 in file "CAN.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  type            1    wreg     unsigned char 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  type            1   15[COMRAM] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3602 ;;      Params:         0       0       0       0       0       0       0
  3603 ;;      Locals:         1       0       0       0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0
  3605 ;;      Totals:         1       0       0       0       0       0       0
  3606 ;;Total ram usage:        1 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    2
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_ComInit
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text18
  3617  001BD6                     __ptext18:
  3618                           	opt stack 0
  3619  001BD6                     _CANIntEnable:
  3620                           	opt stack 0
  3621  001BD6  FFFF               	dw	65535	; assembler added errata NOP
  3622                           
  3623                           ;incstack = 0
  3624                           ;CANIntEnable@type stored from wreg
  3625  001BD8  6E10               	movwf	CANIntEnable@type,c
  3626                           
  3627                           ;CAN.c: 449: if( (type & 1<<0) == 1 )
  3628  001BDA  A010               	btfss	CANIntEnable@type,0,c
  3629  001BDC  D004               	goto	l428
  3630                           
  3631                           ;CAN.c: 450: {
  3632                           ;CAN.c: 451: PIE3 = (PIE3 & ~(1<<0)) | (1<<0 & 0xFF);
  3633  001BDE  50A3               	movf	4003,w,c	;volatile
  3634  001BE0  0BFE               	andlw	254
  3635  001BE2  0901               	iorlw	1
  3636  001BE4  6EA3               	movwf	4003,c	;volatile
  3637  001BE6                     l428:
  3638  001BE6  FFFF               	dw	65535	; assembler added errata NOP
  3639                           
  3640                           ;CAN.c: 455: if( (type & 1<<1) == 2 )
  3641  001BE8  A210               	btfss	CANIntEnable@type,1,c
  3642  001BEA  D004               	goto	l2263
  3643                           
  3644                           ;CAN.c: 456: {
  3645                           ;CAN.c: 457: PIE3 = (PIE3 & ~(1<<1)) | (1<<1 & 0xFF);
  3646  001BEC  50A3               	movf	4003,w,c	;volatile
  3647  001BEE  0BFD               	andlw	253
  3648  001BF0  0902               	iorlw	2
  3649  001BF2  6EA3               	movwf	4003,c	;volatile
  3650  001BF4                     l2263:
  3651  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  3652                           
  3653                           ;CAN.c: 461: if( (type & 1<<2) == 3 )
  3654  001BF6  5010               	movf	CANIntEnable@type,w,c
  3655  001BF8  0B04               	andlw	4
  3656  001BFA  0A03               	xorlw	3
  3657  001BFC  A4D8               	btfss	status,2,c
  3658  001BFE  D004               	goto	l2267
  3659                           
  3660                           ;CAN.c: 462: {
  3661                           ;CAN.c: 463: PIE3 = (PIE3 & ~(1<<2)) | (1<<2 & 0xFF);
  3662  001C00  50A3               	movf	4003,w,c	;volatile
  3663  001C02  0BFB               	andlw	251
  3664  001C04  0904               	iorlw	4
  3665  001C06  6EA3               	movwf	4003,c	;volatile
  3666  001C08                     l2267:
  3667  001C08  FFFF               	dw	65535	; assembler added errata NOP
  3668                           
  3669                           ;CAN.c: 467: if( (type & 1<<3) == 4 )
  3670  001C0A  5010               	movf	CANIntEnable@type,w,c
  3671  001C0C  0B08               	andlw	8
  3672  001C0E  0A04               	xorlw	4
  3673  001C10  A4D8               	btfss	status,2,c
  3674  001C12  D004               	goto	l2271
  3675                           
  3676                           ;CAN.c: 468: {
  3677                           ;CAN.c: 469: PIE3 = (PIE3 & ~(1<<3)) | (1<<3 & 0xFF);
  3678  001C14  50A3               	movf	4003,w,c	;volatile
  3679  001C16  0BF7               	andlw	247
  3680  001C18  0908               	iorlw	8
  3681  001C1A  6EA3               	movwf	4003,c	;volatile
  3682  001C1C                     l2271:
  3683  001C1C  FFFF               	dw	65535	; assembler added errata NOP
  3684                           
  3685                           ;CAN.c: 473: if( (type & 1<<4) == 5 )
  3686  001C1E  5010               	movf	CANIntEnable@type,w,c
  3687  001C20  0B10               	andlw	16
  3688  001C22  0A05               	xorlw	5
  3689  001C24  A4D8               	btfss	status,2,c
  3690  001C26  D004               	goto	l2275
  3691                           
  3692                           ;CAN.c: 474: {
  3693                           ;CAN.c: 475: PIE3 = (PIE3 & ~(1<<4)) | (1<<4 & 0xFF);
  3694  001C28  50A3               	movf	4003,w,c	;volatile
  3695  001C2A  0BEF               	andlw	239
  3696  001C2C  0910               	iorlw	16
  3697  001C2E  6EA3               	movwf	4003,c	;volatile
  3698  001C30                     l2275:
  3699  001C30  FFFF               	dw	65535	; assembler added errata NOP
  3700                           
  3701                           ;CAN.c: 479: if( (type & 1<<5) == 6 )
  3702  001C32  5010               	movf	CANIntEnable@type,w,c
  3703  001C34  0B20               	andlw	32
  3704  001C36  0A06               	xorlw	6
  3705  001C38  A4D8               	btfss	status,2,c
  3706  001C3A  D004               	goto	l2279
  3707                           
  3708                           ;CAN.c: 480: {
  3709                           ;CAN.c: 481: PIE3 = (PIE3 & ~(1<<5)) | (1<<5 & 0xFF);
  3710  001C3C  50A3               	movf	4003,w,c	;volatile
  3711  001C3E  0BDF               	andlw	223
  3712  001C40  0920               	iorlw	32
  3713  001C42  6EA3               	movwf	4003,c	;volatile
  3714  001C44                     l2279:
  3715  001C44  FFFF               	dw	65535	; assembler added errata NOP
  3716                           
  3717                           ;CAN.c: 485: if( (type & 1<<6) == 7 )
  3718  001C46  5010               	movf	CANIntEnable@type,w,c
  3719  001C48  0B40               	andlw	64
  3720  001C4A  0A07               	xorlw	7
  3721  001C4C  A4D8               	btfss	status,2,c
  3722  001C4E  D004               	goto	l2283
  3723                           
  3724                           ;CAN.c: 486: {
  3725                           ;CAN.c: 487: PIE3 = (PIE3 & ~(1<<6)) | (1<<6 & 0xFF);
  3726  001C50  50A3               	movf	4003,w,c	;volatile
  3727  001C52  0BBF               	andlw	191
  3728  001C54  0940               	iorlw	64
  3729  001C56  6EA3               	movwf	4003,c	;volatile
  3730  001C58                     l2283:
  3731  001C58  FFFF               	dw	65535	; assembler added errata NOP
  3732                           
  3733                           ;CAN.c: 491: if( (type & 1<<7) == 8 )
  3734  001C5A  5010               	movf	CANIntEnable@type,w,c
  3735  001C5C  0B80               	andlw	128
  3736  001C5E  0A08               	xorlw	8
  3737  001C60  A4D8               	btfss	status,2,c
  3738  001C62  D004               	goto	l443
  3739                           
  3740                           ;CAN.c: 492: {
  3741                           ;CAN.c: 493: PIE3 = (PIE3 & ~(1<<7)) | (1<<7 & 0xFF);
  3742  001C64  50A3               	movf	4003,w,c	;volatile
  3743  001C66  0B7F               	andlw	127
  3744  001C68  0980               	iorlw	128
  3745  001C6A  6EA3               	movwf	4003,c	;volatile
  3746  001C6C                     l443:
  3747  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  3748  001C6E  0012               	return		;funcret
  3749  001C70  FFFF               	dw	65535	; errata NOP
  3750  001C72                     __end_of_CANIntEnable:
  3751                           	opt stack 0
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           intcon	equ	0xFF2
  3757                           indf0	equ	0xFEF
  3758                           postinc0	equ	0xFEE
  3759                           fsr0h	equ	0xFEA
  3760                           fsr0l	equ	0xFE9
  3761                           wreg	equ	0xFE8
  3762                           indf1	equ	0xFE7
  3763                           fsr1h	equ	0xFE2
  3764                           fsr1l	equ	0xFE1
  3765                           indf2	equ	0xFDF
  3766                           postinc2	equ	0xFDE
  3767                           plusw2	equ	0xFDB
  3768                           fsr2h	equ	0xFDA
  3769                           fsr2l	equ	0xFD9
  3770                           status	equ	0xFD8
  3771                           
  3772 ;; *************** function _CANIntClear *****************
  3773 ;; Defined at:
  3774 ;;		line 554 in file "CAN.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  type            1    wreg     unsigned char 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  type            1   15[COMRAM] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3788 ;;      Params:         0       0       0       0       0       0       0
  3789 ;;      Locals:         1       0       0       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0
  3791 ;;      Totals:         1       0       0       0       0       0       0
  3792 ;;Total ram usage:        1 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    2
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_ComInit
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text19
  3803  001D04                     __ptext19:
  3804                           	opt stack 0
  3805  001D04                     _CANIntClear:
  3806                           	opt stack 0
  3807  001D04  FFFF               	dw	65535	; assembler added errata NOP
  3808                           
  3809                           ;incstack = 0
  3810                           ;CANIntClear@type stored from wreg
  3811  001D06  6E10               	movwf	CANIntClear@type,c
  3812                           
  3813                           ;CAN.c: 556: if( (type & 1<<0) == 1 )
  3814  001D08  A010               	btfss	CANIntClear@type,0,c
  3815  001D0A  D003               	goto	l466
  3816                           
  3817                           ;CAN.c: 557: {
  3818                           ;CAN.c: 558: PIR3 = (PIR3 & ~(1<<0)) | (1<<0 & 0);
  3819  001D0C  50A4               	movf	4004,w,c	;volatile
  3820  001D0E  0BFE               	andlw	254
  3821  001D10  6EA4               	movwf	4004,c	;volatile
  3822  001D12                     l466:
  3823  001D12  FFFF               	dw	65535	; assembler added errata NOP
  3824                           
  3825                           ;CAN.c: 562: if( (type & 1<<1) == 2 )
  3826  001D14  A210               	btfss	CANIntClear@type,1,c
  3827  001D16  D003               	goto	l2115
  3828                           
  3829                           ;CAN.c: 563: {
  3830                           ;CAN.c: 564: PIR3 = (PIR3 & ~(1<<1)) | (1<<1 & 0);
  3831  001D18  50A4               	movf	4004,w,c	;volatile
  3832  001D1A  0BFD               	andlw	253
  3833  001D1C  6EA4               	movwf	4004,c	;volatile
  3834  001D1E                     l2115:
  3835  001D1E  FFFF               	dw	65535	; assembler added errata NOP
  3836                           
  3837                           ;CAN.c: 568: if( (type & 1<<2) == 3 )
  3838  001D20  5010               	movf	CANIntClear@type,w,c
  3839  001D22  0B04               	andlw	4
  3840  001D24  0A03               	xorlw	3
  3841  001D26  A4D8               	btfss	status,2,c
  3842  001D28  D003               	goto	l2119
  3843                           
  3844                           ;CAN.c: 569: {
  3845                           ;CAN.c: 570: PIR3 = (PIR3 & ~(1<<2)) | (1<<2 & 0);
  3846  001D2A  50A4               	movf	4004,w,c	;volatile
  3847  001D2C  0BFB               	andlw	251
  3848  001D2E  6EA4               	movwf	4004,c	;volatile
  3849  001D30                     l2119:
  3850  001D30  FFFF               	dw	65535	; assembler added errata NOP
  3851                           
  3852                           ;CAN.c: 574: if( (type & 1<<3) == 4 )
  3853  001D32  5010               	movf	CANIntClear@type,w,c
  3854  001D34  0B08               	andlw	8
  3855  001D36  0A04               	xorlw	4
  3856  001D38  A4D8               	btfss	status,2,c
  3857  001D3A  D003               	goto	l2123
  3858                           
  3859                           ;CAN.c: 575: {
  3860                           ;CAN.c: 576: PIR3 = (PIR3 & ~(1<<3)) | (1<<3 & 0);
  3861  001D3C  50A4               	movf	4004,w,c	;volatile
  3862  001D3E  0BF7               	andlw	247
  3863  001D40  6EA4               	movwf	4004,c	;volatile
  3864  001D42                     l2123:
  3865  001D42  FFFF               	dw	65535	; assembler added errata NOP
  3866                           
  3867                           ;CAN.c: 580: if( (type & 1<<4) == 5 )
  3868  001D44  5010               	movf	CANIntClear@type,w,c
  3869  001D46  0B10               	andlw	16
  3870  001D48  0A05               	xorlw	5
  3871  001D4A  A4D8               	btfss	status,2,c
  3872  001D4C  D003               	goto	l2127
  3873                           
  3874                           ;CAN.c: 581: {
  3875                           ;CAN.c: 582: PIR3 = (PIR3 & ~(1<<4)) | (1<<4 & 0);
  3876  001D4E  50A4               	movf	4004,w,c	;volatile
  3877  001D50  0BEF               	andlw	239
  3878  001D52  6EA4               	movwf	4004,c	;volatile
  3879  001D54                     l2127:
  3880  001D54  FFFF               	dw	65535	; assembler added errata NOP
  3881                           
  3882                           ;CAN.c: 586: if( (type & 1<<5) == 6 )
  3883  001D56  5010               	movf	CANIntClear@type,w,c
  3884  001D58  0B20               	andlw	32
  3885  001D5A  0A06               	xorlw	6
  3886  001D5C  A4D8               	btfss	status,2,c
  3887  001D5E  D003               	goto	l2131
  3888                           
  3889                           ;CAN.c: 587: {
  3890                           ;CAN.c: 588: PIR3 = (PIR3 & ~(1<<5)) | (1<<5 & 0);
  3891  001D60  50A4               	movf	4004,w,c	;volatile
  3892  001D62  0BDF               	andlw	223
  3893  001D64  6EA4               	movwf	4004,c	;volatile
  3894  001D66                     l2131:
  3895  001D66  FFFF               	dw	65535	; assembler added errata NOP
  3896                           
  3897                           ;CAN.c: 592: if( (type & 1<<6) == 7 )
  3898  001D68  5010               	movf	CANIntClear@type,w,c
  3899  001D6A  0B40               	andlw	64
  3900  001D6C  0A07               	xorlw	7
  3901  001D6E  A4D8               	btfss	status,2,c
  3902  001D70  D003               	goto	l2135
  3903                           
  3904                           ;CAN.c: 593: {
  3905                           ;CAN.c: 594: PIR3 = (PIR3 & ~(1<<6)) | (1<<6 & 0);
  3906  001D72  50A4               	movf	4004,w,c	;volatile
  3907  001D74  0BBF               	andlw	191
  3908  001D76  6EA4               	movwf	4004,c	;volatile
  3909  001D78                     l2135:
  3910  001D78  FFFF               	dw	65535	; assembler added errata NOP
  3911                           
  3912                           ;CAN.c: 598: if( (type & 1<<7) == 8 )
  3913  001D7A  5010               	movf	CANIntClear@type,w,c
  3914  001D7C  0B80               	andlw	128
  3915  001D7E  0A08               	xorlw	8
  3916  001D80  A4D8               	btfss	status,2,c
  3917  001D82  D003               	goto	l481
  3918                           
  3919                           ;CAN.c: 599: {
  3920                           ;CAN.c: 600: PIR3 = (PIR3 & ~(1<<7)) | (1<<7 & 0);
  3921  001D84  50A4               	movf	4004,w,c	;volatile
  3922  001D86  0B7F               	andlw	127
  3923  001D88  6EA4               	movwf	4004,c	;volatile
  3924  001D8A                     l481:
  3925  001D8A  FFFF               	dw	65535	; assembler added errata NOP
  3926  001D8C  0012               	return		;funcret
  3927  001D8E  FFFF               	dw	65535	; errata NOP
  3928  001D90                     __end_of_CANIntClear:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           intcon	equ	0xFF2
  3935                           indf0	equ	0xFEF
  3936                           postinc0	equ	0xFEE
  3937                           fsr0h	equ	0xFEA
  3938                           fsr0l	equ	0xFE9
  3939                           wreg	equ	0xFE8
  3940                           indf1	equ	0xFE7
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           indf2	equ	0xFDF
  3944                           postinc2	equ	0xFDE
  3945                           plusw2	equ	0xFDB
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _CANInit *****************
  3951 ;; Defined at:
  3952 ;;		line 10 in file "CAN.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3966 ;;      Params:         0       0       0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    2
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_ComInit
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text20
  3981  00229A                     __ptext20:
  3982                           	opt stack 0
  3983  00229A                     _CANInit:
  3984                           	opt stack 0
  3985  00229A  FFFF               	dw	65535	; assembler added errata NOP
  3986                           
  3987                           ;CAN.c: 12: CIOCON = 0x20;
  3988                           
  3989                           ;incstack = 0
  3990  00229C  0E20               	movlw	32
  3991  00229E  6E73               	movwf	3955,c	;volatile
  3992                           
  3993                           ;CAN.c: 13: TRISBbits.RB3 = 1;
  3994  0022A0  8693               	bsf	3987,3,c	;volatile
  3995                           
  3996                           ;CAN.c: 14: TRISBbits.RB2 = 0;
  3997  0022A2  9493               	bcf	3987,2,c	;volatile
  3998  0022A4  0012               	return		;funcret
  3999  0022A6  FFFF               	dw	65535	; errata NOP
  4000  0022A8                     __end_of_CANInit:
  4001                           	opt stack 0
  4002                           tblptru	equ	0xFF8
  4003                           tblptrh	equ	0xFF7
  4004                           tblptrl	equ	0xFF6
  4005                           tablat	equ	0xFF5
  4006                           intcon	equ	0xFF2
  4007                           indf0	equ	0xFEF
  4008                           postinc0	equ	0xFEE
  4009                           fsr0h	equ	0xFEA
  4010                           fsr0l	equ	0xFE9
  4011                           wreg	equ	0xFE8
  4012                           indf1	equ	0xFE7
  4013                           fsr1h	equ	0xFE2
  4014                           fsr1l	equ	0xFE1
  4015                           indf2	equ	0xFDF
  4016                           postinc2	equ	0xFDE
  4017                           plusw2	equ	0xFDB
  4018                           fsr2h	equ	0xFDA
  4019                           fsr2l	equ	0xFD9
  4020                           status	equ	0xFD8
  4021                           
  4022 ;; *************** function _Clock_Init *****************
  4023 ;; Defined at:
  4024 ;;		line 18 in file "clock.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  ulCompareVal    4   19[COMRAM] unsigned long 
  4029 ;;  ulConstCompa    4   15[COMRAM] const unsigned long 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4039 ;;      Params:         0       0       0       0       0       0       0
  4040 ;;      Locals:         8       0       0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0
  4042 ;;      Totals:         8       0       0       0       0       0       0
  4043 ;;Total ram usage:        8 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    2
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text21
  4054  00209A                     __ptext21:
  4055                           	opt stack 0
  4056  00209A                     _Clock_Init:
  4057                           	opt stack 0
  4058  00209A  FFFF               	dw	65535	; assembler added errata NOP
  4059                           
  4060                           ;clock.c: 21: const uint32_t ulConstCompareValue = ( ( ( ( unsigned long ) 32000000 ) / 
      +                          ( ( uint32_t) 4 ) ) / ( ( unsigned int ) 1000 ) );
  4061                           
  4062                           ;incstack = 0
  4063  00209C  0E40               	movlw	64
  4064  00209E  6E10               	movwf	Clock_Init@ulConstCompareValue,c
  4065  0020A0  0E1F               	movlw	31
  4066  0020A2  6E11               	movwf	Clock_Init@ulConstCompareValue+1,c
  4067  0020A4  0E00               	movlw	0
  4068  0020A6  6E12               	movwf	Clock_Init@ulConstCompareValue+2,c
  4069  0020A8  0E00               	movlw	0
  4070  0020AA  6E13               	movwf	Clock_Init@ulConstCompareValue+3,c
  4071                           
  4072                           ;clock.c: 22: uint32_t ulCompareValue;
  4073                           ;clock.c: 30: TMR3H = ( uint8_t ) 0x00;
  4074  0020AC  0E00               	movlw	0
  4075  0020AE  6EB3               	movwf	4019,c	;volatile
  4076                           
  4077                           ;clock.c: 31: TMR3L = ( uint8_t ) 0x00;
  4078  0020B0  0E00               	movlw	0
  4079  0020B2  6EB2               	movwf	4018,c	;volatile
  4080                           
  4081                           ;clock.c: 34: ulCompareValue = ulConstCompareValue;
  4082  0020B4  C010  F014         	movff	Clock_Init@ulConstCompareValue,Clock_Init@ulCompareValue
  4083  0020B8  C011  F015         	movff	Clock_Init@ulConstCompareValue+1,Clock_Init@ulCompareValue+1
  4084  0020BC  C012  F016         	movff	Clock_Init@ulConstCompareValue+2,Clock_Init@ulCompareValue+2
  4085  0020C0  C013  F017         	movff	Clock_Init@ulConstCompareValue+3,Clock_Init@ulCompareValue+3
  4086                           
  4087                           ;clock.c: 35: CCPR1L = ( uint8_t ) ( ulCompareValue & ( uint32_t ) 0xff );
  4088  0020C4  C014  FFBE         	movff	Clock_Init@ulCompareValue,4030	;volatile
  4089                           
  4090                           ;clock.c: 36: ulCompareValue >>= ( uint32_t ) 8;
  4091  0020C8  C015  F014         	movff	Clock_Init@ulCompareValue+1,Clock_Init@ulCompareValue
  4092  0020CC  C016  F015         	movff	Clock_Init@ulCompareValue+2,Clock_Init@ulCompareValue+1
  4093  0020D0  C017  F016         	movff	Clock_Init@ulCompareValue+3,Clock_Init@ulCompareValue+2
  4094  0020D4  6A17               	clrf	Clock_Init@ulCompareValue+3,c
  4095                           
  4096                           ;clock.c: 37: CCPR1H = ( uint8_t ) ( ulCompareValue & ( uint32_t ) 0xff );
  4097  0020D6  C014  FFBF         	movff	Clock_Init@ulCompareValue,4031	;volatile
  4098                           
  4099                           ;clock.c: 39: CCP1CONbits.CCP1M0 = 1;
  4100  0020DA  80BD               	bsf	4029,0,c	;volatile
  4101                           
  4102                           ;clock.c: 40: CCP1CONbits.CCP1M1 = 1;
  4103  0020DC  82BD               	bsf	4029,1,c	;volatile
  4104                           
  4105                           ;clock.c: 41: CCP1CONbits.CCP1M2 = 0;
  4106  0020DE  94BD               	bcf	4029,2,c	;volatile
  4107                           
  4108                           ;clock.c: 42: CCP1CONbits.CCP1M3 = 1;
  4109  0020E0  86BD               	bsf	4029,3,c	;volatile
  4110                           
  4111                           ;clock.c: 43: PIE1bits.CCP1IE = 1;
  4112  0020E2  849D               	bsf	3997,2,c	;volatile
  4113                           
  4114                           ;clock.c: 49: INTCONbits.GIE = 1;
  4115  0020E4  8EF2               	bsf	intcon,7,c	;volatile
  4116                           
  4117                           ;clock.c: 51: T3CONbits.T3RD16 = 1;
  4118  0020E6  8EB1               	bsf	4017,7,c	;volatile
  4119                           
  4120                           ;clock.c: 52: T3CONbits.T3ECCP1 = 1;
  4121  0020E8  8CB1               	bsf	4017,6,c	;volatile
  4122                           
  4123                           ;clock.c: 53: T3CONbits.T3CKPS = 0;
  4124  0020EA  0ECF               	movlw	-49
  4125  0020EC  16B1               	andwf	4017,f,c	;volatile
  4126                           
  4127                           ;clock.c: 54: T3CONbits.TMR3CS = 0;
  4128  0020EE  92B1               	bcf	4017,1,c	;volatile
  4129                           
  4130                           ;clock.c: 55: T3CONbits.TMR3ON = 1;
  4131  0020F0  80B1               	bsf	4017,0,c	;volatile
  4132  0020F2  0012               	return		;funcret
  4133  0020F4  FFFF               	dw	65535	; errata NOP
  4134  0020F6                     __end_of_Clock_Init:
  4135                           	opt stack 0
  4136                           tblptru	equ	0xFF8
  4137                           tblptrh	equ	0xFF7
  4138                           tblptrl	equ	0xFF6
  4139                           tablat	equ	0xFF5
  4140                           intcon	equ	0xFF2
  4141                           indf0	equ	0xFEF
  4142                           postinc0	equ	0xFEE
  4143                           fsr0h	equ	0xFEA
  4144                           fsr0l	equ	0xFE9
  4145                           wreg	equ	0xFE8
  4146                           indf1	equ	0xFE7
  4147                           fsr1h	equ	0xFE2
  4148                           fsr1l	equ	0xFE1
  4149                           indf2	equ	0xFDF
  4150                           postinc2	equ	0xFDE
  4151                           plusw2	equ	0xFDB
  4152                           fsr2h	equ	0xFDA
  4153                           fsr2l	equ	0xFD9
  4154                           status	equ	0xFD8
  4155                           
  4156 ;; *************** function _CANMessageSend *****************
  4157 ;; Defined at:
  4158 ;;		line 354 in file "CAN.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  psMsgObject     2   15[COMRAM] PTR struct .
  4161 ;;		 -> main@Reply(18), 
  4162 ;;  FrameType       1   17[COMRAM] unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  data_ptr        2   36[COMRAM] PTR volatile unsigned ch
  4165 ;;		 -> main@sync_period(2), main@ui16ReplyData(2), 
  4166 ;;  data_reg_ptr    2   34[COMRAM] PTR volatile unsigned ch
  4167 ;;		 -> TXB0CON(1), 
  4168 ;;  i               2   32[COMRAM] int 
  4169 ;;  TXBSIDL_PTR     2   46[COMRAM] PTR volatile unsigned ch
  4170 ;;		 -> TXB0CON(1), 
  4171 ;;  TXB_BASE_ADD    2   44[COMRAM] PTR volatile unsigned ch
  4172 ;;		 -> TXB0CON(1), 
  4173 ;;  TXBDLC_PTR      2   42[COMRAM] PTR volatile unsigned ch
  4174 ;;		 -> TXB0CON(1), 
  4175 ;;  TXBSIDH_PTR     2   40[COMRAM] PTR volatile unsigned ch
  4176 ;;		 -> TXB0CON(1), 
  4177 ;;  TXBCON_PTR      2   38[COMRAM] PTR volatile unsigned ch
  4178 ;;		 -> TXB0CON(1), 
  4179 ;;  TXBD0_PTR       2   30[COMRAM] PTR volatile unsigned ch
  4180 ;;		 -> TXB0CON(1), 
  4181 ;;  TXBEIDL_PTR     2   28[COMRAM] PTR volatile unsigned ch
  4182 ;;		 -> TXB0CON(1), 
  4183 ;;  TXBEIDH_PTR     2   26[COMRAM] PTR volatile unsigned ch
  4184 ;;		 -> TXB0CON(1), 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4194 ;;      Params:         3       0       0       0       0       0       0
  4195 ;;      Locals:        22       0       0       0       0       0       0
  4196 ;;      Temps:          8       0       0       0       0       0       0
  4197 ;;      Totals:        33       0       0       0       0       0       0
  4198 ;;Total ram usage:       33 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:    2
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text22
  4209  000C0A                     __ptext22:
  4210                           	opt stack 0
  4211  000C0A                     _CANMessageSend:
  4212                           	opt stack 0
  4213  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  4214                           
  4215                           ;incstack = 0
  4216  000C0C  D00D               	goto	l2639
  4217  000C0E                     l2635:
  4218  000C0E  FFFF               	dw	65535	; assembler added errata NOP
  4219                           
  4220                           ;CAN.c: 369: {
  4221                           ;CAN.c: 371: if( TXB_BASE_ADDRESS <= &TXB1CON)
  4222  000C10  502E               	movf	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4223  000C12  080F               	sublw	15
  4224  000C14  E102               	bnz	u2275
  4225  000C16  502D               	movf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4226  000C18  0830               	sublw	48
  4227  000C1A                     u2275:
  4228  000C1A  A0D8               	btfss	status,0,c
  4229  000C1C  D005               	goto	l2639
  4230                           
  4231                           ;CAN.c: 372: {
  4232                           ;CAN.c: 373: TXB_BASE_ADDRESS += 0x10;
  4233  000C1E  0E10               	movlw	16
  4234  000C20  262D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,f,c
  4235  000C22  0E00               	movlw	0
  4236  000C24  222E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,f,c
  4237                           
  4238                           ;CAN.c: 374: }
  4239  000C26  D005               	goto	l2641
  4240  000C28                     l2639:
  4241  000C28  FFFF               	dw	65535	; assembler added errata NOP
  4242                           
  4243                           ;CAN.c: 375: else
  4244                           ;CAN.c: 376: {
  4245                           ;CAN.c: 377: TXB_BASE_ADDRESS = &TXB0CON;
  4246  000C2A  0E40               	movlw	64
  4247  000C2C  6E2D               	movwf	CANMessageSend@TXB_BASE_ADDRESS,c
  4248  000C2E  0E0F               	movlw	15
  4249  000C30  6E2E               	movwf	CANMessageSend@TXB_BASE_ADDRESS+1,c
  4250  000C32                     l2641:
  4251  000C32  FFFF               	dw	65535	; assembler added errata NOP
  4252  000C34  C02D  FFD9         	movff	CANMessageSend@TXB_BASE_ADDRESS,fsr2l
  4253  000C38  C02E  FFDA         	movff	CANMessageSend@TXB_BASE_ADDRESS+1,fsr2h
  4254  000C3C  50DF               	movf	indf2,w,c
  4255  000C3E  0B08               	andlw	8
  4256  000C40  06E8               	decf	wreg,f,c
  4257  000C42  B4D8               	btfsc	status,2,c
  4258  000C44  D7E4               	goto	l2635
  4259                           
  4260                           ;CAN.c: 378: }
  4261                           ;CAN.c: 379: }
  4262                           ;CAN.c: 385: volatile uint8_t * TXBCON_PTR = TXB_BASE_ADDRESS;
  4263  000C46  C02D  F027         	movff	CANMessageSend@TXB_BASE_ADDRESS,CANMessageSend@TXBCON_PTR
  4264  000C4A  C02E  F028         	movff	CANMessageSend@TXB_BASE_ADDRESS+1,CANMessageSend@TXBCON_PTR+1
  4265                           
  4266                           ;CAN.c: 386: volatile uint8_t * TXBSIDH_PTR = TXB_BASE_ADDRESS + 1;
  4267  000C4E  0E01               	movlw	1
  4268  000C50  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4269  000C52  6E29               	movwf	CANMessageSend@TXBSIDH_PTR,c
  4270  000C54  0E00               	movlw	0
  4271  000C56  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4272  000C58  6E2A               	movwf	CANMessageSend@TXBSIDH_PTR+1,c
  4273                           
  4274                           ;CAN.c: 387: volatile uint8_t * TXBSIDL_PTR = TXB_BASE_ADDRESS + 2;
  4275  000C5A  0E02               	movlw	2
  4276  000C5C  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4277  000C5E  6E2F               	movwf	CANMessageSend@TXBSIDL_PTR,c
  4278  000C60  0E00               	movlw	0
  4279  000C62  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4280  000C64  6E30               	movwf	CANMessageSend@TXBSIDL_PTR+1,c
  4281                           
  4282                           ;CAN.c: 388: volatile uint8_t * TXBEIDH_PTR = TXB_BASE_ADDRESS + 3;
  4283  000C66  0E03               	movlw	3
  4284  000C68  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4285  000C6A  6E1B               	movwf	CANMessageSend@TXBEIDH_PTR,c
  4286  000C6C  0E00               	movlw	0
  4287  000C6E  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4288  000C70  6E1C               	movwf	CANMessageSend@TXBEIDH_PTR+1,c
  4289                           
  4290                           ;CAN.c: 389: volatile uint8_t * TXBEIDL_PTR = TXB_BASE_ADDRESS + 4;
  4291  000C72  0E04               	movlw	4
  4292  000C74  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4293  000C76  6E1D               	movwf	CANMessageSend@TXBEIDL_PTR,c
  4294  000C78  0E00               	movlw	0
  4295  000C7A  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4296  000C7C  6E1E               	movwf	CANMessageSend@TXBEIDL_PTR+1,c
  4297                           
  4298                           ;CAN.c: 390: volatile uint8_t * TXBDLC_PTR = TXB_BASE_ADDRESS + 5;
  4299  000C7E  0E05               	movlw	5
  4300  000C80  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4301  000C82  6E2B               	movwf	CANMessageSend@TXBDLC_PTR,c
  4302  000C84  0E00               	movlw	0
  4303  000C86  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4304  000C88  6E2C               	movwf	CANMessageSend@TXBDLC_PTR+1,c
  4305                           
  4306                           ;CAN.c: 391: volatile uint8_t * TXBD0_PTR = TXB_BASE_ADDRESS + 6;
  4307  000C8A  0E06               	movlw	6
  4308  000C8C  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4309  000C8E  6E1F               	movwf	CANMessageSend@TXBD0_PTR,c
  4310  000C90  0E00               	movlw	0
  4311  000C92  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4312  000C94  6E20               	movwf	CANMessageSend@TXBD0_PTR+1,c
  4313                           
  4314                           ;CAN.c: 395: if( (psMsgObject->ui32MsgID) <= 2047 )
  4315  000C96  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4316  000C9A  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4317  000C9E  0E03               	movlw	3
  4318  000CA0  50DB               	movf	plusw2,w,c
  4319  000CA2  E14B               	bnz	l2649
  4320  000CA4  0E02               	movlw	2
  4321  000CA6  50DB               	movf	plusw2,w,c
  4322  000CA8  E148               	bnz	l2649
  4323  000CAA  52DE               	movf	postinc2,f,c
  4324  000CAC  0E08               	movlw	8
  4325  000CAE  5CDE               	subwf	postinc2,w,c
  4326  000CB0  B0D8               	btfsc	status,0,c
  4327  000CB2  D043               	goto	l2649
  4328                           
  4329                           ;CAN.c: 396: {
  4330                           ;CAN.c: 398: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0x08)) | (0x08 & 0x00);
  4331  000CB4  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4332  000CB8  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4333  000CBC  50DF               	movf	indf2,w,c
  4334  000CBE  0BF7               	andlw	247
  4335  000CC0  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4336  000CC4  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4337  000CC8  6EDF               	movwf	indf2,c
  4338                           
  4339                           ;CAN.c: 400: *(TXBSIDH_PTR) = (*(TXBSIDH_PTR) & ~(0xFF)) | (0xFF & ((psMsgObject->ui32Ms
      +                          gID))>>3);
  4340  000CCA  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4341  000CCE  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4342  000CD2  CFDE F013          	movff	postinc2,??_CANMessageSend
  4343  000CD6  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4344  000CDA  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4345  000CDE  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4346  000CE2  0E04               	movlw	4
  4347  000CE4  D006               	goto	u2300
  4348  000CE6                     u2305:
  4349  000CE6  FFFF               	dw	65535	; assembler added errata NOP
  4350  000CE8  90D8               	bcf	status,0,c
  4351  000CEA  3216               	rrcf	??_CANMessageSend+3,f,c
  4352  000CEC  3215               	rrcf	??_CANMessageSend+2,f,c
  4353  000CEE  3214               	rrcf	??_CANMessageSend+1,f,c
  4354  000CF0  3213               	rrcf	??_CANMessageSend,f,c
  4355  000CF2                     u2300:
  4356  000CF2  FFFF               	dw	65535	; assembler added errata NOP
  4357  000CF4  2EE8               	decfsz	wreg,f,c
  4358  000CF6  D7F7               	goto	u2305
  4359  000CF8  5013               	movf	??_CANMessageSend,w,c
  4360  000CFA  C029  FFD9         	movff	CANMessageSend@TXBSIDH_PTR,fsr2l
  4361  000CFE  C02A  FFDA         	movff	CANMessageSend@TXBSIDH_PTR+1,fsr2h
  4362  000D02  6EDF               	movwf	indf2,c
  4363                           
  4364                           ;CAN.c: 401: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0xE0)) | (0xE0 & ((psMsgObject->ui32Ms
      +                          gID))<<5);
  4365  000D04  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4366  000D08  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4367  000D0C  50DF               	movf	indf2,w,c
  4368  000D0E  6E13               	movwf	??_CANMessageSend& (0+255),c
  4369  000D10  0E05               	movlw	5
  4370  000D12  6E14               	movwf	(??_CANMessageSend+1)& (0+255),c
  4371  000D14                     u2315:
  4372  000D14  FFFF               	dw	65535	; assembler added errata NOP
  4373  000D16  90D8               	bcf	status,0,c
  4374  000D18  3613               	rlcf	??_CANMessageSend,f,c
  4375  000D1A  2E14               	decfsz	(??_CANMessageSend+1)& (0+255),f,c
  4376  000D1C  D7FB               	goto	u2315
  4377  000D1E  0EE0               	movlw	224
  4378  000D20  1613               	andwf	??_CANMessageSend,f,c
  4379  000D22  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4380  000D26  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4381  000D2A  50DF               	movf	indf2,w,c
  4382  000D2C  0B1F               	andlw	31
  4383  000D2E  1013               	iorwf	??_CANMessageSend,w,c
  4384  000D30  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4385  000D34  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4386  000D38  D096               	goto	L10
  4387  000D3A                     l2649:
  4388  000D3A  FFFF               	dw	65535	; assembler added errata NOP
  4389                           
  4390                           ;CAN.c: 403: else
  4391                           ;CAN.c: 404: {
  4392                           ;CAN.c: 406: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0x08)) | (0x08 & 0xff);
  4393  000D3C  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4394  000D40  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4395  000D44  50DF               	movf	indf2,w,c
  4396  000D46  0BF7               	andlw	247
  4397  000D48  0908               	iorlw	8
  4398  000D4A  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4399  000D4E  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4400  000D52  6EDF               	movwf	indf2,c
  4401                           
  4402                           ;CAN.c: 408: *(TXBEIDL_PTR) = (*(TXBEIDL_PTR) & ~(0xFF)) | (0xFF & ((psMsgObject->ui32Ms
      +                          gID)));
  4403  000D54  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4404  000D58  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4405  000D5C  C01D  FFE1         	movff	CANMessageSend@TXBEIDL_PTR,fsr1l
  4406  000D60  C01E  FFE2         	movff	CANMessageSend@TXBEIDL_PTR+1,fsr1h
  4407  000D64  CFDF FFE7          	movff	indf2,indf1
  4408                           
  4409                           ;CAN.c: 409: *(TXBEIDH_PTR) = (*(TXBEIDH_PTR) & ~(0xFF)) | (0xFF & ((psMsgObject->ui32Ms
      +                          gID))>>8);
  4410  000D68  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4411  000D6C  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4412  000D70  CFDE F013          	movff	postinc2,??_CANMessageSend
  4413  000D74  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4414  000D78  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4415  000D7C  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4416  000D80  C014  F013         	movff	??_CANMessageSend+1,??_CANMessageSend
  4417  000D84  C015  F014         	movff	??_CANMessageSend+2,??_CANMessageSend+1
  4418  000D88  C016  F015         	movff	??_CANMessageSend+3,??_CANMessageSend+2
  4419  000D8C  6A16               	clrf	??_CANMessageSend+3,c
  4420  000D8E  5013               	movf	??_CANMessageSend,w,c
  4421  000D90  C01B  FFD9         	movff	CANMessageSend@TXBEIDH_PTR,fsr2l
  4422  000D94  C01C  FFDA         	movff	CANMessageSend@TXBEIDH_PTR+1,fsr2h
  4423  000D98  6EDF               	movwf	indf2,c
  4424                           
  4425                           ;CAN.c: 410: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0x03)) | (0x03 & ((psMsgObject->ui32Ms
      +                          gID))>>16);
  4426  000D9A  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4427  000D9E  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4428  000DA2  CFDE F013          	movff	postinc2,??_CANMessageSend
  4429  000DA6  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4430  000DAA  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4431  000DAE  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4432  000DB2  0E11               	movlw	17
  4433  000DB4  D006               	goto	u2320
  4434  000DB6                     u2325:
  4435  000DB6  FFFF               	dw	65535	; assembler added errata NOP
  4436  000DB8  90D8               	bcf	status,0,c
  4437  000DBA  3216               	rrcf	??_CANMessageSend+3,f,c
  4438  000DBC  3215               	rrcf	??_CANMessageSend+2,f,c
  4439  000DBE  3214               	rrcf	??_CANMessageSend+1,f,c
  4440  000DC0  3213               	rrcf	??_CANMessageSend,f,c
  4441  000DC2                     u2320:
  4442  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  4443  000DC4  2EE8               	decfsz	wreg,f,c
  4444  000DC6  D7F7               	goto	u2325
  4445  000DC8  0E03               	movlw	3
  4446  000DCA  1613               	andwf	??_CANMessageSend,f,c
  4447  000DCC  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4448  000DD0  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4449  000DD4  50DF               	movf	indf2,w,c
  4450  000DD6  0BFC               	andlw	252
  4451  000DD8  1013               	iorwf	??_CANMessageSend,w,c
  4452  000DDA  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4453  000DDE  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4454  000DE2  6EDF               	movwf	indf2,c
  4455                           
  4456                           ;CAN.c: 411: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0xE0)) | (0xE0 & ((psMsgObject->ui32Ms
      +                          gID))>>18);
  4457  000DE4  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4458  000DE8  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4459  000DEC  CFDE F013          	movff	postinc2,??_CANMessageSend
  4460  000DF0  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4461  000DF4  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4462  000DF8  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4463  000DFC  0E13               	movlw	19
  4464  000DFE  D006               	goto	u2330
  4465  000E00                     u2335:
  4466  000E00  FFFF               	dw	65535	; assembler added errata NOP
  4467  000E02  90D8               	bcf	status,0,c
  4468  000E04  3216               	rrcf	??_CANMessageSend+3,f,c
  4469  000E06  3215               	rrcf	??_CANMessageSend+2,f,c
  4470  000E08  3214               	rrcf	??_CANMessageSend+1,f,c
  4471  000E0A  3213               	rrcf	??_CANMessageSend,f,c
  4472  000E0C                     u2330:
  4473  000E0C  FFFF               	dw	65535	; assembler added errata NOP
  4474  000E0E  2EE8               	decfsz	wreg,f,c
  4475  000E10  D7F7               	goto	u2335
  4476  000E12  0EE0               	movlw	224
  4477  000E14  1613               	andwf	??_CANMessageSend,f,c
  4478  000E16  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4479  000E1A  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4480  000E1E  50DF               	movf	indf2,w,c
  4481  000E20  0B1F               	andlw	31
  4482  000E22  1013               	iorwf	??_CANMessageSend,w,c
  4483  000E24  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4484  000E28  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4485  000E2C  6EDF               	movwf	indf2,c
  4486                           
  4487                           ;CAN.c: 412: *(TXBSIDH_PTR) = (*(TXBSIDH_PTR) & ~(0xFF)) | (0xFF & ((psMsgObject->ui32Ms
      +                          gID))>>21);
  4488  000E2E  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4489  000E32  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4490  000E36  CFDE F013          	movff	postinc2,??_CANMessageSend
  4491  000E3A  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4492  000E3E  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4493  000E42  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4494  000E46  0E16               	movlw	22
  4495  000E48  D006               	goto	u2340
  4496  000E4A                     u2345:
  4497  000E4A  FFFF               	dw	65535	; assembler added errata NOP
  4498  000E4C  90D8               	bcf	status,0,c
  4499  000E4E  3216               	rrcf	??_CANMessageSend+3,f,c
  4500  000E50  3215               	rrcf	??_CANMessageSend+2,f,c
  4501  000E52  3214               	rrcf	??_CANMessageSend+1,f,c
  4502  000E54  3213               	rrcf	??_CANMessageSend,f,c
  4503  000E56                     u2340:
  4504  000E56  FFFF               	dw	65535	; assembler added errata NOP
  4505  000E58  2EE8               	decfsz	wreg,f,c
  4506  000E5A  D7F7               	goto	u2345
  4507  000E5C  5013               	movf	??_CANMessageSend,w,c
  4508  000E5E  C029  FFD9         	movff	CANMessageSend@TXBSIDH_PTR,fsr2l
  4509  000E62  C02A  FFDA         	movff	CANMessageSend@TXBSIDH_PTR+1,fsr2h
  4510  000E66                     L10:
  4511  000E66  FFFF               	dw	65535	; assembler added errata NOP
  4512  000E68  6EDF               	movwf	indf2,c
  4513                           
  4514                           ;CAN.c: 413: }
  4515                           ;CAN.c: 418: if( FrameType == 1<<2 )
  4516  000E6A  0E04               	movlw	4
  4517  000E6C  1812               	xorwf	CANMessageSend@FrameType,w,c
  4518  000E6E  A4D8               	btfss	status,2,c
  4519  000E70  D060               	goto	l2681
  4520                           
  4521                           ;CAN.c: 419: {
  4522                           ;CAN.c: 421: *(TXBDLC_PTR) = (*(TXBDLC_PTR) & ~(0x0F)) | (0x0F & psMsgObject->ui32MsgLen
      +                          );
  4523  000E72  EE20 F00C          	lfsr	2,12
  4524  000E76  5010               	movf	CANMessageSend@psMsgObject,w,c
  4525  000E78  26D9               	addwf	fsr2l,f,c
  4526  000E7A  5011               	movf	CANMessageSend@psMsgObject+1,w,c
  4527  000E7C  22DA               	addwfc	fsr2h,f,c
  4528  000E7E  50DF               	movf	indf2,w,c
  4529  000E80  6E13               	movwf	??_CANMessageSend& (0+255),c
  4530  000E82  0E0F               	movlw	15
  4531  000E84  1613               	andwf	??_CANMessageSend,f,c
  4532  000E86  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4533  000E8A  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4534  000E8E  50DF               	movf	indf2,w,c
  4535  000E90  0BF0               	andlw	240
  4536  000E92  1013               	iorwf	??_CANMessageSend,w,c
  4537  000E94  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4538  000E98  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4539  000E9C  6EDF               	movwf	indf2,c
  4540                           
  4541                           ;CAN.c: 423: *(TXBDLC_PTR) = (*(TXBDLC_PTR) & ~(1<<6)) | (1<<6 & 0x00);
  4542  000E9E  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4543  000EA2  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4544  000EA6  50DF               	movf	indf2,w,c
  4545  000EA8  0BBF               	andlw	191
  4546  000EAA  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4547  000EAE  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4548  000EB2  6EDF               	movwf	indf2,c
  4549                           
  4550                           ;CAN.c: 425: int i;
  4551                           ;CAN.c: 426: volatile uint8_t * data_reg_ptr = TXBD0_PTR;
  4552  000EB4  C01F  F023         	movff	CANMessageSend@TXBD0_PTR,CANMessageSend@data_reg_ptr
  4553  000EB8  C020  F024         	movff	CANMessageSend@TXBD0_PTR+1,CANMessageSend@data_reg_ptr+1
  4554                           
  4555                           ;CAN.c: 427: volatile uint8_t * data_ptr = psMsgObject->pui8MsgData;
  4556  000EBC  EE20 F010          	lfsr	2,16
  4557  000EC0  5010               	movf	CANMessageSend@psMsgObject,w,c
  4558  000EC2  26D9               	addwf	fsr2l,f,c
  4559  000EC4  5011               	movf	CANMessageSend@psMsgObject+1,w,c
  4560  000EC6  22DA               	addwfc	fsr2h,f,c
  4561  000EC8  CFDE F025          	movff	postinc2,CANMessageSend@data_ptr
  4562  000ECC  CFDD F026          	movff	postdec2,CANMessageSend@data_ptr+1
  4563                           
  4564                           ;CAN.c: 429: for(i=0; i<(psMsgObject->ui32MsgLen); i++)
  4565  000ED0  0E00               	movlw	0
  4566  000ED2  6E22               	movwf	CANMessageSend@i+1,c
  4567  000ED4  0E00               	movlw	0
  4568  000ED6  6E21               	movwf	CANMessageSend@i,c
  4569  000ED8  D011               	goto	l2679
  4570  000EDA                     l2671:
  4571  000EDA  FFFF               	dw	65535	; assembler added errata NOP
  4572                           
  4573                           ;CAN.c: 430: {
  4574                           ;CAN.c: 431: *data_reg_ptr = *(data_ptr);
  4575  000EDC  C025  FFD9         	movff	CANMessageSend@data_ptr,fsr2l
  4576  000EE0  C026  FFDA         	movff	CANMessageSend@data_ptr+1,fsr2h
  4577  000EE4  C023  FFE1         	movff	CANMessageSend@data_reg_ptr,fsr1l
  4578  000EE8  C024  FFE2         	movff	CANMessageSend@data_reg_ptr+1,fsr1h
  4579  000EEC  CFDF FFE7          	movff	indf2,indf1
  4580                           
  4581                           ;CAN.c: 432: data_reg_ptr++;
  4582  000EF0  4A23               	infsnz	CANMessageSend@data_reg_ptr,f,c
  4583  000EF2  2A24               	incf	CANMessageSend@data_reg_ptr+1,f,c
  4584                           
  4585                           ;CAN.c: 433: data_ptr++;
  4586  000EF4  4A25               	infsnz	CANMessageSend@data_ptr,f,c
  4587  000EF6  2A26               	incf	CANMessageSend@data_ptr+1,f,c
  4588  000EF8  4A21               	infsnz	CANMessageSend@i,f,c
  4589  000EFA  2A22               	incf	CANMessageSend@i+1,f,c
  4590  000EFC                     l2679:
  4591  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  4592  000EFE  EE20 F00C          	lfsr	2,12
  4593  000F02  5010               	movf	CANMessageSend@psMsgObject,w,c
  4594  000F04  26D9               	addwf	fsr2l,f,c
  4595  000F06  5011               	movf	CANMessageSend@psMsgObject+1,w,c
  4596  000F08  22DA               	addwfc	fsr2h,f,c
  4597  000F0A  C021  F017         	movff	CANMessageSend@i,??_CANMessageSend+4
  4598  000F0E  C022  F018         	movff	CANMessageSend@i+1,??_CANMessageSend+5
  4599  000F12  0E00               	movlw	0
  4600  000F14  BE18               	btfsc	(??_CANMessageSend+5)& (0+255),7,c
  4601  000F16  0EFF               	movlw	255
  4602  000F18  6E19               	movwf	(??_CANMessageSend+6)& (0+255),c
  4603  000F1A  6E1A               	movwf	(??_CANMessageSend+7)& (0+255),c
  4604  000F1C  50DE               	movf	postinc2,w,c
  4605  000F1E  5C17               	subwf	??_CANMessageSend+4,w,c
  4606  000F20  50DE               	movf	postinc2,w,c
  4607  000F22  5818               	subwfb	??_CANMessageSend+5,w,c
  4608  000F24  50DE               	movf	postinc2,w,c
  4609  000F26  5819               	subwfb	??_CANMessageSend+6,w,c
  4610  000F28  50DE               	movf	postinc2,w,c
  4611  000F2A  581A               	subwfb	??_CANMessageSend+7,w,c
  4612  000F2C  B0D8               	btfsc	status,0,c
  4613  000F2E  D00E               	goto	l423
  4614  000F30  D7D4               	goto	l2671
  4615  000F32                     l2681:
  4616  000F32  FFFF               	dw	65535	; assembler added errata NOP
  4617                           
  4618                           ;CAN.c: 436: else
  4619                           ;CAN.c: 437: {
  4620                           ;CAN.c: 438: *(TXBDLC_PTR) = (*(TXBDLC_PTR) & ~(1<<6)) | (1<<6 & 0xFF);
  4621  000F34  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4622  000F38  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4623  000F3C  50DF               	movf	indf2,w,c
  4624  000F3E  0BBF               	andlw	191
  4625  000F40  0940               	iorlw	64
  4626  000F42  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4627  000F46  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4628  000F4A  6EDF               	movwf	indf2,c
  4629  000F4C                     l423:
  4630  000F4C  FFFF               	dw	65535	; assembler added errata NOP
  4631                           
  4632                           ;CAN.c: 439: }
  4633                           ;CAN.c: 442: *TXBCON_PTR = (*TXBCON_PTR & ~(1<<3)) | (1<<3 & 0xFF);
  4634  000F4E  C027  FFD9         	movff	CANMessageSend@TXBCON_PTR,fsr2l
  4635  000F52  C028  FFDA         	movff	CANMessageSend@TXBCON_PTR+1,fsr2h
  4636  000F56  50DF               	movf	indf2,w,c
  4637  000F58  0BF7               	andlw	247
  4638  000F5A  0908               	iorlw	8
  4639  000F5C  C027  FFD9         	movff	CANMessageSend@TXBCON_PTR,fsr2l
  4640  000F60  C028  FFDA         	movff	CANMessageSend@TXBCON_PTR+1,fsr2h
  4641  000F64  6EDF               	movwf	indf2,c
  4642  000F66  0012               	return		;funcret
  4643  000F68  FFFF               	dw	65535	; errata NOP
  4644  000F6A                     __end_of_CANMessageSend:
  4645                           	opt stack 0
  4646                           tblptru	equ	0xFF8
  4647                           tblptrh	equ	0xFF7
  4648                           tblptrl	equ	0xFF6
  4649                           tablat	equ	0xFF5
  4650                           intcon	equ	0xFF2
  4651                           indf0	equ	0xFEF
  4652                           postinc0	equ	0xFEE
  4653                           fsr0h	equ	0xFEA
  4654                           fsr0l	equ	0xFE9
  4655                           wreg	equ	0xFE8
  4656                           indf1	equ	0xFE7
  4657                           fsr1h	equ	0xFE2
  4658                           fsr1l	equ	0xFE1
  4659                           indf2	equ	0xFDF
  4660                           postinc2	equ	0xFDE
  4661                           postdec2	equ	0xFDD
  4662                           plusw2	equ	0xFDB
  4663                           fsr2h	equ	0xFDA
  4664                           fsr2l	equ	0xFD9
  4665                           status	equ	0xFD8
  4666                           
  4667 ;; *************** function _CANMessageGet *****************
  4668 ;; Defined at:
  4669 ;;		line 218 in file "CAN.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  psMsgObject     2   15[COMRAM] PTR struct .
  4672 ;;		 -> rxCANMessage(18), 
  4673 ;;  bClrPendingI    1   17[COMRAM] unsigned char 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  data_ptr        2   28[COMRAM] PTR volatile unsigned ch
  4676 ;;		 -> main@sync_period(2), main@ui16ReplyData(2), 
  4677 ;;  rxBuffer_ptr    2   26[COMRAM] PTR volatile unsigned ch
  4678 ;;		 -> RXB1D0(1), 
  4679 ;;  i               2   24[COMRAM] int 
  4680 ;;  data_ptr        2   22[COMRAM] PTR volatile unsigned ch
  4681 ;;		 -> main@sync_period(2), main@ui16ReplyData(2), 
  4682 ;;  rxBuffer_ptr    2   20[COMRAM] PTR volatile unsigned ch
  4683 ;;		 -> RXB0D0(1), 
  4684 ;;  i               2   18[COMRAM] int 
  4685 ;;  RXMsgFlag       1   30[COMRAM] unsigned char 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      unsigned char 
  4688 ;; Registers used:
  4689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4695 ;;      Params:         3       0       0       0       0       0       0
  4696 ;;      Locals:        13       0       0       0       0       0       0
  4697 ;;      Temps:          0      37       0       0       0       0       0
  4698 ;;      Totals:        16      37       0       0       0       0       0
  4699 ;;Total ram usage:       53 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    2
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_main
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text23
  4710  000618                     __ptext23:
  4711                           	opt stack 0
  4712  000618                     _CANMessageGet:
  4713                           	opt stack 0
  4714  000618  FFFF               	dw	65535	; assembler added errata NOP
  4715                           
  4716                           ;CAN.c: 220: uint8_t RXMsgFlag;
  4717                           ;CAN.c: 221: RXMsgFlag = 0x00;
  4718                           
  4719                           ;incstack = 0
  4720  00061A  0E00               	movlw	0
  4721  00061C  6E1F               	movwf	CANMessageGet@RXMsgFlag,c
  4722                           
  4723                           ;CAN.c: 224: psMsgObject->ui32Flags = 0;
  4724  00061E  EE20 F008          	lfsr	2,8
  4725  000622  5010               	movf	CANMessageGet@psMsgObject,w,c
  4726  000624  26D9               	addwf	fsr2l,f,c
  4727  000626  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  4728  000628  22DA               	addwfc	fsr2h,f,c
  4729  00062A  6ADE               	clrf	postinc2,c
  4730  00062C  6ADE               	clrf	postinc2,c
  4731  00062E  6ADE               	clrf	postinc2,c
  4732  000630  6ADD               	clrf	postdec2,c
  4733                           
  4734                           ;CAN.c: 227: if( PIR3 & 1<<5)
  4735  000632  AAA4               	btfss	4004,5,c	;volatile
  4736  000634  D00C               	goto	l3037
  4737                           
  4738                           ;CAN.c: 228: {
  4739                           ;CAN.c: 229: psMsgObject->ui32Flags |= 1<<1;
  4740  000636  EE20 F008          	lfsr	2,8
  4741  00063A  5010               	movf	CANMessageGet@psMsgObject,w,c
  4742  00063C  26D9               	addwf	fsr2l,f,c
  4743  00063E  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  4744  000640  22DA               	addwfc	fsr2h,f,c
  4745  000642  0E02               	movlw	2
  4746  000644  12DE               	iorwf	postinc2,f,c
  4747  000646  0E00               	movlw	0
  4748  000648  12DE               	iorwf	postinc2,f,c
  4749  00064A  12DE               	iorwf	postinc2,f,c
  4750  00064C  12DE               	iorwf	postinc2,f,c
  4751  00064E                     l3037:
  4752  00064E  FFFF               	dw	65535	; assembler added errata NOP
  4753                           
  4754                           ;CAN.c: 231: }
  4755                           ;CAN.c: 235: if ( RXB0CONbits.RXFUL == 1 )
  4756  000650  AE60               	btfss	3936,7,c	;volatile
  4757  000652  D156               	goto	l3069
  4758                           
  4759                           ;CAN.c: 238: {
  4760                           ;CAN.c: 240: if( RXB0SIDLbits.EXID == 0x00 )
  4761  000654  B662               	btfsc	3938,3,c	;volatile
  4762  000656  D03C               	goto	l3043
  4763                           
  4764                           ;CAN.c: 241: {
  4765                           ;CAN.c: 242: psMsgObject->ui32MsgID = ( RXB0SIDH<<3 ) | ( RXB0SIDL>>5 );
  4766  000658  CF62 F060          	movff	3938,??_CANMessageGet	;volatile
  4767  00065C  0E05               	movlw	5
  4768  00065E  0100               	movlb	0	; () banked
  4769  000660  6F61               	movwf	(??_CANMessageGet+1)& (0+255),b
  4770  000662                     u2845:
  4771  000662  FFFF               	dw	65535	; assembler added errata NOP
  4772  000664  0100               	movlb	0	; () banked
  4773  000666  90D8               	bcf	status,0,c
  4774  000668  3360               	rrcf	??_CANMessageGet& (0+255),f,b
  4775  00066A  0100               	movlb	0	; () banked
  4776  00066C  2F61               	decfsz	(??_CANMessageGet+1)& (0+255),f,b
  4777  00066E  D7F9               	goto	u2845
  4778  000670  0100               	movlb	0	; () banked
  4779  000672  5160               	movf	??_CANMessageGet& (0+255),w,b
  4780  000674  CF61 F062          	movff	3937,??_CANMessageGet+2	;volatile
  4781  000678  0100               	movlb	0	; () banked
  4782  00067A  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  4783  00067C  0100               	movlb	0	; () banked
  4784  00067E  90D8               	bcf	status,0,c
  4785  000680  3762               	rlcf	(??_CANMessageGet+2)& (0+255),f,b
  4786  000682  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  4787  000684  0100               	movlb	0	; () banked
  4788  000686  90D8               	bcf	status,0,c
  4789  000688  3762               	rlcf	(??_CANMessageGet+2)& (0+255),f,b
  4790  00068A  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  4791  00068C  0100               	movlb	0	; () banked
  4792  00068E  90D8               	bcf	status,0,c
  4793  000690  3762               	rlcf	(??_CANMessageGet+2)& (0+255),f,b
  4794  000692  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  4795  000694  0100               	movlb	0	; () banked
  4796  000696  1162               	iorwf	(??_CANMessageGet+2)& (0+255),w,b
  4797  000698  0100               	movlb	0	; () banked
  4798  00069A  6F64               	movwf	(??_CANMessageGet+4)& (0+255),b
  4799  00069C  0100               	movlb	0	; () banked
  4800  00069E  5163               	movf	(??_CANMessageGet+3)& (0+255),w,b
  4801  0006A0  0100               	movlb	0	; () banked
  4802  0006A2  6F65               	movwf	(??_CANMessageGet+5)& (0+255),b
  4803  0006A4  0100               	movlb	0	; () banked
  4804  0006A6  6B66               	clrf	(??_CANMessageGet+6)& (0+255),b
  4805  0006A8  0100               	movlb	0	; () banked
  4806  0006AA  BF65               	btfsc	(??_CANMessageGet+5)& (0+255),7,b
  4807  0006AC  0766               	decf	(??_CANMessageGet+6)& (0+255),f,b
  4808  0006AE  0100               	movlb	0	; () banked
  4809  0006B0  5166               	movf	(??_CANMessageGet+6)& (0+255),w,b
  4810  0006B2  0100               	movlb	0	; () banked
  4811  0006B4  6F67               	movwf	(??_CANMessageGet+7)& (0+255),b
  4812  0006B6  C010  FFD9         	movff	CANMessageGet@psMsgObject,fsr2l
  4813  0006BA  C011  FFDA         	movff	CANMessageGet@psMsgObject+1,fsr2h
  4814  0006BE  C064  FFDE         	movff	??_CANMessageGet+4,postinc2
  4815  0006C2  C065  FFDE         	movff	??_CANMessageGet+5,postinc2
  4816  0006C6  C066  FFDE         	movff	??_CANMessageGet+6,postinc2
  4817  0006CA  C067  FFDE         	movff	??_CANMessageGet+7,postinc2
  4818                           
  4819                           ;CAN.c: 243: }
  4820  0006CE  D0AB               	goto	l390
  4821  0006D0                     l3043:
  4822  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  4823                           
  4824                           ;CAN.c: 245: else
  4825                           ;CAN.c: 246: {
  4826                           ;CAN.c: 247: psMsgObject->ui32MsgID = ( ( ((uint32_t)RXB0SIDH)<<21 ) | ( (((uint32_t)RXB
      +                          0SIDL) & 0x00E0)<<18 ) | ( (((uint32_t)RXB0SIDL) & 0x0003)<<16 ) | ( (uint32_t)RXB0EIDH<
      +                          <8 ) | (uint32_t)( RXB0EIDL ) ) ;
  4827  0006D2  CF63 F060          	movff	3939,??_CANMessageGet	;volatile
  4828  0006D6  0100               	movlb	0	; () banked
  4829  0006D8  6B61               	clrf	(??_CANMessageGet+1)& (0+255),b
  4830  0006DA  6B62               	clrf	(??_CANMessageGet+2)& (0+255),b
  4831  0006DC  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  4832  0006DE  C062  F063         	movff	??_CANMessageGet+2,??_CANMessageGet+3
  4833  0006E2  C061  F062         	movff	??_CANMessageGet+1,??_CANMessageGet+2
  4834  0006E6  C060  F061         	movff	??_CANMessageGet,??_CANMessageGet+1
  4835  0006EA  0100               	movlb	0	; () banked
  4836  0006EC  6B60               	clrf	??_CANMessageGet& (0+255),b
  4837  0006EE  CF62 F064          	movff	3938,??_CANMessageGet+4	;volatile
  4838  0006F2  0E03               	movlw	3
  4839  0006F4  0100               	movlb	0	; () banked
  4840  0006F6  1764               	andwf	(??_CANMessageGet+4)& (0+255),f,b
  4841  0006F8  C064  F065         	movff	??_CANMessageGet+4,??_CANMessageGet+5
  4842  0006FC  0100               	movlb	0	; () banked
  4843  0006FE  6B66               	clrf	(??_CANMessageGet+6)& (0+255),b
  4844  000700  6B67               	clrf	(??_CANMessageGet+7)& (0+255),b
  4845  000702  6B68               	clrf	(??_CANMessageGet+8)& (0+255),b
  4846  000704  C066  F068         	movff	??_CANMessageGet+6,??_CANMessageGet+8
  4847  000708  C065  F067         	movff	??_CANMessageGet+5,??_CANMessageGet+7
  4848  00070C  0100               	movlb	0	; () banked
  4849  00070E  6B66               	clrf	(??_CANMessageGet+6)& (0+255),b
  4850  000710  6B65               	clrf	(??_CANMessageGet+5)& (0+255),b
  4851  000712  CF62 F069          	movff	3938,??_CANMessageGet+9	;volatile
  4852  000716  0EE0               	movlw	224
  4853  000718  0100               	movlb	0	; () banked
  4854  00071A  1769               	andwf	(??_CANMessageGet+9)& (0+255),f,b
  4855  00071C  C069  F06A         	movff	??_CANMessageGet+9,??_CANMessageGet+10
  4856  000720  0100               	movlb	0	; () banked
  4857  000722  6B6B               	clrf	(??_CANMessageGet+11)& (0+255),b
  4858  000724  6B6C               	clrf	(??_CANMessageGet+12)& (0+255),b
  4859  000726  6B6D               	clrf	(??_CANMessageGet+13)& (0+255),b
  4860  000728  0E12               	movlw	18
  4861  00072A                     u2855:
  4862  00072A  FFFF               	dw	65535	; assembler added errata NOP
  4863  00072C  90D8               	bcf	status,0,c
  4864  00072E  0100               	movlb	0	; () banked
  4865  000730  376A               	rlcf	(??_CANMessageGet+10)& (0+255),f,b
  4866  000732  376B               	rlcf	(??_CANMessageGet+11)& (0+255),f,b
  4867  000734  376C               	rlcf	(??_CANMessageGet+12)& (0+255),f,b
  4868  000736  376D               	rlcf	(??_CANMessageGet+13)& (0+255),f,b
  4869  000738  2EE8               	decfsz	wreg,f,c
  4870  00073A  D7F7               	goto	u2855
  4871  00073C  CF61 F06E          	movff	3937,??_CANMessageGet+14	;volatile
  4872  000740  0100               	movlb	0	; () banked
  4873  000742  6B6F               	clrf	(??_CANMessageGet+15)& (0+255),b
  4874  000744  6B70               	clrf	(??_CANMessageGet+16)& (0+255),b
  4875  000746  6B71               	clrf	(??_CANMessageGet+17)& (0+255),b
  4876  000748  0E15               	movlw	21
  4877  00074A                     u2865:
  4878  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4879  00074C  90D8               	bcf	status,0,c
  4880  00074E  0100               	movlb	0	; () banked
  4881  000750  376E               	rlcf	(??_CANMessageGet+14)& (0+255),f,b
  4882  000752  376F               	rlcf	(??_CANMessageGet+15)& (0+255),f,b
  4883  000754  3770               	rlcf	(??_CANMessageGet+16)& (0+255),f,b
  4884  000756  3771               	rlcf	(??_CANMessageGet+17)& (0+255),f,b
  4885  000758  2EE8               	decfsz	wreg,f,c
  4886  00075A  D7F7               	goto	u2865
  4887  00075C  0100               	movlb	0	; () banked
  4888  00075E  516A               	movf	(??_CANMessageGet+10)& (0+255),w,b
  4889  000760  0100               	movlb	0	; () banked
  4890  000762  116E               	iorwf	(??_CANMessageGet+14)& (0+255),w,b
  4891  000764  0100               	movlb	0	; () banked
  4892  000766  6F72               	movwf	(??_CANMessageGet+18)& (0+255),b
  4893  000768  0100               	movlb	0	; () banked
  4894  00076A  516B               	movf	(??_CANMessageGet+11)& (0+255),w,b
  4895  00076C  0100               	movlb	0	; () banked
  4896  00076E  116F               	iorwf	(??_CANMessageGet+15)& (0+255),w,b
  4897  000770  0100               	movlb	0	; () banked
  4898  000772  6F73               	movwf	(??_CANMessageGet+19)& (0+255),b
  4899  000774  0100               	movlb	0	; () banked
  4900  000776  516C               	movf	(??_CANMessageGet+12)& (0+255),w,b
  4901  000778  0100               	movlb	0	; () banked
  4902  00077A  1170               	iorwf	(??_CANMessageGet+16)& (0+255),w,b
  4903  00077C  0100               	movlb	0	; () banked
  4904  00077E  6F74               	movwf	(??_CANMessageGet+20)& (0+255),b
  4905  000780  0100               	movlb	0	; () banked
  4906  000782  516D               	movf	(??_CANMessageGet+13)& (0+255),w,b
  4907  000784  0100               	movlb	0	; () banked
  4908  000786  1171               	iorwf	(??_CANMessageGet+17)& (0+255),w,b
  4909  000788  0100               	movlb	0	; () banked
  4910  00078A  6F75               	movwf	(??_CANMessageGet+21)& (0+255),b
  4911  00078C  0100               	movlb	0	; () banked
  4912  00078E  5165               	movf	(??_CANMessageGet+5)& (0+255),w,b
  4913  000790  0100               	movlb	0	; () banked
  4914  000792  1172               	iorwf	(??_CANMessageGet+18)& (0+255),w,b
  4915  000794  0100               	movlb	0	; () banked
  4916  000796  6F76               	movwf	(??_CANMessageGet+22)& (0+255),b
  4917  000798  0100               	movlb	0	; () banked
  4918  00079A  5166               	movf	(??_CANMessageGet+6)& (0+255),w,b
  4919  00079C  0100               	movlb	0	; () banked
  4920  00079E  1173               	iorwf	(??_CANMessageGet+19)& (0+255),w,b
  4921  0007A0  0100               	movlb	0	; () banked
  4922  0007A2  6F77               	movwf	(??_CANMessageGet+23)& (0+255),b
  4923  0007A4  0100               	movlb	0	; () banked
  4924  0007A6  5167               	movf	(??_CANMessageGet+7)& (0+255),w,b
  4925  0007A8  0100               	movlb	0	; () banked
  4926  0007AA  1174               	iorwf	(??_CANMessageGet+20)& (0+255),w,b
  4927  0007AC  0100               	movlb	0	; () banked
  4928  0007AE  6F78               	movwf	(??_CANMessageGet+24)& (0+255),b
  4929  0007B0  0100               	movlb	0	; () banked
  4930  0007B2  5168               	movf	(??_CANMessageGet+8)& (0+255),w,b
  4931  0007B4  0100               	movlb	0	; () banked
  4932  0007B6  1175               	iorwf	(??_CANMessageGet+21)& (0+255),w,b
  4933  0007B8  0100               	movlb	0	; () banked
  4934  0007BA  6F79               	movwf	(??_CANMessageGet+25)& (0+255),b
  4935  0007BC  0100               	movlb	0	; () banked
  4936  0007BE  5160               	movf	??_CANMessageGet& (0+255),w,b
  4937  0007C0  0100               	movlb	0	; () banked
  4938  0007C2  1176               	iorwf	(??_CANMessageGet+22)& (0+255),w,b
  4939  0007C4  0100               	movlb	0	; () banked
  4940  0007C6  6F7A               	movwf	(??_CANMessageGet+26)& (0+255),b
  4941  0007C8  0100               	movlb	0	; () banked
  4942  0007CA  5161               	movf	(??_CANMessageGet+1)& (0+255),w,b
  4943  0007CC  0100               	movlb	0	; () banked
  4944  0007CE  1177               	iorwf	(??_CANMessageGet+23)& (0+255),w,b
  4945  0007D0  0100               	movlb	0	; () banked
  4946  0007D2  6F7B               	movwf	(??_CANMessageGet+27)& (0+255),b
  4947  0007D4  0100               	movlb	0	; () banked
  4948  0007D6  5162               	movf	(??_CANMessageGet+2)& (0+255),w,b
  4949  0007D8  0100               	movlb	0	; () banked
  4950  0007DA  1178               	iorwf	(??_CANMessageGet+24)& (0+255),w,b
  4951  0007DC  0100               	movlb	0	; () banked
  4952  0007DE  6F7C               	movwf	(??_CANMessageGet+28)& (0+255),b
  4953  0007E0  0100               	movlb	0	; () banked
  4954  0007E2  5163               	movf	(??_CANMessageGet+3)& (0+255),w,b
  4955  0007E4  0100               	movlb	0	; () banked
  4956  0007E6  1179               	iorwf	(??_CANMessageGet+25)& (0+255),w,b
  4957  0007E8  0100               	movlb	0	; () banked
  4958  0007EA  6F7D               	movwf	(??_CANMessageGet+29)& (0+255),b
  4959  0007EC  5064               	movf	3940,w,c	;volatile
  4960  0007EE  0100               	movlb	0	; () banked
  4961  0007F0  117A               	iorwf	(??_CANMessageGet+26)& (0+255),w,b
  4962  0007F2  0100               	movlb	0	; () banked
  4963  0007F4  6F7E               	movwf	(??_CANMessageGet+30)& (0+255),b
  4964  0007F6  0100               	movlb	0	; () banked
  4965  0007F8  517B               	movf	(??_CANMessageGet+27)& (0+255),w,b
  4966  0007FA  0100               	movlb	0	; () banked
  4967  0007FC  6F7F               	movwf	(??_CANMessageGet+31)& (0+255),b
  4968  0007FE  0100               	movlb	0	; () banked
  4969  000800  517C               	movf	(??_CANMessageGet+28)& (0+255),w,b
  4970  000802  0100               	movlb	0	; () banked
  4971  000804  6F80               	movwf	(??_CANMessageGet+32)& (0+255),b
  4972  000806  0100               	movlb	0	; () banked
  4973  000808  517D               	movf	(??_CANMessageGet+29)& (0+255),w,b
  4974  00080A  0100               	movlb	0	; () banked
  4975  00080C  6F81               	movwf	(??_CANMessageGet+33)& (0+255),b
  4976  00080E  C010  FFD9         	movff	CANMessageGet@psMsgObject,fsr2l
  4977  000812  C011  FFDA         	movff	CANMessageGet@psMsgObject+1,fsr2h
  4978  000816  C07E  FFDE         	movff	??_CANMessageGet+30,postinc2
  4979  00081A  C07F  FFDE         	movff	??_CANMessageGet+31,postinc2
  4980  00081E  C080  FFDE         	movff	??_CANMessageGet+32,postinc2
  4981  000822  C081  FFDE         	movff	??_CANMessageGet+33,postinc2
  4982  000826                     l390:
  4983  000826  FFFF               	dw	65535	; assembler added errata NOP
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;CAN.c: 248: }
  4987                           ;CAN.c: 251: psMsgObject->ui32MsgLen = RXB0DLC;
  4988  000828  CF65 F060          	movff	3941,??_CANMessageGet	;volatile
  4989  00082C  0100               	movlb	0	; () banked
  4990  00082E  6B61               	clrf	(??_CANMessageGet+1)& (0+255),b
  4991  000830  6B62               	clrf	(??_CANMessageGet+2)& (0+255),b
  4992  000832  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  4993  000834  EE20 F00C          	lfsr	2,12
  4994  000838  5010               	movf	CANMessageGet@psMsgObject,w,c
  4995  00083A  26D9               	addwf	fsr2l,f,c
  4996  00083C  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  4997  00083E  22DA               	addwfc	fsr2h,f,c
  4998  000840  C060  FFDE         	movff	??_CANMessageGet,postinc2
  4999  000844  C061  FFDE         	movff	??_CANMessageGet+1,postinc2
  5000  000848  C062  FFDE         	movff	??_CANMessageGet+2,postinc2
  5001  00084C  C063  FFDE         	movff	??_CANMessageGet+3,postinc2
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;CAN.c: 254: if( RXB0DLC & 1<<6 )
  5005  000850  AC65               	btfss	3941,6,c	;volatile
  5006  000852  D00D               	goto	l3049
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;CAN.c: 255: {
  5010                           ;CAN.c: 256: psMsgObject->ui32Flags |= 1<<6;
  5011  000854  EE20 F008          	lfsr	2,8
  5012  000858  5010               	movf	CANMessageGet@psMsgObject,w,c
  5013  00085A  26D9               	addwf	fsr2l,f,c
  5014  00085C  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5015  00085E  22DA               	addwfc	fsr2h,f,c
  5016  000860  0E40               	movlw	64
  5017  000862  12DE               	iorwf	postinc2,f,c
  5018  000864  0E00               	movlw	0
  5019  000866  12DE               	iorwf	postinc2,f,c
  5020  000868  12DE               	iorwf	postinc2,f,c
  5021  00086A  12DE               	iorwf	postinc2,f,c
  5022                           
  5023                           ;CAN.c: 257: }
  5024  00086C  D044               	goto	l3065
  5025  00086E                     l3049:
  5026  00086E  FFFF               	dw	65535	; assembler added errata NOP
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;CAN.c: 259: else
  5030                           ;CAN.c: 260: {
  5031                           ;CAN.c: 262: int i;
  5032                           ;CAN.c: 263: volatile uint8_t * rxBuffer_ptr = &RXB0D0;
  5033  000870  0E66               	movlw	102
  5034  000872  6E15               	movwf	CANMessageGet@rxBuffer_ptr,c
  5035  000874  0E0F               	movlw	15
  5036  000876  6E16               	movwf	CANMessageGet@rxBuffer_ptr+1,c
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;CAN.c: 264: volatile uint8_t * data_ptr = psMsgObject->pui8MsgData;
  5040  000878  EE20 F010          	lfsr	2,16
  5041  00087C  5010               	movf	CANMessageGet@psMsgObject,w,c
  5042  00087E  26D9               	addwf	fsr2l,f,c
  5043  000880  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5044  000882  22DA               	addwfc	fsr2h,f,c
  5045  000884  CFDE F017          	movff	postinc2,CANMessageGet@data_ptr
  5046  000888  CFDD F018          	movff	postdec2,CANMessageGet@data_ptr+1
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;CAN.c: 265: for(i=0; i<(psMsgObject->ui32MsgLen); i++ )
  5050  00088C  0E00               	movlw	0
  5051  00088E  6E14               	movwf	CANMessageGet@i+1,c
  5052  000890  0E00               	movlw	0
  5053  000892  6E13               	movwf	CANMessageGet@i,c
  5054  000894  D011               	goto	l3063
  5055  000896                     l3055:
  5056  000896  FFFF               	dw	65535	; assembler added errata NOP
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;CAN.c: 266: {
  5060                           ;CAN.c: 268: *(data_ptr) = *(rxBuffer_ptr);
  5061  000898  C015  FFD9         	movff	CANMessageGet@rxBuffer_ptr,fsr2l
  5062  00089C  C016  FFDA         	movff	CANMessageGet@rxBuffer_ptr+1,fsr2h
  5063  0008A0  C017  FFE1         	movff	CANMessageGet@data_ptr,fsr1l
  5064  0008A4  C018  FFE2         	movff	CANMessageGet@data_ptr+1,fsr1h
  5065  0008A8  CFDF FFE7          	movff	indf2,indf1
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;CAN.c: 269: data_ptr ++;
  5069  0008AC  4A17               	infsnz	CANMessageGet@data_ptr,f,c
  5070  0008AE  2A18               	incf	CANMessageGet@data_ptr+1,f,c
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;CAN.c: 270: rxBuffer_ptr ++;
  5074  0008B0  4A15               	infsnz	CANMessageGet@rxBuffer_ptr,f,c
  5075  0008B2  2A16               	incf	CANMessageGet@rxBuffer_ptr+1,f,c
  5076                           
  5077                           ; BSR set to: 0
  5078  0008B4  4A13               	infsnz	CANMessageGet@i,f,c
  5079  0008B6  2A14               	incf	CANMessageGet@i+1,f,c
  5080  0008B8                     l3063:
  5081  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  5082                           
  5083                           ; BSR set to: 0
  5084  0008BA  EE20 F00C          	lfsr	2,12
  5085  0008BE  5010               	movf	CANMessageGet@psMsgObject,w,c
  5086  0008C0  26D9               	addwf	fsr2l,f,c
  5087  0008C2  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5088  0008C4  22DA               	addwfc	fsr2h,f,c
  5089  0008C6  C013  F064         	movff	CANMessageGet@i,??_CANMessageGet+4
  5090  0008CA  C014  F065         	movff	CANMessageGet@i+1,??_CANMessageGet+5
  5091  0008CE  0E00               	movlw	0
  5092  0008D0  0100               	movlb	0	; () banked
  5093  0008D2  BF65               	btfsc	(??_CANMessageGet+5)& (0+255),7,b
  5094  0008D4  0EFF               	movlw	255
  5095  0008D6  6F66               	movwf	(??_CANMessageGet+6)& (0+255),b
  5096  0008D8  6F67               	movwf	(??_CANMessageGet+7)& (0+255),b
  5097  0008DA  50DE               	movf	postinc2,w,c
  5098  0008DC  0100               	movlb	0	; () banked
  5099  0008DE  5D64               	subwf	(??_CANMessageGet+4)& (0+255),w,b
  5100  0008E0  50DE               	movf	postinc2,w,c
  5101  0008E2  0100               	movlb	0	; () banked
  5102  0008E4  5965               	subwfb	(??_CANMessageGet+5)& (0+255),w,b
  5103  0008E6  50DE               	movf	postinc2,w,c
  5104  0008E8  0100               	movlb	0	; () banked
  5105  0008EA  5966               	subwfb	(??_CANMessageGet+6)& (0+255),w,b
  5106  0008EC  50DE               	movf	postinc2,w,c
  5107  0008EE  0100               	movlb	0	; () banked
  5108  0008F0  5967               	subwfb	(??_CANMessageGet+7)& (0+255),w,b
  5109  0008F2  A0D8               	btfss	status,0,c
  5110  0008F4  D7D0               	goto	l3055
  5111  0008F6                     l3065:
  5112  0008F6  FFFF               	dw	65535	; assembler added errata NOP
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;CAN.c: 271: }
  5116                           ;CAN.c: 272: }
  5117                           ;CAN.c: 274: RXB0CON = (RXB0CON & ~(0x80)) | (0x80 & 0);
  5118  0008F8  5060               	movf	3936,w,c	;volatile
  5119  0008FA  0B7F               	andlw	127
  5120  0008FC  6E60               	movwf	3936,c	;volatile
  5121  0008FE  D170               	goto	l3099
  5122  000900                     l3069:
  5123  000900  FFFF               	dw	65535	; assembler added errata NOP
  5124                           
  5125                           ;CAN.c: 280: else if ( RXB1CONbits.RXFUL == 1 )
  5126  000902  EE2F F050          	lfsr	2,3920
  5127  000906  010F               	movlb	15	; () banked
  5128  000908  AEDF               	btfss	indf2,7,c
  5129  00090A  D16D               	goto	l3101
  5130                           
  5131                           ; BSR set to: 15
  5132                           ;CAN.c: 283: {
  5133                           ;CAN.c: 286: if( RXB1SIDLbits.EXID == 0x00 )
  5134  00090C  EE2F F052          	lfsr	2,3922
  5135  000910  010F               	movlb	15	; () banked
  5136  000912  B6DF               	btfsc	indf2,3,c
  5137  000914  D03E               	goto	l3075
  5138                           
  5139                           ; BSR set to: 15
  5140                           ;CAN.c: 287: {
  5141                           ;CAN.c: 288: psMsgObject->ui32MsgID = ( RXB1SIDH<<3 ) | ( RXB1SIDL>>5 );
  5142  000916  CF52 F060          	movff	3922,??_CANMessageGet
  5143  00091A  0E05               	movlw	5
  5144  00091C  0100               	movlb	0	; () banked
  5145  00091E  6F61               	movwf	(??_CANMessageGet+1)& (0+255),b
  5146  000920                     u2915:
  5147  000920  FFFF               	dw	65535	; assembler added errata NOP
  5148  000922  0100               	movlb	0	; () banked
  5149  000924  90D8               	bcf	status,0,c
  5150  000926  3360               	rrcf	??_CANMessageGet& (0+255),f,b
  5151  000928  0100               	movlb	0	; () banked
  5152  00092A  2F61               	decfsz	(??_CANMessageGet+1)& (0+255),f,b
  5153  00092C  D7F9               	goto	u2915
  5154  00092E  0100               	movlb	0	; () banked
  5155  000930  5160               	movf	??_CANMessageGet& (0+255),w,b
  5156  000932  CF51 F062          	movff	3921,??_CANMessageGet+2
  5157  000936  C062  F063         	movff	??_CANMessageGet+2,??_CANMessageGet+3
  5158  00093A  0100               	movlb	0	; () banked
  5159  00093C  6B64               	clrf	(??_CANMessageGet+4)& (0+255),b
  5160  00093E  0100               	movlb	0	; () banked
  5161  000940  90D8               	bcf	status,0,c
  5162  000942  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  5163  000944  3764               	rlcf	(??_CANMessageGet+4)& (0+255),f,b
  5164  000946  0100               	movlb	0	; () banked
  5165  000948  90D8               	bcf	status,0,c
  5166  00094A  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  5167  00094C  3764               	rlcf	(??_CANMessageGet+4)& (0+255),f,b
  5168  00094E  0100               	movlb	0	; () banked
  5169  000950  90D8               	bcf	status,0,c
  5170  000952  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  5171  000954  3764               	rlcf	(??_CANMessageGet+4)& (0+255),f,b
  5172  000956  0100               	movlb	0	; () banked
  5173  000958  1163               	iorwf	(??_CANMessageGet+3)& (0+255),w,b
  5174  00095A  0100               	movlb	0	; () banked
  5175  00095C  6F65               	movwf	(??_CANMessageGet+5)& (0+255),b
  5176  00095E  0100               	movlb	0	; () banked
  5177  000960  5164               	movf	(??_CANMessageGet+4)& (0+255),w,b
  5178  000962  0100               	movlb	0	; () banked
  5179  000964  6F66               	movwf	(??_CANMessageGet+6)& (0+255),b
  5180  000966  0100               	movlb	0	; () banked
  5181  000968  6B67               	clrf	(??_CANMessageGet+7)& (0+255),b
  5182  00096A  0100               	movlb	0	; () banked
  5183  00096C  BF66               	btfsc	(??_CANMessageGet+6)& (0+255),7,b
  5184  00096E  0767               	decf	(??_CANMessageGet+7)& (0+255),f,b
  5185  000970  0100               	movlb	0	; () banked
  5186  000972  5167               	movf	(??_CANMessageGet+7)& (0+255),w,b
  5187  000974  0100               	movlb	0	; () banked
  5188  000976  6F68               	movwf	(??_CANMessageGet+8)& (0+255),b
  5189  000978  C010  FFD9         	movff	CANMessageGet@psMsgObject,fsr2l
  5190  00097C  C011  FFDA         	movff	CANMessageGet@psMsgObject+1,fsr2h
  5191  000980  C065  FFDE         	movff	??_CANMessageGet+5,postinc2
  5192  000984  C066  FFDE         	movff	??_CANMessageGet+6,postinc2
  5193  000988  C067  FFDE         	movff	??_CANMessageGet+7,postinc2
  5194  00098C  C068  FFDE         	movff	??_CANMessageGet+8,postinc2
  5195                           
  5196                           ;CAN.c: 289: }
  5197  000990  D0B2               	goto	l399
  5198  000992                     l3075:
  5199  000992  FFFF               	dw	65535	; assembler added errata NOP
  5200                           
  5201                           ;CAN.c: 292: else
  5202                           ;CAN.c: 293: {
  5203                           ;CAN.c: 294: psMsgObject->ui32MsgID = ( ((uint32_t)RXB1SIDH<<21) | (((uint32_t)RXB1SIDL 
      +                          & 0xE0)<<18) | (((uint32_t)RXB1SIDL & 0x03)<<16) | ((uint32_t)RXB1EIDH<<8) | (uint32_t)(
      +                          RXB1EIDL) ) ;
  5204  000994  CF53 F060          	movff	3923,??_CANMessageGet
  5205  000998  C060  F061         	movff	??_CANMessageGet,??_CANMessageGet+1
  5206  00099C  0100               	movlb	0	; () banked
  5207  00099E  6B62               	clrf	(??_CANMessageGet+2)& (0+255),b
  5208  0009A0  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  5209  0009A2  6B64               	clrf	(??_CANMessageGet+4)& (0+255),b
  5210  0009A4  C063  F064         	movff	??_CANMessageGet+3,??_CANMessageGet+4
  5211  0009A8  C062  F063         	movff	??_CANMessageGet+2,??_CANMessageGet+3
  5212  0009AC  C061  F062         	movff	??_CANMessageGet+1,??_CANMessageGet+2
  5213  0009B0  0100               	movlb	0	; () banked
  5214  0009B2  6B61               	clrf	(??_CANMessageGet+1)& (0+255),b
  5215  0009B4  CF52 F065          	movff	3922,??_CANMessageGet+5
  5216  0009B8  0E03               	movlw	3
  5217  0009BA  0100               	movlb	0	; () banked
  5218  0009BC  1765               	andwf	(??_CANMessageGet+5)& (0+255),f,b
  5219  0009BE  C065  F066         	movff	??_CANMessageGet+5,??_CANMessageGet+6
  5220  0009C2  0100               	movlb	0	; () banked
  5221  0009C4  6B67               	clrf	(??_CANMessageGet+7)& (0+255),b
  5222  0009C6  6B68               	clrf	(??_CANMessageGet+8)& (0+255),b
  5223  0009C8  6B69               	clrf	(??_CANMessageGet+9)& (0+255),b
  5224  0009CA  C067  F069         	movff	??_CANMessageGet+7,??_CANMessageGet+9
  5225  0009CE  C066  F068         	movff	??_CANMessageGet+6,??_CANMessageGet+8
  5226  0009D2  0100               	movlb	0	; () banked
  5227  0009D4  6B67               	clrf	(??_CANMessageGet+7)& (0+255),b
  5228  0009D6  6B66               	clrf	(??_CANMessageGet+6)& (0+255),b
  5229  0009D8  CF52 F06A          	movff	3922,??_CANMessageGet+10
  5230  0009DC  0EE0               	movlw	224
  5231  0009DE  0100               	movlb	0	; () banked
  5232  0009E0  176A               	andwf	(??_CANMessageGet+10)& (0+255),f,b
  5233  0009E2  C06A  F06B         	movff	??_CANMessageGet+10,??_CANMessageGet+11
  5234  0009E6  0100               	movlb	0	; () banked
  5235  0009E8  6B6C               	clrf	(??_CANMessageGet+12)& (0+255),b
  5236  0009EA  6B6D               	clrf	(??_CANMessageGet+13)& (0+255),b
  5237  0009EC  6B6E               	clrf	(??_CANMessageGet+14)& (0+255),b
  5238  0009EE  0E12               	movlw	18
  5239  0009F0                     u2925:
  5240  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  5241  0009F2  90D8               	bcf	status,0,c
  5242  0009F4  0100               	movlb	0	; () banked
  5243  0009F6  376B               	rlcf	(??_CANMessageGet+11)& (0+255),f,b
  5244  0009F8  376C               	rlcf	(??_CANMessageGet+12)& (0+255),f,b
  5245  0009FA  376D               	rlcf	(??_CANMessageGet+13)& (0+255),f,b
  5246  0009FC  376E               	rlcf	(??_CANMessageGet+14)& (0+255),f,b
  5247  0009FE  2EE8               	decfsz	wreg,f,c
  5248  000A00  D7F7               	goto	u2925
  5249  000A02  CF51 F06F          	movff	3921,??_CANMessageGet+15
  5250  000A06  C06F  F070         	movff	??_CANMessageGet+15,??_CANMessageGet+16
  5251  000A0A  0100               	movlb	0	; () banked
  5252  000A0C  6B71               	clrf	(??_CANMessageGet+17)& (0+255),b
  5253  000A0E  6B72               	clrf	(??_CANMessageGet+18)& (0+255),b
  5254  000A10  6B73               	clrf	(??_CANMessageGet+19)& (0+255),b
  5255  000A12  0E15               	movlw	21
  5256  000A14                     u2935:
  5257  000A14  FFFF               	dw	65535	; assembler added errata NOP
  5258  000A16  90D8               	bcf	status,0,c
  5259  000A18  0100               	movlb	0	; () banked
  5260  000A1A  3770               	rlcf	(??_CANMessageGet+16)& (0+255),f,b
  5261  000A1C  3771               	rlcf	(??_CANMessageGet+17)& (0+255),f,b
  5262  000A1E  3772               	rlcf	(??_CANMessageGet+18)& (0+255),f,b
  5263  000A20  3773               	rlcf	(??_CANMessageGet+19)& (0+255),f,b
  5264  000A22  2EE8               	decfsz	wreg,f,c
  5265  000A24  D7F7               	goto	u2935
  5266  000A26  0100               	movlb	0	; () banked
  5267  000A28  516B               	movf	(??_CANMessageGet+11)& (0+255),w,b
  5268  000A2A  0100               	movlb	0	; () banked
  5269  000A2C  1170               	iorwf	(??_CANMessageGet+16)& (0+255),w,b
  5270  000A2E  0100               	movlb	0	; () banked
  5271  000A30  6F74               	movwf	(??_CANMessageGet+20)& (0+255),b
  5272  000A32  0100               	movlb	0	; () banked
  5273  000A34  516C               	movf	(??_CANMessageGet+12)& (0+255),w,b
  5274  000A36  0100               	movlb	0	; () banked
  5275  000A38  1171               	iorwf	(??_CANMessageGet+17)& (0+255),w,b
  5276  000A3A  0100               	movlb	0	; () banked
  5277  000A3C  6F75               	movwf	(??_CANMessageGet+21)& (0+255),b
  5278  000A3E  0100               	movlb	0	; () banked
  5279  000A40  516D               	movf	(??_CANMessageGet+13)& (0+255),w,b
  5280  000A42  0100               	movlb	0	; () banked
  5281  000A44  1172               	iorwf	(??_CANMessageGet+18)& (0+255),w,b
  5282  000A46  0100               	movlb	0	; () banked
  5283  000A48  6F76               	movwf	(??_CANMessageGet+22)& (0+255),b
  5284  000A4A  0100               	movlb	0	; () banked
  5285  000A4C  516E               	movf	(??_CANMessageGet+14)& (0+255),w,b
  5286  000A4E  0100               	movlb	0	; () banked
  5287  000A50  1173               	iorwf	(??_CANMessageGet+19)& (0+255),w,b
  5288  000A52  0100               	movlb	0	; () banked
  5289  000A54  6F77               	movwf	(??_CANMessageGet+23)& (0+255),b
  5290  000A56  0100               	movlb	0	; () banked
  5291  000A58  5166               	movf	(??_CANMessageGet+6)& (0+255),w,b
  5292  000A5A  0100               	movlb	0	; () banked
  5293  000A5C  1174               	iorwf	(??_CANMessageGet+20)& (0+255),w,b
  5294  000A5E  0100               	movlb	0	; () banked
  5295  000A60  6F78               	movwf	(??_CANMessageGet+24)& (0+255),b
  5296  000A62  0100               	movlb	0	; () banked
  5297  000A64  5167               	movf	(??_CANMessageGet+7)& (0+255),w,b
  5298  000A66  0100               	movlb	0	; () banked
  5299  000A68  1175               	iorwf	(??_CANMessageGet+21)& (0+255),w,b
  5300  000A6A  0100               	movlb	0	; () banked
  5301  000A6C  6F79               	movwf	(??_CANMessageGet+25)& (0+255),b
  5302  000A6E  0100               	movlb	0	; () banked
  5303  000A70  5168               	movf	(??_CANMessageGet+8)& (0+255),w,b
  5304  000A72  0100               	movlb	0	; () banked
  5305  000A74  1176               	iorwf	(??_CANMessageGet+22)& (0+255),w,b
  5306  000A76  0100               	movlb	0	; () banked
  5307  000A78  6F7A               	movwf	(??_CANMessageGet+26)& (0+255),b
  5308  000A7A  0100               	movlb	0	; () banked
  5309  000A7C  5169               	movf	(??_CANMessageGet+9)& (0+255),w,b
  5310  000A7E  0100               	movlb	0	; () banked
  5311  000A80  1177               	iorwf	(??_CANMessageGet+23)& (0+255),w,b
  5312  000A82  0100               	movlb	0	; () banked
  5313  000A84  6F7B               	movwf	(??_CANMessageGet+27)& (0+255),b
  5314  000A86  0100               	movlb	0	; () banked
  5315  000A88  5161               	movf	(??_CANMessageGet+1)& (0+255),w,b
  5316  000A8A  0100               	movlb	0	; () banked
  5317  000A8C  1178               	iorwf	(??_CANMessageGet+24)& (0+255),w,b
  5318  000A8E  0100               	movlb	0	; () banked
  5319  000A90  6F7C               	movwf	(??_CANMessageGet+28)& (0+255),b
  5320  000A92  0100               	movlb	0	; () banked
  5321  000A94  5162               	movf	(??_CANMessageGet+2)& (0+255),w,b
  5322  000A96  0100               	movlb	0	; () banked
  5323  000A98  1179               	iorwf	(??_CANMessageGet+25)& (0+255),w,b
  5324  000A9A  0100               	movlb	0	; () banked
  5325  000A9C  6F7D               	movwf	(??_CANMessageGet+29)& (0+255),b
  5326  000A9E  0100               	movlb	0	; () banked
  5327  000AA0  5163               	movf	(??_CANMessageGet+3)& (0+255),w,b
  5328  000AA2  0100               	movlb	0	; () banked
  5329  000AA4  117A               	iorwf	(??_CANMessageGet+26)& (0+255),w,b
  5330  000AA6  0100               	movlb	0	; () banked
  5331  000AA8  6F7E               	movwf	(??_CANMessageGet+30)& (0+255),b
  5332  000AAA  0100               	movlb	0	; () banked
  5333  000AAC  5164               	movf	(??_CANMessageGet+4)& (0+255),w,b
  5334  000AAE  0100               	movlb	0	; () banked
  5335  000AB0  117B               	iorwf	(??_CANMessageGet+27)& (0+255),w,b
  5336  000AB2  0100               	movlb	0	; () banked
  5337  000AB4  6F7F               	movwf	(??_CANMessageGet+31)& (0+255),b
  5338  000AB6  CF54 F080          	movff	3924,??_CANMessageGet+32
  5339  000ABA  0100               	movlb	0	; () banked
  5340  000ABC  5180               	movf	(??_CANMessageGet+32)& (0+255),w,b
  5341  000ABE  0100               	movlb	0	; () banked
  5342  000AC0  117C               	iorwf	(??_CANMessageGet+28)& (0+255),w,b
  5343  000AC2  0100               	movlb	0	; () banked
  5344  000AC4  6F81               	movwf	(??_CANMessageGet+33)& (0+255),b
  5345  000AC6  0100               	movlb	0	; () banked
  5346  000AC8  517D               	movf	(??_CANMessageGet+29)& (0+255),w,b
  5347  000ACA  0100               	movlb	0	; () banked
  5348  000ACC  6F82               	movwf	(??_CANMessageGet+34)& (0+255),b
  5349  000ACE  0100               	movlb	0	; () banked
  5350  000AD0  517E               	movf	(??_CANMessageGet+30)& (0+255),w,b
  5351  000AD2  0100               	movlb	0	; () banked
  5352  000AD4  6F83               	movwf	(??_CANMessageGet+35)& (0+255),b
  5353  000AD6  0100               	movlb	0	; () banked
  5354  000AD8  517F               	movf	(??_CANMessageGet+31)& (0+255),w,b
  5355  000ADA  0100               	movlb	0	; () banked
  5356  000ADC  6F84               	movwf	(??_CANMessageGet+36)& (0+255),b
  5357  000ADE  C010  FFD9         	movff	CANMessageGet@psMsgObject,fsr2l
  5358  000AE2  C011  FFDA         	movff	CANMessageGet@psMsgObject+1,fsr2h
  5359  000AE6  C081  FFDE         	movff	??_CANMessageGet+33,postinc2
  5360  000AEA  C082  FFDE         	movff	??_CANMessageGet+34,postinc2
  5361  000AEE  C083  FFDE         	movff	??_CANMessageGet+35,postinc2
  5362  000AF2  C084  FFDE         	movff	??_CANMessageGet+36,postinc2
  5363  000AF6                     l399:
  5364  000AF6  FFFF               	dw	65535	; assembler added errata NOP
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;CAN.c: 295: }
  5368                           ;CAN.c: 297: psMsgObject->ui32MsgLen = RXB1DLC;
  5369  000AF8  CF55 F060          	movff	3925,??_CANMessageGet
  5370  000AFC  C060  F061         	movff	??_CANMessageGet,??_CANMessageGet+1
  5371  000B00  0100               	movlb	0	; () banked
  5372  000B02  6B62               	clrf	(??_CANMessageGet+2)& (0+255),b
  5373  000B04  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  5374  000B06  6B64               	clrf	(??_CANMessageGet+4)& (0+255),b
  5375  000B08  EE20 F00C          	lfsr	2,12
  5376  000B0C  5010               	movf	CANMessageGet@psMsgObject,w,c
  5377  000B0E  26D9               	addwf	fsr2l,f,c
  5378  000B10  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5379  000B12  22DA               	addwfc	fsr2h,f,c
  5380  000B14  C061  FFDE         	movff	??_CANMessageGet+1,postinc2
  5381  000B18  C062  FFDE         	movff	??_CANMessageGet+2,postinc2
  5382  000B1C  C063  FFDE         	movff	??_CANMessageGet+3,postinc2
  5383  000B20  C064  FFDE         	movff	??_CANMessageGet+4,postinc2
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;CAN.c: 300: if( RXB1DLC & 1<<6 )
  5387  000B24  EE2F F055          	lfsr	2,3925
  5388  000B28  010F               	movlb	15	; () banked
  5389  000B2A  ACDF               	btfss	indf2,6,c
  5390  000B2C  D00D               	goto	l3081
  5391                           
  5392                           ; BSR set to: 15
  5393                           ;CAN.c: 301: {
  5394                           ;CAN.c: 302: psMsgObject->ui32Flags |= 1<<6;
  5395  000B2E  EE20 F008          	lfsr	2,8
  5396  000B32  5010               	movf	CANMessageGet@psMsgObject,w,c
  5397  000B34  26D9               	addwf	fsr2l,f,c
  5398  000B36  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5399  000B38  22DA               	addwfc	fsr2h,f,c
  5400  000B3A  0E40               	movlw	64
  5401  000B3C  12DE               	iorwf	postinc2,f,c
  5402  000B3E  0E00               	movlw	0
  5403  000B40  12DE               	iorwf	postinc2,f,c
  5404  000B42  12DE               	iorwf	postinc2,f,c
  5405  000B44  12DE               	iorwf	postinc2,f,c
  5406                           
  5407                           ;CAN.c: 303: }
  5408  000B46  D044               	goto	l3097
  5409  000B48                     l3081:
  5410  000B48  FFFF               	dw	65535	; assembler added errata NOP
  5411                           
  5412                           ; BSR set to: 15
  5413                           ;CAN.c: 305: else
  5414                           ;CAN.c: 306: {
  5415                           ;CAN.c: 308: int i;
  5416                           ;CAN.c: 309: volatile uint8_t * rxBuffer_ptr = &RXB1D0;
  5417  000B4A  0E56               	movlw	86
  5418  000B4C  6E1B               	movwf	CANMessageGet@rxBuffer_ptr_976,c
  5419  000B4E  0E0F               	movlw	15
  5420  000B50  6E1C               	movwf	CANMessageGet@rxBuffer_ptr_976+1,c
  5421                           
  5422                           ; BSR set to: 15
  5423                           ;CAN.c: 310: volatile uint8_t * data_ptr = psMsgObject->pui8MsgData;
  5424  000B52  EE20 F010          	lfsr	2,16
  5425  000B56  5010               	movf	CANMessageGet@psMsgObject,w,c
  5426  000B58  26D9               	addwf	fsr2l,f,c
  5427  000B5A  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5428  000B5C  22DA               	addwfc	fsr2h,f,c
  5429  000B5E  CFDE F01D          	movff	postinc2,CANMessageGet@data_ptr_977
  5430  000B62  CFDD F01E          	movff	postdec2,CANMessageGet@data_ptr_977+1
  5431                           
  5432                           ; BSR set to: 15
  5433                           ;CAN.c: 311: for(i=0; i< ( psMsgObject->ui32MsgLen ); i++ )
  5434  000B66  0E00               	movlw	0
  5435  000B68  6E1A               	movwf	CANMessageGet@i_975+1,c
  5436  000B6A  0E00               	movlw	0
  5437  000B6C  6E19               	movwf	CANMessageGet@i_975,c
  5438  000B6E  D011               	goto	l3095
  5439  000B70                     l3087:
  5440  000B70  FFFF               	dw	65535	; assembler added errata NOP
  5441                           
  5442                           ;CAN.c: 312: {
  5443                           ;CAN.c: 314: *(data_ptr) = *(rxBuffer_ptr);
  5444  000B72  C01B  FFD9         	movff	CANMessageGet@rxBuffer_ptr_976,fsr2l
  5445  000B76  C01C  FFDA         	movff	CANMessageGet@rxBuffer_ptr_976+1,fsr2h
  5446  000B7A  C01D  FFE1         	movff	CANMessageGet@data_ptr_977,fsr1l
  5447  000B7E  C01E  FFE2         	movff	CANMessageGet@data_ptr_977+1,fsr1h
  5448  000B82  CFDF FFE7          	movff	indf2,indf1
  5449                           
  5450                           ;CAN.c: 315: data_ptr ++;
  5451  000B86  4A1D               	infsnz	CANMessageGet@data_ptr_977,f,c
  5452  000B88  2A1E               	incf	CANMessageGet@data_ptr_977+1,f,c
  5453                           
  5454                           ;CAN.c: 316: rxBuffer_ptr ++;
  5455  000B8A  4A1B               	infsnz	CANMessageGet@rxBuffer_ptr_976,f,c
  5456  000B8C  2A1C               	incf	CANMessageGet@rxBuffer_ptr_976+1,f,c
  5457  000B8E  4A19               	infsnz	CANMessageGet@i_975,f,c
  5458  000B90  2A1A               	incf	CANMessageGet@i_975+1,f,c
  5459  000B92                     l3095:
  5460  000B92  FFFF               	dw	65535	; assembler added errata NOP
  5461  000B94  EE20 F00C          	lfsr	2,12
  5462  000B98  5010               	movf	CANMessageGet@psMsgObject,w,c
  5463  000B9A  26D9               	addwf	fsr2l,f,c
  5464  000B9C  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5465  000B9E  22DA               	addwfc	fsr2h,f,c
  5466  000BA0  C019  F064         	movff	CANMessageGet@i_975,??_CANMessageGet+4
  5467  000BA4  C01A  F065         	movff	CANMessageGet@i_975+1,??_CANMessageGet+5
  5468  000BA8  0E00               	movlw	0
  5469  000BAA  0100               	movlb	0	; () banked
  5470  000BAC  BF65               	btfsc	(??_CANMessageGet+5)& (0+255),7,b
  5471  000BAE  0EFF               	movlw	255
  5472  000BB0  6F66               	movwf	(??_CANMessageGet+6)& (0+255),b
  5473  000BB2  6F67               	movwf	(??_CANMessageGet+7)& (0+255),b
  5474  000BB4  50DE               	movf	postinc2,w,c
  5475  000BB6  0100               	movlb	0	; () banked
  5476  000BB8  5D64               	subwf	(??_CANMessageGet+4)& (0+255),w,b
  5477  000BBA  50DE               	movf	postinc2,w,c
  5478  000BBC  0100               	movlb	0	; () banked
  5479  000BBE  5965               	subwfb	(??_CANMessageGet+5)& (0+255),w,b
  5480  000BC0  50DE               	movf	postinc2,w,c
  5481  000BC2  0100               	movlb	0	; () banked
  5482  000BC4  5966               	subwfb	(??_CANMessageGet+6)& (0+255),w,b
  5483  000BC6  50DE               	movf	postinc2,w,c
  5484  000BC8  0100               	movlb	0	; () banked
  5485  000BCA  5967               	subwfb	(??_CANMessageGet+7)& (0+255),w,b
  5486  000BCC  A0D8               	btfss	status,0,c
  5487  000BCE  D7D0               	goto	l3087
  5488  000BD0                     l3097:
  5489  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  5490                           
  5491                           ;CAN.c: 317: }
  5492                           ;CAN.c: 318: }
  5493                           ;CAN.c: 320: RXB1CON = (RXB1CON & ~(0x80)) | (0x80 & 0);
  5494  000BD2  CF50 F060          	movff	3920,??_CANMessageGet
  5495  000BD6  0E7F               	movlw	127
  5496  000BD8  0100               	movlb	0	; () banked
  5497  000BDA  1760               	andwf	??_CANMessageGet& (0+255),f,b
  5498  000BDC  C060  FF50         	movff	??_CANMessageGet,3920
  5499  000BE0                     l3099:
  5500  000BE0  FFFF               	dw	65535	; assembler added errata NOP
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;CAN.c: 321: RXMsgFlag = 0x01;
  5504  000BE2  0E01               	movlw	1
  5505  000BE4  6E1F               	movwf	CANMessageGet@RXMsgFlag,c
  5506  000BE6                     l3101:
  5507  000BE6  FFFF               	dw	65535	; assembler added errata NOP
  5508                           
  5509                           ;CAN.c: 322: }
  5510                           ;CAN.c: 328: if (RXMsgFlag == 0x01)
  5511  000BE8  041F               	decf	CANMessageGet@RXMsgFlag,w,c
  5512  000BEA  A4D8               	btfss	status,2,c
  5513  000BEC  D00B               	goto	l408
  5514                           
  5515                           ;CAN.c: 330: {
  5516                           ;CAN.c: 331: RXMsgFlag = 0x00;
  5517  000BEE  0E00               	movlw	0
  5518  000BF0  6E1F               	movwf	CANMessageGet@RXMsgFlag,c
  5519                           
  5520                           ;CAN.c: 333: if(bClrPendingInt)
  5521  000BF2  5012               	movf	CANMessageGet@bClrPendingInt,w,c
  5522  000BF4  B4D8               	btfsc	status,2,c
  5523  000BF6  D006               	goto	l408
  5524                           
  5525                           ;CAN.c: 334: {
  5526                           ;CAN.c: 335: PIR3 = (PIR3 & ~(1<<1)) | (1<<1 & 0);
  5527  000BF8  50A4               	movf	4004,w,c	;volatile
  5528  000BFA  0BFD               	andlw	253
  5529  000BFC  6EA4               	movwf	4004,c	;volatile
  5530                           
  5531                           ;CAN.c: 336: PIR3 = (PIR3 & ~(1<<0)) | (1<<0 & 0);
  5532  000BFE  50A4               	movf	4004,w,c	;volatile
  5533  000C00  0BFE               	andlw	254
  5534  000C02  6EA4               	movwf	4004,c	;volatile
  5535  000C04                     l408:
  5536  000C04  FFFF               	dw	65535	; assembler added errata NOP
  5537  000C06  0012               	return		;funcret
  5538  000C08  FFFF               	dw	65535	; errata NOP
  5539  000C0A                     __end_of_CANMessageGet:
  5540                           	opt stack 0
  5541                           tblptru	equ	0xFF8
  5542                           tblptrh	equ	0xFF7
  5543                           tblptrl	equ	0xFF6
  5544                           tablat	equ	0xFF5
  5545                           intcon	equ	0xFF2
  5546                           indf0	equ	0xFEF
  5547                           postinc0	equ	0xFEE
  5548                           fsr0h	equ	0xFEA
  5549                           fsr0l	equ	0xFE9
  5550                           wreg	equ	0xFE8
  5551                           indf1	equ	0xFE7
  5552                           fsr1h	equ	0xFE2
  5553                           fsr1l	equ	0xFE1
  5554                           indf2	equ	0xFDF
  5555                           postinc2	equ	0xFDE
  5556                           postdec2	equ	0xFDD
  5557                           plusw2	equ	0xFDB
  5558                           fsr2h	equ	0xFDA
  5559                           fsr2l	equ	0xFD9
  5560                           status	equ	0xFD8
  5561                           
  5562 ;; *************** function _AvgMeasure *****************
  5563 ;; Defined at:
  5564 ;;		line 34 in file "measure.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  average_dist    2    7[BANK0 ] unsigned int 
  5569 ;;  counter         1    6[BANK0 ] unsigned char 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  2   50[COMRAM] unsigned int 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5579 ;;      Params:         2       0       0       0       0       0       0
  5580 ;;      Locals:         0       3       0       0       0       0       0
  5581 ;;      Temps:          1       0       0       0       0       0       0
  5582 ;;      Totals:         3       3       0       0       0       0       0
  5583 ;;Total ram usage:        6 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    4
  5586 ;; This function calls:
  5587 ;;		_Hcsr04_Trigger
  5588 ;;		___ftdiv
  5589 ;;		___fttol
  5590 ;;		___lwdiv
  5591 ;;		___lwtoft
  5592 ;; This function is called by:
  5593 ;;		_main
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text24
  5598  00193E                     __ptext24:
  5599                           	opt stack 0
  5600  00193E                     _AvgMeasure:
  5601                           	opt stack 0
  5602  00193E  FFFF               	dw	65535	; assembler added errata NOP
  5603                           
  5604                           ;measure.c: 36: uint16_t average_dist = 0;
  5605                           
  5606                           ;incstack = 0
  5607  001940  0E00               	movlw	0
  5608  001942  0100               	movlb	0	; () banked
  5609  001944  6F68               	movwf	(AvgMeasure@average_dist+1)& (0+255),b
  5610  001946  0E00               	movlw	0
  5611  001948  6F67               	movwf	AvgMeasure@average_dist& (0+255),b
  5612                           
  5613                           ;measure.c: 37: uint8_t counter = 0;
  5614  00194A  0E00               	movlw	0
  5615  00194C  0100               	movlb	0	; () banked
  5616  00194E  6F66               	movwf	AvgMeasure@counter& (0+255),b
  5617                           
  5618                           ;measure.c: 39: while(counter<10)
  5619  001950  D03A               	goto	l3021
  5620  001952                     l3007:
  5621  001952  FFFF               	dw	65535	; assembler added errata NOP
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;measure.c: 40: {
  5625                           ;measure.c: 43: Hcsr04_Trigger();
  5626  001954  EC36  F011         	call	_Hcsr04_Trigger	;wreg free
  5627                           
  5628                           ;measure.c: 46: _delay((unsigned long)((20)*(32000000/4000.0)));
  5629  001958  0E9C               	movlw	156
  5630  00195A  6E35               	movwf	??_AvgMeasure& (0+255),c
  5631  00195C  0EF1               	movlw	241
  5632  00195E                     u3147:
  5633  00195E  FFFF               	dw	65535	; errata NOP
  5634  001960  2EE8               	decfsz	wreg,f,c
  5635  001962  D7FD               	bra	u3147
  5636  001964  2E35               	decfsz	??_AvgMeasure& (0+255),f,c
  5637  001966  D7FB               	bra	u3147
  5638  001968  D000               	nop2	
  5639                           
  5640                           ;measure.c: 48: GIE= 0 ;
  5641  00196A  9EF2               	bcf	intcon,7,c	;volatile
  5642                           
  5643                           ;measure.c: 49: distance = TMR1;
  5644  00196C  CFCE F048          	movff	4046,_distance	;volatile
  5645  001970  CFCF F049          	movff	4047,_distance+1	;volatile
  5646                           
  5647                           ;measure.c: 50: GIE = 1;
  5648  001974  8EF2               	bsf	intcon,7,c	;volatile
  5649                           
  5650                           ;measure.c: 52: distance = distance/58.82;
  5651  001976  0E48               	movlw	72
  5652  001978  6E1E               	movwf	___ftdiv@f2,c
  5653  00197A  0E6B               	movlw	107
  5654  00197C  6E1F               	movwf	___ftdiv@f2+1,c
  5655  00197E  0E42               	movlw	66
  5656  001980  6E20               	movwf	___ftdiv@f2+2,c
  5657  001982  C048  F018         	movff	_distance,___lwtoft@c
  5658  001986  C049  F019         	movff	_distance+1,___lwtoft@c+1
  5659  00198A  EC03  F011         	call	___lwtoft	;wreg free
  5660  00198E  C018  F01B         	movff	?___lwtoft,___ftdiv@f1
  5661  001992  C019  F01C         	movff	?___lwtoft+1,___ftdiv@f1+1
  5662  001996  C01A  F01D         	movff	?___lwtoft+2,___ftdiv@f1+2
  5663  00199A  ECCA  F00B         	call	___ftdiv	;wreg free
  5664  00199E  C01B  F02A         	movff	?___ftdiv,___fttol@f1
  5665  0019A2  C01C  F02B         	movff	?___ftdiv+1,___fttol@f1+1
  5666  0019A6  C01D  F02C         	movff	?___ftdiv+2,___fttol@f1+2
  5667  0019AA  EC42  F00B         	call	___fttol	;wreg free
  5668  0019AE  C02A  F048         	movff	?___fttol,_distance
  5669  0019B2  C02B  F049         	movff	?___fttol+1,_distance+1
  5670                           
  5671                           ;measure.c: 53: average_dist += distance;
  5672  0019B6  5048               	movf	_distance,w,c
  5673  0019B8  0100               	movlb	0	; () banked
  5674  0019BA  2767               	addwf	AvgMeasure@average_dist& (0+255),f,b
  5675  0019BC  5049               	movf	_distance+1,w,c
  5676  0019BE  0100               	movlb	0	; () banked
  5677  0019C0  2368               	addwfc	(AvgMeasure@average_dist+1)& (0+255),f,b
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;measure.c: 54: counter++;
  5681  0019C2  0100               	movlb	0	; () banked
  5682  0019C4  2B66               	incf	AvgMeasure@counter& (0+255),f,b
  5683  0019C6                     l3021:
  5684  0019C6  FFFF               	dw	65535	; assembler added errata NOP
  5685                           
  5686                           ; BSR set to: 0
  5687  0019C8  0E09               	movlw	9
  5688  0019CA  0100               	movlb	0	; () banked
  5689  0019CC  6566               	cpfsgt	AvgMeasure@counter& (0+255),b
  5690  0019CE  D7C1               	goto	l3007
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;measure.c: 58: }
  5694                           ;measure.c: 60: average_dist /= counter ;
  5695                           
  5696                           ; BSR set to: 0
  5697  0019D0  C067  F010         	movff	AvgMeasure@average_dist,___lwdiv@dividend
  5698  0019D4  C068  F011         	movff	AvgMeasure@average_dist+1,___lwdiv@dividend+1
  5699  0019D8  C066  F012         	movff	AvgMeasure@counter,___lwdiv@divisor
  5700  0019DC  6A13               	clrf	___lwdiv@divisor+1,c
  5701  0019DE  ECEE  F00F         	call	___lwdiv	;wreg free
  5702  0019E2  C010  F067         	movff	?___lwdiv,AvgMeasure@average_dist
  5703  0019E6  C011  F068         	movff	?___lwdiv+1,AvgMeasure@average_dist+1
  5704                           
  5705                           ;measure.c: 62: return average_dist;
  5706  0019EA  C067  F033         	movff	AvgMeasure@average_dist,?_AvgMeasure
  5707  0019EE  C068  F034         	movff	AvgMeasure@average_dist+1,?_AvgMeasure+1
  5708  0019F2  0012               	return		;funcret
  5709  0019F4  FFFF               	dw	65535	; errata NOP
  5710  0019F6                     __end_of_AvgMeasure:
  5711                           	opt stack 0
  5712                           tblptru	equ	0xFF8
  5713                           tblptrh	equ	0xFF7
  5714                           tblptrl	equ	0xFF6
  5715                           tablat	equ	0xFF5
  5716                           intcon	equ	0xFF2
  5717                           indf0	equ	0xFEF
  5718                           postinc0	equ	0xFEE
  5719                           fsr0h	equ	0xFEA
  5720                           fsr0l	equ	0xFE9
  5721                           wreg	equ	0xFE8
  5722                           indf1	equ	0xFE7
  5723                           fsr1h	equ	0xFE2
  5724                           fsr1l	equ	0xFE1
  5725                           indf2	equ	0xFDF
  5726                           postinc2	equ	0xFDE
  5727                           postdec2	equ	0xFDD
  5728                           plusw2	equ	0xFDB
  5729                           fsr2h	equ	0xFDA
  5730                           fsr2l	equ	0xFD9
  5731                           status	equ	0xFD8
  5732                           
  5733 ;; *************** function ___lwtoft *****************
  5734 ;; Defined at:
  5735 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;  c               2   23[COMRAM] unsigned int 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;		None
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  3   23[COMRAM] float 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0, cstack
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5749 ;;      Params:         3       0       0       0       0       0       0
  5750 ;;      Locals:         0       0       0       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0
  5752 ;;      Totals:         3       0       0       0       0       0       0
  5753 ;;Total ram usage:        3 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    3
  5756 ;; This function calls:
  5757 ;;		___ftpack
  5758 ;; This function is called by:
  5759 ;;		_AvgMeasure
  5760 ;;		_measure
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text25
  5765  002206                     __ptext25:
  5766                           	opt stack 0
  5767  002206                     ___lwtoft:
  5768                           	opt stack 0
  5769  002206  FFFF               	dw	65535	; assembler added errata NOP
  5770                           
  5771                           ;incstack = 0
  5772  002208  C018  F010         	movff	___lwtoft@c,___ftpack@arg
  5773  00220C  C019  F011         	movff	___lwtoft@c+1,___ftpack@arg+1
  5774  002210  6A12               	clrf	___ftpack@arg+2,c
  5775  002212  0E8E               	movlw	142
  5776  002214  6E13               	movwf	___ftpack@exp,c
  5777  002216  0E00               	movlw	0
  5778  002218  6E14               	movwf	___ftpack@sign,c
  5779  00221A  EC3D  F00C         	call	___ftpack	;wreg free
  5780  00221E  C010  F018         	movff	?___ftpack,?___lwtoft
  5781  002222  C011  F019         	movff	?___ftpack+1,?___lwtoft+1
  5782  002226  C012  F01A         	movff	?___ftpack+2,?___lwtoft+2
  5783  00222A  0012               	return		;funcret
  5784  00222C  FFFF               	dw	65535	; errata NOP
  5785  00222E                     __end_of___lwtoft:
  5786                           	opt stack 0
  5787                           tblptru	equ	0xFF8
  5788                           tblptrh	equ	0xFF7
  5789                           tblptrl	equ	0xFF6
  5790                           tablat	equ	0xFF5
  5791                           intcon	equ	0xFF2
  5792                           indf0	equ	0xFEF
  5793                           postinc0	equ	0xFEE
  5794                           fsr0h	equ	0xFEA
  5795                           fsr0l	equ	0xFE9
  5796                           wreg	equ	0xFE8
  5797                           indf1	equ	0xFE7
  5798                           fsr1h	equ	0xFE2
  5799                           fsr1l	equ	0xFE1
  5800                           indf2	equ	0xFDF
  5801                           postinc2	equ	0xFDE
  5802                           postdec2	equ	0xFDD
  5803                           plusw2	equ	0xFDB
  5804                           fsr2h	equ	0xFDA
  5805                           fsr2l	equ	0xFD9
  5806                           status	equ	0xFD8
  5807                           
  5808 ;; *************** function ___lwdiv *****************
  5809 ;; Defined at:
  5810 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  dividend        2   15[COMRAM] unsigned int 
  5813 ;;  divisor         2   17[COMRAM] unsigned int 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  quotient        2   20[COMRAM] unsigned int 
  5816 ;;  counter         1   19[COMRAM] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  2   15[COMRAM] unsigned int 
  5819 ;; Registers used:
  5820 ;;		wreg, status,2, status,0
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5826 ;;      Params:         4       0       0       0       0       0       0
  5827 ;;      Locals:         3       0       0       0       0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0
  5829 ;;      Totals:         7       0       0       0       0       0       0
  5830 ;;Total ram usage:        7 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:    2
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_itoa_new
  5837 ;;		_main
  5838 ;;		_AvgMeasure
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text26
  5843  001FDC                     __ptext26:
  5844                           	opt stack 0
  5845  001FDC                     ___lwdiv:
  5846                           	opt stack 0
  5847  001FDC  FFFF               	dw	65535	; assembler added errata NOP
  5848                           
  5849                           ;incstack = 0
  5850  001FDE  0E00               	movlw	0
  5851  001FE0  6E16               	movwf	___lwdiv@quotient+1,c
  5852  001FE2  0E00               	movlw	0
  5853  001FE4  6E15               	movwf	___lwdiv@quotient,c
  5854  001FE6  5012               	movf	___lwdiv@divisor,w,c
  5855  001FE8  1013               	iorwf	___lwdiv@divisor+1,w,c
  5856  001FEA  B4D8               	btfsc	status,2,c
  5857  001FEC  D020               	goto	l944
  5858  001FEE  0E01               	movlw	1
  5859  001FF0  6E14               	movwf	___lwdiv@counter,c
  5860  001FF2  D005               	goto	l2975
  5861  001FF4                     l2973:
  5862  001FF4  FFFF               	dw	65535	; assembler added errata NOP
  5863  001FF6  90D8               	bcf	status,0,c
  5864  001FF8  3612               	rlcf	___lwdiv@divisor,f,c
  5865  001FFA  3613               	rlcf	___lwdiv@divisor+1,f,c
  5866  001FFC  2A14               	incf	___lwdiv@counter,f,c
  5867  001FFE                     l2975:
  5868  001FFE  FFFF               	dw	65535	; assembler added errata NOP
  5869  002000  AE13               	btfss	___lwdiv@divisor+1,7,c
  5870  002002  D7F8               	goto	l2973
  5871  002004                     l2977:
  5872  002004  FFFF               	dw	65535	; assembler added errata NOP
  5873  002006  90D8               	bcf	status,0,c
  5874  002008  3615               	rlcf	___lwdiv@quotient,f,c
  5875  00200A  3616               	rlcf	___lwdiv@quotient+1,f,c
  5876  00200C  5012               	movf	___lwdiv@divisor,w,c
  5877  00200E  5C10               	subwf	___lwdiv@dividend,w,c
  5878  002010  5013               	movf	___lwdiv@divisor+1,w,c
  5879  002012  5811               	subwfb	___lwdiv@dividend+1,w,c
  5880  002014  A0D8               	btfss	status,0,c
  5881  002016  D005               	goto	l2985
  5882  002018  5012               	movf	___lwdiv@divisor,w,c
  5883  00201A  5E10               	subwf	___lwdiv@dividend,f,c
  5884  00201C  5013               	movf	___lwdiv@divisor+1,w,c
  5885  00201E  5A11               	subwfb	___lwdiv@dividend+1,f,c
  5886  002020  8015               	bsf	___lwdiv@quotient,0,c
  5887  002022                     l2985:
  5888  002022  FFFF               	dw	65535	; assembler added errata NOP
  5889  002024  90D8               	bcf	status,0,c
  5890  002026  3213               	rrcf	___lwdiv@divisor+1,f,c
  5891  002028  3212               	rrcf	___lwdiv@divisor,f,c
  5892  00202A  2E14               	decfsz	___lwdiv@counter,f,c
  5893  00202C  D7EB               	goto	l2977
  5894  00202E                     l944:
  5895  00202E  FFFF               	dw	65535	; assembler added errata NOP
  5896  002030  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
  5897  002034  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5898  002038  0012               	return		;funcret
  5899  00203A  FFFF               	dw	65535	; errata NOP
  5900  00203C                     __end_of___lwdiv:
  5901                           	opt stack 0
  5902                           tblptru	equ	0xFF8
  5903                           tblptrh	equ	0xFF7
  5904                           tblptrl	equ	0xFF6
  5905                           tablat	equ	0xFF5
  5906                           intcon	equ	0xFF2
  5907                           indf0	equ	0xFEF
  5908                           postinc0	equ	0xFEE
  5909                           fsr0h	equ	0xFEA
  5910                           fsr0l	equ	0xFE9
  5911                           wreg	equ	0xFE8
  5912                           indf1	equ	0xFE7
  5913                           fsr1h	equ	0xFE2
  5914                           fsr1l	equ	0xFE1
  5915                           indf2	equ	0xFDF
  5916                           postinc2	equ	0xFDE
  5917                           postdec2	equ	0xFDD
  5918                           plusw2	equ	0xFDB
  5919                           fsr2h	equ	0xFDA
  5920                           fsr2l	equ	0xFD9
  5921                           status	equ	0xFD8
  5922                           
  5923 ;; *************** function ___fttol *****************
  5924 ;; Defined at:
  5925 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  f1              3   41[COMRAM] float 
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;  lval            4    1[BANK0 ] unsigned long 
  5930 ;;  exp1            1    5[BANK0 ] unsigned char 
  5931 ;;  sign1           1    0[BANK0 ] unsigned char 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  4   41[COMRAM] long 
  5934 ;; Registers used:
  5935 ;;		wreg, status,2, status,0
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5941 ;;      Params:         4       0       0       0       0       0       0
  5942 ;;      Locals:         0       6       0       0       0       0       0
  5943 ;;      Temps:          5       0       0       0       0       0       0
  5944 ;;      Totals:         9       6       0       0       0       0       0
  5945 ;;Total ram usage:       15 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    2
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_AvgMeasure
  5952 ;;		_measure
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text27
  5957  001684                     __ptext27:
  5958                           	opt stack 0
  5959  001684                     ___fttol:
  5960                           	opt stack 0
  5961  001684  FFFF               	dw	65535	; assembler added errata NOP
  5962                           
  5963                           ;incstack = 0
  5964  001686  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  5965  00168A  6A2F               	clrf	(??___fttol+1)& (0+255),c
  5966  00168C  6A30               	clrf	(??___fttol+2)& (0+255),c
  5967  00168E  342B               	rlcf	___fttol@f1+1,w,c
  5968  001690  362E               	rlcf	??___fttol& (0+255),f,c
  5969  001692  E301               	bnc	u2691
  5970  001694  802F               	bsf	(??___fttol+1)& (0+255),0,c
  5971  001696                     u2691:
  5972  001696  502E               	movf	??___fttol,w,c
  5973  001698  0100               	movlb	0	; () banked
  5974  00169A  6F65               	movwf	___fttol@exp1& (0+255),b
  5975  00169C  0100               	movlb	0	; () banked
  5976  00169E  5165               	movf	___fttol@exp1& (0+255),w,b
  5977  0016A0  B4D8               	btfsc	status,2,c
  5978  0016A2  D044               	goto	l2951
  5979                           
  5980                           ; BSR set to: 0
  5981                           
  5982                           ; BSR set to: 0
  5983                           
  5984                           ; BSR set to: 0
  5985                           
  5986                           ; BSR set to: 0
  5987  0016A4  0E17               	movlw	23
  5988  0016A6  6E2E               	movwf	??___fttol& (0+255),c
  5989  0016A8  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  5990  0016AC  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  5991  0016B0  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  5992  0016B4  282E               	incf	??___fttol,w,c
  5993  0016B6  6E32               	movwf	(??___fttol+4)& (0+255),c
  5994  0016B8  D005               	goto	u2710
  5995  0016BA                     u2715:
  5996  0016BA  FFFF               	dw	65535	; assembler added errata NOP
  5997  0016BC  90D8               	bcf	status,0,c
  5998  0016BE  3231               	rrcf	??___fttol+3,f,c
  5999  0016C0  3230               	rrcf	??___fttol+2,f,c
  6000  0016C2  322F               	rrcf	??___fttol+1,f,c
  6001  0016C4                     u2710:
  6002  0016C4  FFFF               	dw	65535	; assembler added errata NOP
  6003  0016C6  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
  6004  0016C8  D7F8               	goto	u2715
  6005  0016CA  502F               	movf	??___fttol+1,w,c
  6006  0016CC  0100               	movlb	0	; () banked
  6007  0016CE  6F60               	movwf	___fttol@sign1& (0+255),b
  6008                           
  6009                           ; BSR set to: 0
  6010  0016D0  8E2B               	bsf	___fttol@f1+1,7,c
  6011                           
  6012                           ; BSR set to: 0
  6013  0016D2  0EFF               	movlw	255
  6014  0016D4  162A               	andwf	___fttol@f1,f,c
  6015  0016D6  0EFF               	movlw	255
  6016  0016D8  162B               	andwf	___fttol@f1+1,f,c
  6017  0016DA  0E00               	movlw	0
  6018  0016DC  162C               	andwf	___fttol@f1+2,f,c
  6019                           
  6020                           ; BSR set to: 0
  6021  0016DE  502A               	movf	___fttol@f1,w,c
  6022  0016E0  0100               	movlb	0	; () banked
  6023  0016E2  6F61               	movwf	___fttol@lval& (0+255),b
  6024  0016E4  502B               	movf	___fttol@f1+1,w,c
  6025  0016E6  0100               	movlb	0	; () banked
  6026  0016E8  6F62               	movwf	(___fttol@lval+1)& (0+255),b
  6027  0016EA  502C               	movf	___fttol@f1+2,w,c
  6028  0016EC  0100               	movlb	0	; () banked
  6029  0016EE  6F63               	movwf	(___fttol@lval+2)& (0+255),b
  6030  0016F0  0100               	movlb	0	; () banked
  6031  0016F2  6B64               	clrf	(___fttol@lval+3)& (0+255),b
  6032                           
  6033                           ; BSR set to: 0
  6034  0016F4  0E8E               	movlw	142
  6035  0016F6  0100               	movlb	0	; () banked
  6036  0016F8  5F65               	subwf	___fttol@exp1& (0+255),f,b
  6037                           
  6038                           ; BSR set to: 0
  6039  0016FA  0100               	movlb	0	; () banked
  6040  0016FC  AF65               	btfss	___fttol@exp1& (0+255),7,b
  6041  0016FE  D011               	goto	l2949
  6042                           
  6043                           ; BSR set to: 0
  6044  001700  0100               	movlb	0	; () banked
  6045  001702  5165               	movf	___fttol@exp1& (0+255),w,b
  6046  001704  0A80               	xorlw	128
  6047  001706  0F8F               	addlw	143
  6048  001708  A0D8               	btfss	status,0,c
  6049  00170A  D010               	goto	l2951
  6050  00170C                     l2945:
  6051  00170C  FFFF               	dw	65535	; assembler added errata NOP
  6052                           
  6053                           ; BSR set to: 0
  6054  00170E  0100               	movlb	0	; () banked
  6055  001710  90D8               	bcf	status,0,c
  6056  001712  3364               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6057  001714  3363               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6058  001716  3362               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6059  001718  3361               	rrcf	___fttol@lval& (0+255),f,b
  6060                           
  6061                           ; BSR set to: 0
  6062  00171A  0100               	movlb	0	; () banked
  6063  00171C  3F65               	incfsz	___fttol@exp1& (0+255),f,b
  6064  00171E  D7F6               	goto	l2945
  6065                           
  6066                           ; BSR set to: 0
  6067  001720  D01E               	goto	l2959
  6068  001722                     l2949:
  6069  001722  FFFF               	dw	65535	; assembler added errata NOP
  6070                           
  6071                           ; BSR set to: 0
  6072  001724  0E17               	movlw	23
  6073  001726  0100               	movlb	0	; () banked
  6074  001728  6565               	cpfsgt	___fttol@exp1& (0+255),b
  6075  00172A  D013               	goto	l2957
  6076  00172C                     l2951:
  6077  00172C  FFFF               	dw	65535	; assembler added errata NOP
  6078                           
  6079                           ; BSR set to: 0
  6080  00172E  0E00               	movlw	0
  6081  001730  6E2A               	movwf	?___fttol,c
  6082  001732  0E00               	movlw	0
  6083  001734  6E2B               	movwf	?___fttol+1,c
  6084  001736  0E00               	movlw	0
  6085  001738  6E2C               	movwf	?___fttol+2,c
  6086  00173A  0E00               	movlw	0
  6087  00173C  6E2D               	movwf	?___fttol+3,c
  6088                           
  6089                           ; BSR set to: 0
  6090  00173E  D027               	goto	l857
  6091  001740                     l2955:
  6092  001740  FFFF               	dw	65535	; assembler added errata NOP
  6093                           
  6094                           ; BSR set to: 0
  6095  001742  0100               	movlb	0	; () banked
  6096  001744  90D8               	bcf	status,0,c
  6097  001746  3761               	rlcf	___fttol@lval& (0+255),f,b
  6098  001748  3762               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6099  00174A  3763               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6100  00174C  3764               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6101  00174E  0100               	movlb	0	; () banked
  6102  001750  0765               	decf	___fttol@exp1& (0+255),f,b
  6103  001752                     l2957:
  6104  001752  FFFF               	dw	65535	; assembler added errata NOP
  6105                           
  6106                           ; BSR set to: 0
  6107  001754  0100               	movlb	0	; () banked
  6108  001756  5165               	movf	___fttol@exp1& (0+255),w,b
  6109  001758  0100               	movlb	0	; () banked
  6110  00175A  A4D8               	btfss	status,2,c
  6111  00175C  D7F1               	goto	l2955
  6112  00175E                     l2959:
  6113  00175E  FFFF               	dw	65535	; assembler added errata NOP
  6114                           
  6115                           ; BSR set to: 0
  6116  001760  0100               	movlb	0	; () banked
  6117  001762  5160               	movf	___fttol@sign1& (0+255),w,b
  6118  001764  0100               	movlb	0	; () banked
  6119  001766  B4D8               	btfsc	status,2,c
  6120  001768  D009               	goto	l2963
  6121                           
  6122                           ; BSR set to: 0
  6123  00176A  0100               	movlb	0	; () banked
  6124  00176C  1F64               	comf	(___fttol@lval+3)& (0+255),f,b
  6125  00176E  1F63               	comf	(___fttol@lval+2)& (0+255),f,b
  6126  001770  1F62               	comf	(___fttol@lval+1)& (0+255),f,b
  6127  001772  6D61               	negf	___fttol@lval& (0+255),b
  6128  001774  0E00               	movlw	0
  6129  001776  2362               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6130  001778  2363               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6131  00177A  2364               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6132  00177C                     l2963:
  6133  00177C  FFFF               	dw	65535	; assembler added errata NOP
  6134                           
  6135                           ; BSR set to: 0
  6136  00177E  C061  F02A         	movff	___fttol@lval,?___fttol
  6137  001782  C062  F02B         	movff	___fttol@lval+1,?___fttol+1
  6138  001786  C063  F02C         	movff	___fttol@lval+2,?___fttol+2
  6139  00178A  C064  F02D         	movff	___fttol@lval+3,?___fttol+3
  6140  00178E                     l857:
  6141  00178E  FFFF               	dw	65535	; assembler added errata NOP
  6142                           
  6143                           ; BSR set to: 0
  6144  001790  0012               	return		;funcret
  6145  001792  FFFF               	dw	65535	; errata NOP
  6146  001794                     __end_of___fttol:
  6147                           	opt stack 0
  6148                           tblptru	equ	0xFF8
  6149                           tblptrh	equ	0xFF7
  6150                           tblptrl	equ	0xFF6
  6151                           tablat	equ	0xFF5
  6152                           intcon	equ	0xFF2
  6153                           indf0	equ	0xFEF
  6154                           postinc0	equ	0xFEE
  6155                           fsr0h	equ	0xFEA
  6156                           fsr0l	equ	0xFE9
  6157                           wreg	equ	0xFE8
  6158                           indf1	equ	0xFE7
  6159                           fsr1h	equ	0xFE2
  6160                           fsr1l	equ	0xFE1
  6161                           indf2	equ	0xFDF
  6162                           postinc2	equ	0xFDE
  6163                           postdec2	equ	0xFDD
  6164                           plusw2	equ	0xFDB
  6165                           fsr2h	equ	0xFDA
  6166                           fsr2l	equ	0xFD9
  6167                           status	equ	0xFD8
  6168                           
  6169 ;; *************** function ___ftdiv *****************
  6170 ;; Defined at:
  6171 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  f1              3   26[COMRAM] float 
  6174 ;;  f2              3   29[COMRAM] float 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  f3              3   36[COMRAM] float 
  6177 ;;  sign            1   40[COMRAM] unsigned char 
  6178 ;;  exp             1   39[COMRAM] unsigned char 
  6179 ;;  cntr            1   35[COMRAM] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  3   26[COMRAM] float 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6189 ;;      Params:         6       0       0       0       0       0       0
  6190 ;;      Locals:         6       0       0       0       0       0       0
  6191 ;;      Temps:          3       0       0       0       0       0       0
  6192 ;;      Totals:        15       0       0       0       0       0       0
  6193 ;;Total ram usage:       15 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    3
  6196 ;; This function calls:
  6197 ;;		___ftpack
  6198 ;; This function is called by:
  6199 ;;		_AvgMeasure
  6200 ;;		_measure
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text28
  6205  001794                     __ptext28:
  6206                           	opt stack 0
  6207  001794                     ___ftdiv:
  6208                           	opt stack 0
  6209  001794  FFFF               	dw	65535	; assembler added errata NOP
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;incstack = 0
  6213  001796  C01D  F021         	movff	___ftdiv@f1+2,??___ftdiv
  6214  00179A  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  6215  00179C  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  6216  00179E  341C               	rlcf	___ftdiv@f1+1,w,c
  6217  0017A0  3621               	rlcf	??___ftdiv& (0+255),f,c
  6218  0017A2  E301               	bnc	u2641
  6219  0017A4  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  6220  0017A6                     u2641:
  6221  0017A6  5021               	movf	??___ftdiv,w,c
  6222  0017A8  6E28               	movwf	___ftdiv@exp,c
  6223  0017AA  5028               	movf	___ftdiv@exp,w,c
  6224  0017AC  B4D8               	btfsc	status,2,c
  6225  0017AE  D00D               	goto	l2883
  6226  0017B0  C020  F021         	movff	___ftdiv@f2+2,??___ftdiv
  6227  0017B4  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  6228  0017B6  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  6229  0017B8  341F               	rlcf	___ftdiv@f2+1,w,c
  6230  0017BA  3621               	rlcf	??___ftdiv& (0+255),f,c
  6231  0017BC  E301               	bnc	u2661
  6232  0017BE  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  6233  0017C0                     u2661:
  6234  0017C0  5021               	movf	??___ftdiv,w,c
  6235  0017C2  6E29               	movwf	___ftdiv@sign,c
  6236  0017C4  5029               	movf	___ftdiv@sign,w,c
  6237  0017C6  A4D8               	btfss	status,2,c
  6238  0017C8  D008               	goto	l2887
  6239  0017CA                     l2883:
  6240  0017CA  FFFF               	dw	65535	; assembler added errata NOP
  6241  0017CC  0E00               	movlw	0
  6242  0017CE  6E1B               	movwf	?___ftdiv,c
  6243  0017D0  0E00               	movlw	0
  6244  0017D2  6E1C               	movwf	?___ftdiv+1,c
  6245  0017D4  0E00               	movlw	0
  6246  0017D6  6E1D               	movwf	?___ftdiv+2,c
  6247  0017D8  D04D               	goto	l821
  6248  0017DA                     l2887:
  6249  0017DA  FFFF               	dw	65535	; assembler added errata NOP
  6250  0017DC  0E00               	movlw	0
  6251  0017DE  6E25               	movwf	___ftdiv@f3,c
  6252  0017E0  0E00               	movlw	0
  6253  0017E2  6E26               	movwf	___ftdiv@f3+1,c
  6254  0017E4  0E00               	movlw	0
  6255  0017E6  6E27               	movwf	___ftdiv@f3+2,c
  6256  0017E8  5029               	movf	___ftdiv@sign,w,c
  6257  0017EA  0F89               	addlw	137
  6258  0017EC  5E28               	subwf	___ftdiv@exp,f,c
  6259  0017EE  C01D  F029         	movff	___ftdiv@f1+2,___ftdiv@sign
  6260  0017F2  5020               	movf	___ftdiv@f2+2,w,c
  6261  0017F4  1A29               	xorwf	___ftdiv@sign,f,c
  6262  0017F6  0E80               	movlw	128
  6263  0017F8  1629               	andwf	___ftdiv@sign,f,c
  6264  0017FA  8E1C               	bsf	___ftdiv@f1+1,7,c
  6265  0017FC  0EFF               	movlw	255
  6266  0017FE  161B               	andwf	___ftdiv@f1,f,c
  6267  001800  0EFF               	movlw	255
  6268  001802  161C               	andwf	___ftdiv@f1+1,f,c
  6269  001804  0E00               	movlw	0
  6270  001806  161D               	andwf	___ftdiv@f1+2,f,c
  6271  001808  8E1F               	bsf	___ftdiv@f2+1,7,c
  6272  00180A  0EFF               	movlw	255
  6273  00180C  161E               	andwf	___ftdiv@f2,f,c
  6274  00180E  0EFF               	movlw	255
  6275  001810  161F               	andwf	___ftdiv@f2+1,f,c
  6276  001812  0E00               	movlw	0
  6277  001814  1620               	andwf	___ftdiv@f2+2,f,c
  6278  001816  0E18               	movlw	24
  6279  001818  6E24               	movwf	___ftdiv@cntr,c
  6280  00181A                     l2907:
  6281  00181A  FFFF               	dw	65535	; assembler added errata NOP
  6282  00181C  90D8               	bcf	status,0,c
  6283  00181E  3625               	rlcf	___ftdiv@f3,f,c
  6284  001820  3626               	rlcf	___ftdiv@f3+1,f,c
  6285  001822  3627               	rlcf	___ftdiv@f3+2,f,c
  6286  001824  501E               	movf	___ftdiv@f2,w,c
  6287  001826  5C1B               	subwf	___ftdiv@f1,w,c
  6288  001828  501F               	movf	___ftdiv@f2+1,w,c
  6289  00182A  581C               	subwfb	___ftdiv@f1+1,w,c
  6290  00182C  5020               	movf	___ftdiv@f2+2,w,c
  6291  00182E  581D               	subwfb	___ftdiv@f1+2,w,c
  6292  001830  A0D8               	btfss	status,0,c
  6293  001832  D007               	goto	l824
  6294  001834  501E               	movf	___ftdiv@f2,w,c
  6295  001836  5E1B               	subwf	___ftdiv@f1,f,c
  6296  001838  501F               	movf	___ftdiv@f2+1,w,c
  6297  00183A  5A1C               	subwfb	___ftdiv@f1+1,f,c
  6298  00183C  5020               	movf	___ftdiv@f2+2,w,c
  6299  00183E  5A1D               	subwfb	___ftdiv@f1+2,f,c
  6300  001840  8025               	bsf	___ftdiv@f3,0,c
  6301  001842                     l824:
  6302  001842  FFFF               	dw	65535	; assembler added errata NOP
  6303  001844  90D8               	bcf	status,0,c
  6304  001846  361B               	rlcf	___ftdiv@f1,f,c
  6305  001848  361C               	rlcf	___ftdiv@f1+1,f,c
  6306  00184A  361D               	rlcf	___ftdiv@f1+2,f,c
  6307  00184C  2E24               	decfsz	___ftdiv@cntr,f,c
  6308  00184E  D7E5               	goto	l2907
  6309  001850  C025  F010         	movff	___ftdiv@f3,___ftpack@arg
  6310  001854  C026  F011         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6311  001858  C027  F012         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6312  00185C  C028  F013         	movff	___ftdiv@exp,___ftpack@exp
  6313  001860  C029  F014         	movff	___ftdiv@sign,___ftpack@sign
  6314  001864  EC3D  F00C         	call	___ftpack	;wreg free
  6315  001868  C010  F01B         	movff	?___ftpack,?___ftdiv
  6316  00186C  C011  F01C         	movff	?___ftpack+1,?___ftdiv+1
  6317  001870  C012  F01D         	movff	?___ftpack+2,?___ftdiv+2
  6318  001874                     l821:
  6319  001874  FFFF               	dw	65535	; assembler added errata NOP
  6320  001876  0012               	return		;funcret
  6321  001878  FFFF               	dw	65535	; errata NOP
  6322  00187A                     __end_of___ftdiv:
  6323                           	opt stack 0
  6324                           tblptru	equ	0xFF8
  6325                           tblptrh	equ	0xFF7
  6326                           tblptrl	equ	0xFF6
  6327                           tablat	equ	0xFF5
  6328                           intcon	equ	0xFF2
  6329                           indf0	equ	0xFEF
  6330                           postinc0	equ	0xFEE
  6331                           fsr0h	equ	0xFEA
  6332                           fsr0l	equ	0xFE9
  6333                           wreg	equ	0xFE8
  6334                           indf1	equ	0xFE7
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           plusw2	equ	0xFDB
  6341                           fsr2h	equ	0xFDA
  6342                           fsr2l	equ	0xFD9
  6343                           status	equ	0xFD8
  6344                           
  6345 ;; *************** function ___ftpack *****************
  6346 ;; Defined at:
  6347 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  arg             3   15[COMRAM] unsigned um
  6350 ;;  exp             1   18[COMRAM] unsigned char 
  6351 ;;  sign            1   19[COMRAM] unsigned char 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  3   15[COMRAM] float 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6363 ;;      Params:         5       0       0       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0
  6365 ;;      Temps:          3       0       0       0       0       0       0
  6366 ;;      Totals:         8       0       0       0       0       0       0
  6367 ;;Total ram usage:        8 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    2
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		___ftdiv
  6374 ;;		___lwtoft
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text29
  6379  00187A                     __ptext29:
  6380                           	opt stack 0
  6381  00187A                     ___ftpack:
  6382                           	opt stack 0
  6383  00187A  FFFF               	dw	65535	; assembler added errata NOP
  6384                           
  6385                           ;incstack = 0
  6386  00187C  5013               	movf	___ftpack@exp,w,c
  6387  00187E  B4D8               	btfsc	status,2,c
  6388  001880  D005               	goto	l2837
  6389  001882  5010               	movf	___ftpack@arg,w,c
  6390  001884  1011               	iorwf	___ftpack@arg+1,w,c
  6391  001886  1012               	iorwf	___ftpack@arg+2,w,c
  6392  001888  A4D8               	btfss	status,2,c
  6393  00188A  D00E               	goto	l2843
  6394  00188C                     l2837:
  6395  00188C  FFFF               	dw	65535	; assembler added errata NOP
  6396  00188E  0E00               	movlw	0
  6397  001890  6E10               	movwf	?___ftpack,c
  6398  001892  0E00               	movlw	0
  6399  001894  6E11               	movwf	?___ftpack+1,c
  6400  001896  0E00               	movlw	0
  6401  001898  6E12               	movwf	?___ftpack+2,c
  6402  00189A  D04E               	goto	l755
  6403  00189C                     l2841:
  6404  00189C  FFFF               	dw	65535	; assembler added errata NOP
  6405  00189E  2A13               	incf	___ftpack@exp,f,c
  6406  0018A0  90D8               	bcf	status,0,c
  6407  0018A2  3212               	rrcf	___ftpack@arg+2,f,c
  6408  0018A4  3211               	rrcf	___ftpack@arg+1,f,c
  6409  0018A6  3210               	rrcf	___ftpack@arg,f,c
  6410  0018A8                     l2843:
  6411  0018A8  FFFF               	dw	65535	; assembler added errata NOP
  6412  0018AA  0E00               	movlw	0
  6413  0018AC  1410               	andwf	___ftpack@arg,w,c
  6414  0018AE  6E15               	movwf	??___ftpack& (0+255),c
  6415  0018B0  0E00               	movlw	0
  6416  0018B2  1411               	andwf	___ftpack@arg+1,w,c
  6417  0018B4  6E16               	movwf	(??___ftpack+1)& (0+255),c
  6418  0018B6  0EFE               	movlw	254
  6419  0018B8  1412               	andwf	___ftpack@arg+2,w,c
  6420  0018BA  6E17               	movwf	(??___ftpack+2)& (0+255),c
  6421  0018BC  5015               	movf	??___ftpack,w,c
  6422  0018BE  1016               	iorwf	??___ftpack+1,w,c
  6423  0018C0  1017               	iorwf	??___ftpack+2,w,c
  6424  0018C2  B4D8               	btfsc	status,2,c
  6425  0018C4  D00D               	goto	l2849
  6426  0018C6  D7EA               	goto	l2841
  6427  0018C8                     l2845:
  6428  0018C8  FFFF               	dw	65535	; assembler added errata NOP
  6429  0018CA  2A13               	incf	___ftpack@exp,f,c
  6430  0018CC  0E01               	movlw	1
  6431  0018CE  2610               	addwf	___ftpack@arg,f,c
  6432  0018D0  0E00               	movlw	0
  6433  0018D2  2211               	addwfc	___ftpack@arg+1,f,c
  6434  0018D4  0E00               	movlw	0
  6435  0018D6  2212               	addwfc	___ftpack@arg+2,f,c
  6436  0018D8  90D8               	bcf	status,0,c
  6437  0018DA  3212               	rrcf	___ftpack@arg+2,f,c
  6438  0018DC  3211               	rrcf	___ftpack@arg+1,f,c
  6439  0018DE  3210               	rrcf	___ftpack@arg,f,c
  6440  0018E0                     l2849:
  6441  0018E0  FFFF               	dw	65535	; assembler added errata NOP
  6442  0018E2  0E00               	movlw	0
  6443  0018E4  1410               	andwf	___ftpack@arg,w,c
  6444  0018E6  6E15               	movwf	??___ftpack& (0+255),c
  6445  0018E8  0E00               	movlw	0
  6446  0018EA  1411               	andwf	___ftpack@arg+1,w,c
  6447  0018EC  6E16               	movwf	(??___ftpack+1)& (0+255),c
  6448  0018EE  0EFF               	movlw	255
  6449  0018F0  1412               	andwf	___ftpack@arg+2,w,c
  6450  0018F2  6E17               	movwf	(??___ftpack+2)& (0+255),c
  6451  0018F4  5015               	movf	??___ftpack,w,c
  6452  0018F6  1016               	iorwf	??___ftpack+1,w,c
  6453  0018F8  1017               	iorwf	??___ftpack+2,w,c
  6454  0018FA  B4D8               	btfsc	status,2,c
  6455  0018FC  D007               	goto	l2853
  6456  0018FE  D7E4               	goto	l2845
  6457  001900                     l2851:
  6458  001900  FFFF               	dw	65535	; assembler added errata NOP
  6459  001902  0613               	decf	___ftpack@exp,f,c
  6460  001904  90D8               	bcf	status,0,c
  6461  001906  3610               	rlcf	___ftpack@arg,f,c
  6462  001908  3611               	rlcf	___ftpack@arg+1,f,c
  6463  00190A  3612               	rlcf	___ftpack@arg+2,f,c
  6464  00190C                     l2853:
  6465  00190C  FFFF               	dw	65535	; assembler added errata NOP
  6466  00190E  BE11               	btfsc	___ftpack@arg+1,7,c
  6467  001910  D003               	goto	l766
  6468  001912  0E02               	movlw	2
  6469  001914  6013               	cpfslt	___ftpack@exp,c
  6470  001916  D7F4               	goto	l2851
  6471  001918                     l766:
  6472  001918  FFFF               	dw	65535	; assembler added errata NOP
  6473  00191A  A013               	btfss	___ftpack@exp,0,c
  6474  00191C  9E11               	bcf	___ftpack@arg+1,7,c
  6475  00191E  90D8               	bcf	status,0,c
  6476  001920  3213               	rrcf	___ftpack@exp,f,c
  6477  001922  5013               	movf	___ftpack@exp,w,c
  6478  001924  1212               	iorwf	___ftpack@arg+2,f,c
  6479  001926  5014               	movf	___ftpack@sign,w,c
  6480  001928  A4D8               	btfss	status,2,c
  6481  00192A  8E12               	bsf	___ftpack@arg+2,7,c
  6482  00192C  C010  F010         	movff	___ftpack@arg,?___ftpack
  6483  001930  C011  F011         	movff	___ftpack@arg+1,?___ftpack+1
  6484  001934  C012  F012         	movff	___ftpack@arg+2,?___ftpack+2
  6485  001938                     l755:
  6486  001938  FFFF               	dw	65535	; assembler added errata NOP
  6487  00193A  0012               	return		;funcret
  6488  00193C  FFFF               	dw	65535	; errata NOP
  6489  00193E                     __end_of___ftpack:
  6490                           	opt stack 0
  6491                           tblptru	equ	0xFF8
  6492                           tblptrh	equ	0xFF7
  6493                           tblptrl	equ	0xFF6
  6494                           tablat	equ	0xFF5
  6495                           intcon	equ	0xFF2
  6496                           indf0	equ	0xFEF
  6497                           postinc0	equ	0xFEE
  6498                           fsr0h	equ	0xFEA
  6499                           fsr0l	equ	0xFE9
  6500                           wreg	equ	0xFE8
  6501                           indf1	equ	0xFE7
  6502                           fsr1h	equ	0xFE2
  6503                           fsr1l	equ	0xFE1
  6504                           indf2	equ	0xFDF
  6505                           postinc2	equ	0xFDE
  6506                           postdec2	equ	0xFDD
  6507                           plusw2	equ	0xFDB
  6508                           fsr2h	equ	0xFDA
  6509                           fsr2l	equ	0xFD9
  6510                           status	equ	0xFD8
  6511                           
  6512 ;; *************** function _Hcsr04_Trigger *****************
  6513 ;; Defined at:
  6514 ;;		line 28 in file "hcsr04.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6528 ;;      Params:         0       0       0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0
  6531 ;;      Totals:         0       0       0       0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    2
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_AvgMeasure
  6539 ;;		_measure
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text30
  6544  00226C                     __ptext30:
  6545                           	opt stack 0
  6546  00226C                     _Hcsr04_Trigger:
  6547                           	opt stack 0
  6548  00226C  FFFF               	dw	65535	; assembler added errata NOP
  6549                           
  6550                           ;hcsr04.c: 30: LATDbits.LD0 = 1;
  6551                           
  6552                           ;incstack = 0
  6553  00226E  808C               	bsf	3980,0,c	;volatile
  6554                           
  6555                           ;hcsr04.c: 31: _delay((unsigned long)((10)*(32000000/4000000.0)));
  6556  002270  0E14               	movlw	20
  6557  002272                     u3157:
  6558  002272  FFFF               	dw	65535	; errata NOP
  6559  002274  2EE8               	decfsz	wreg,f,c
  6560  002276  D7FD               	bra	u3157
  6561                           
  6562                           ;hcsr04.c: 32: LATDbits.LD0 = 0;
  6563  002278  908C               	bcf	3980,0,c	;volatile
  6564  00227A  0012               	return		;funcret
  6565  00227C  FFFF               	dw	65535	; errata NOP
  6566  00227E                     __end_of_Hcsr04_Trigger:
  6567                           	opt stack 0
  6568                           tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           intcon	equ	0xFF2
  6573                           indf0	equ	0xFEF
  6574                           postinc0	equ	0xFEE
  6575                           fsr0h	equ	0xFEA
  6576                           fsr0l	equ	0xFE9
  6577                           wreg	equ	0xFE8
  6578                           indf1	equ	0xFE7
  6579                           fsr1h	equ	0xFE2
  6580                           fsr1l	equ	0xFE1
  6581                           indf2	equ	0xFDF
  6582                           postinc2	equ	0xFDE
  6583                           postdec2	equ	0xFDD
  6584                           plusw2	equ	0xFDB
  6585                           fsr2h	equ	0xFDA
  6586                           fsr2l	equ	0xFD9
  6587                           status	equ	0xFD8
  6588                           
  6589 ;; *************** function _ISR *****************
  6590 ;; Defined at:
  6591 ;;		line 252 in file "main.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;		None
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;		None
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		wreg, status,2, status,0, cstack
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6605 ;;      Params:         0       0       0       0       0       0       0
  6606 ;;      Locals:         0       0       0       0       0       0       0
  6607 ;;      Temps:         14       0       0       0       0       0       0
  6608 ;;      Totals:        14       0       0       0       0       0       0
  6609 ;;Total ram usage:       14 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; Hardware stack levels required when called:    1
  6612 ;; This function calls:
  6613 ;;		_CANIntStatus
  6614 ;;		i2_CANIntClear
  6615 ;; This function is called by:
  6616 ;;		Interrupt level 2
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	intcode
  6621  000008                     __pintcode:
  6622                           	opt stack 0
  6623  000008                     _ISR:
  6624                           	opt stack 0
  6625  000008  FFFF               	dw	65535	; assembler added errata NOP
  6626                           
  6627                           ;incstack = 0
  6628  00000A  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6629  00000C  CFFA F002          	movff	pclath,??_ISR
  6630  000010  CFFB F003          	movff	pclatu,??_ISR+1
  6631  000014  CFE9 F004          	movff	fsr0l,??_ISR+2
  6632  000018  CFEA F005          	movff	fsr0h,??_ISR+3
  6633  00001C  CFE1 F006          	movff	fsr1l,??_ISR+4
  6634  000020  CFE2 F007          	movff	fsr1h,??_ISR+5
  6635  000024  CFD9 F008          	movff	fsr2l,??_ISR+6
  6636  000028  CFDA F009          	movff	fsr2h,??_ISR+7
  6637  00002C  CFF3 F00A          	movff	prodl,??_ISR+8
  6638  000030  CFF4 F00B          	movff	prodh,??_ISR+9
  6639  000034  CFF6 F00C          	movff	tblptrl,??_ISR+10
  6640  000038  CFF7 F00D          	movff	tblptrh,??_ISR+11
  6641  00003C  CFF8 F00E          	movff	tblptru,??_ISR+12
  6642  000040  CFF5 F00F          	movff	tablat,??_ISR+13
  6643                           
  6644                           ;main.c: 256: ui8Status = CANIntStatus();
  6645  000044  ECD0  F010         	call	_CANIntStatus	;wreg free
  6646  000048  6E4E               	movwf	_ui8Status,c	;volatile
  6647                           
  6648                           ;main.c: 259: if( ((ui8Status & 1<<0) == 1<<0) || ((ui8Status & 1<<1) == 1<<1) )
  6649  00004A  A04E               	btfss	_ui8Status,0,c	;volatile
  6650  00004C  B24E               	btfsc	_ui8Status,1,c	;volatile
  6651  00004E  D001               	goto	i2l2807
  6652  000050  D007               	goto	i2l84
  6653  000052                     i2l2807:
  6654  000052  FFFF               	dw	65535	; assembler added errata NOP
  6655                           
  6656                           ;main.c: 260: {
  6657                           ;main.c: 261: bRxMsgFlag = 1;
  6658  000054  0E01               	movlw	1
  6659  000056  0100               	movlb	0	; () banked
  6660  000058  6FB4               	movwf	_bRxMsgFlag& (0+255),b	;volatile
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;main.c: 262: CANIntClear(ui8Status);
  6664  00005A  504E               	movf	_ui8Status,w,c	;volatile
  6665  00005C  ECC8  F00E         	call	i2_CANIntClear
  6666  000060                     i2l84:
  6667  000060  FFFF               	dw	65535	; assembler added errata NOP
  6668                           
  6669                           ;main.c: 269: if( INTCONbits.RBIF == 1 )
  6670  000062  A0F2               	btfss	intcon,0,c	;volatile
  6671  000064  D00C               	goto	i2l88
  6672                           
  6673                           ;main.c: 270: {
  6674                           ;main.c: 272: if( PORTBbits.RB4 == 1 )
  6675  000066  A881               	btfss	3969,4,c	;volatile
  6676  000068  D006               	goto	i2l86
  6677                           
  6678                           ;main.c: 273: {
  6679                           ;main.c: 275: TMR1 = 0;
  6680  00006A  0E00               	movlw	0
  6681  00006C  6ECF               	movwf	4047,c	;volatile
  6682  00006E  0E00               	movlw	0
  6683  000070  6ECE               	movwf	4046,c	;volatile
  6684                           
  6685                           ;main.c: 276: TMR1ON = 1;
  6686  000072  80CD               	bsf	4045,0,c	;volatile
  6687                           
  6688                           ;main.c: 277: }
  6689  000074  D002               	goto	i2l87
  6690  000076                     i2l86:
  6691  000076  FFFF               	dw	65535	; assembler added errata NOP
  6692                           
  6693                           ;main.c: 278: else
  6694                           ;main.c: 279: {
  6695                           ;main.c: 281: TMR1ON = 0;
  6696  000078  90CD               	bcf	4045,0,c	;volatile
  6697  00007A                     i2l87:
  6698  00007A  FFFF               	dw	65535	; assembler added errata NOP
  6699                           
  6700                           ;main.c: 282: }
  6701                           ;main.c: 285: INTCONbits.RBIF = 0;
  6702  00007C  90F2               	bcf	intcon,0,c	;volatile
  6703  00007E                     i2l88:
  6704  00007E  FFFF               	dw	65535	; assembler added errata NOP
  6705                           
  6706                           ;main.c: 291: if( PIR1bits.CCP1IF == 1 )
  6707  000080  A49E               	btfss	3998,2,c	;volatile
  6708  000082  D008               	goto	i2l91
  6709                           
  6710                           ;main.c: 292: {
  6711                           ;main.c: 295: tickcntr++;
  6712  000084  0E01               	movlw	1
  6713  000086  0100               	movlb	0	; () banked
  6714  000088  27AD               	addwf	_tickcntr& (0+255),f,b	;volatile
  6715  00008A  0E00               	movlw	0
  6716  00008C  23AE               	addwfc	(_tickcntr+1)& (0+255),f,b	;volatile
  6717  00008E  23AF               	addwfc	(_tickcntr+2)& (0+255),f,b	;volatile
  6718  000090  23B0               	addwfc	(_tickcntr+3)& (0+255),f,b	;volatile
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;main.c: 298: PIR1bits.CCP1IF = 0;
  6722  000092  949E               	bcf	3998,2,c	;volatile
  6723  000094                     i2l91:
  6724  000094  FFFF               	dw	65535	; assembler added errata NOP
  6725  000096  C00F  FFF5         	movff	??_ISR+13,tablat
  6726  00009A  C00E  FFF8         	movff	??_ISR+12,tblptru
  6727  00009E  C00D  FFF7         	movff	??_ISR+11,tblptrh
  6728  0000A2  C00C  FFF6         	movff	??_ISR+10,tblptrl
  6729  0000A6  C00B  FFF4         	movff	??_ISR+9,prodh
  6730  0000AA  C00A  FFF3         	movff	??_ISR+8,prodl
  6731  0000AE  C009  FFDA         	movff	??_ISR+7,fsr2h
  6732  0000B2  C008  FFD9         	movff	??_ISR+6,fsr2l
  6733  0000B6  C007  FFE2         	movff	??_ISR+5,fsr1h
  6734  0000BA  C006  FFE1         	movff	??_ISR+4,fsr1l
  6735  0000BE  C005  FFEA         	movff	??_ISR+3,fsr0h
  6736  0000C2  C004  FFE9         	movff	??_ISR+2,fsr0l
  6737  0000C6  C003  FFFB         	movff	??_ISR+1,pclatu
  6738  0000CA  C002  FFFA         	movff	??_ISR,pclath
  6739  0000CE  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6740  0000D0  0011               	retfie		f
  6741  0000D2  FFFF               	dw	65535	; errata NOP
  6742  0000D4                     __end_of_ISR:
  6743                           	opt stack 0
  6744                           pclatu	equ	0xFFB
  6745                           pclath	equ	0xFFA
  6746                           tblptru	equ	0xFF8
  6747                           tblptrh	equ	0xFF7
  6748                           tblptrl	equ	0xFF6
  6749                           tablat	equ	0xFF5
  6750                           prodh	equ	0xFF4
  6751                           prodl	equ	0xFF3
  6752                           intcon	equ	0xFF2
  6753                           indf0	equ	0xFEF
  6754                           postinc0	equ	0xFEE
  6755                           fsr0h	equ	0xFEA
  6756                           fsr0l	equ	0xFE9
  6757                           wreg	equ	0xFE8
  6758                           indf1	equ	0xFE7
  6759                           fsr1h	equ	0xFE2
  6760                           fsr1l	equ	0xFE1
  6761                           indf2	equ	0xFDF
  6762                           postinc2	equ	0xFDE
  6763                           postdec2	equ	0xFDD
  6764                           plusw2	equ	0xFDB
  6765                           fsr2h	equ	0xFDA
  6766                           fsr2l	equ	0xFD9
  6767                           status	equ	0xFD8
  6768                           
  6769 ;; *************** function i2_CANIntClear *****************
  6770 ;; Defined at:
  6771 ;;		line 554 in file "CAN.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  type            1    wreg     unsigned char 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  type            1    0[COMRAM] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6785 ;;      Params:         0       0       0       0       0       0       0
  6786 ;;      Locals:         1       0       0       0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0
  6788 ;;      Totals:         1       0       0       0       0       0       0
  6789 ;;Total ram usage:        1 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_ISR
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           	psect	text32
  6799  001D90                     __ptext32:
  6800                           	opt stack 0
  6801  001D90                     i2_CANIntClear:
  6802                           	opt stack 0
  6803  001D90  FFFF               	dw	65535	; assembler added errata NOP
  6804                           
  6805                           ;incstack = 0
  6806                           ;i2CANIntClear@type stored from wreg
  6807  001D92  6E01               	movwf	i2CANIntClear@type,c
  6808                           
  6809                           ;CAN.c: 556: if( (type & 1<<0) == 1 )
  6810  001D94  A001               	btfss	i2CANIntClear@type,0,c
  6811  001D96  D003               	goto	i2l466
  6812                           
  6813                           ;CAN.c: 557: {
  6814                           ;CAN.c: 558: PIR3 = (PIR3 & ~(1<<0)) | (1<<0 & 0);
  6815  001D98  50A4               	movf	4004,w,c	;volatile
  6816  001D9A  0BFE               	andlw	254
  6817  001D9C  6EA4               	movwf	4004,c	;volatile
  6818  001D9E                     i2l466:
  6819  001D9E  FFFF               	dw	65535	; assembler added errata NOP
  6820                           
  6821                           ;CAN.c: 562: if( (type & 1<<1) == 2 )
  6822  001DA0  A201               	btfss	i2CANIntClear@type,1,c
  6823  001DA2  D003               	goto	i2l2709
  6824                           
  6825                           ;CAN.c: 563: {
  6826                           ;CAN.c: 564: PIR3 = (PIR3 & ~(1<<1)) | (1<<1 & 0);
  6827  001DA4  50A4               	movf	4004,w,c	;volatile
  6828  001DA6  0BFD               	andlw	253
  6829  001DA8  6EA4               	movwf	4004,c	;volatile
  6830  001DAA                     i2l2709:
  6831  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  6832                           
  6833                           ;CAN.c: 568: if( (type & 1<<2) == 3 )
  6834  001DAC  5001               	movf	i2CANIntClear@type,w,c
  6835  001DAE  0B04               	andlw	4
  6836  001DB0  0A03               	xorlw	3
  6837  001DB2  A4D8               	btfss	status,2,c
  6838  001DB4  D003               	goto	i2l2713
  6839                           
  6840                           ;CAN.c: 569: {
  6841                           ;CAN.c: 570: PIR3 = (PIR3 & ~(1<<2)) | (1<<2 & 0);
  6842  001DB6  50A4               	movf	4004,w,c	;volatile
  6843  001DB8  0BFB               	andlw	251
  6844  001DBA  6EA4               	movwf	4004,c	;volatile
  6845  001DBC                     i2l2713:
  6846  001DBC  FFFF               	dw	65535	; assembler added errata NOP
  6847                           
  6848                           ;CAN.c: 574: if( (type & 1<<3) == 4 )
  6849  001DBE  5001               	movf	i2CANIntClear@type,w,c
  6850  001DC0  0B08               	andlw	8
  6851  001DC2  0A04               	xorlw	4
  6852  001DC4  A4D8               	btfss	status,2,c
  6853  001DC6  D003               	goto	i2l2717
  6854                           
  6855                           ;CAN.c: 575: {
  6856                           ;CAN.c: 576: PIR3 = (PIR3 & ~(1<<3)) | (1<<3 & 0);
  6857  001DC8  50A4               	movf	4004,w,c	;volatile
  6858  001DCA  0BF7               	andlw	247
  6859  001DCC  6EA4               	movwf	4004,c	;volatile
  6860  001DCE                     i2l2717:
  6861  001DCE  FFFF               	dw	65535	; assembler added errata NOP
  6862                           
  6863                           ;CAN.c: 580: if( (type & 1<<4) == 5 )
  6864  001DD0  5001               	movf	i2CANIntClear@type,w,c
  6865  001DD2  0B10               	andlw	16
  6866  001DD4  0A05               	xorlw	5
  6867  001DD6  A4D8               	btfss	status,2,c
  6868  001DD8  D003               	goto	i2l2721
  6869                           
  6870                           ;CAN.c: 581: {
  6871                           ;CAN.c: 582: PIR3 = (PIR3 & ~(1<<4)) | (1<<4 & 0);
  6872  001DDA  50A4               	movf	4004,w,c	;volatile
  6873  001DDC  0BEF               	andlw	239
  6874  001DDE  6EA4               	movwf	4004,c	;volatile
  6875  001DE0                     i2l2721:
  6876  001DE0  FFFF               	dw	65535	; assembler added errata NOP
  6877                           
  6878                           ;CAN.c: 586: if( (type & 1<<5) == 6 )
  6879  001DE2  5001               	movf	i2CANIntClear@type,w,c
  6880  001DE4  0B20               	andlw	32
  6881  001DE6  0A06               	xorlw	6
  6882  001DE8  A4D8               	btfss	status,2,c
  6883  001DEA  D003               	goto	i2l2725
  6884                           
  6885                           ;CAN.c: 587: {
  6886                           ;CAN.c: 588: PIR3 = (PIR3 & ~(1<<5)) | (1<<5 & 0);
  6887  001DEC  50A4               	movf	4004,w,c	;volatile
  6888  001DEE  0BDF               	andlw	223
  6889  001DF0  6EA4               	movwf	4004,c	;volatile
  6890  001DF2                     i2l2725:
  6891  001DF2  FFFF               	dw	65535	; assembler added errata NOP
  6892                           
  6893                           ;CAN.c: 592: if( (type & 1<<6) == 7 )
  6894  001DF4  5001               	movf	i2CANIntClear@type,w,c
  6895  001DF6  0B40               	andlw	64
  6896  001DF8  0A07               	xorlw	7
  6897  001DFA  A4D8               	btfss	status,2,c
  6898  001DFC  D003               	goto	i2l2729
  6899                           
  6900                           ;CAN.c: 593: {
  6901                           ;CAN.c: 594: PIR3 = (PIR3 & ~(1<<6)) | (1<<6 & 0);
  6902  001DFE  50A4               	movf	4004,w,c	;volatile
  6903  001E00  0BBF               	andlw	191
  6904  001E02  6EA4               	movwf	4004,c	;volatile
  6905  001E04                     i2l2729:
  6906  001E04  FFFF               	dw	65535	; assembler added errata NOP
  6907                           
  6908                           ;CAN.c: 598: if( (type & 1<<7) == 8 )
  6909  001E06  5001               	movf	i2CANIntClear@type,w,c
  6910  001E08  0B80               	andlw	128
  6911  001E0A  0A08               	xorlw	8
  6912  001E0C  A4D8               	btfss	status,2,c
  6913  001E0E  D003               	goto	i2l481
  6914                           
  6915                           ;CAN.c: 599: {
  6916                           ;CAN.c: 600: PIR3 = (PIR3 & ~(1<<7)) | (1<<7 & 0);
  6917  001E10  50A4               	movf	4004,w,c	;volatile
  6918  001E12  0B7F               	andlw	127
  6919  001E14  6EA4               	movwf	4004,c	;volatile
  6920  001E16                     i2l481:
  6921  001E16  FFFF               	dw	65535	; assembler added errata NOP
  6922  001E18  0012               	return		;funcret
  6923  001E1A  FFFF               	dw	65535	; errata NOP
  6924  001E1C                     __end_ofi2_CANIntClear:
  6925                           	opt stack 0
  6926                           pclatu	equ	0xFFB
  6927                           pclath	equ	0xFFA
  6928                           tblptru	equ	0xFF8
  6929                           tblptrh	equ	0xFF7
  6930                           tblptrl	equ	0xFF6
  6931                           tablat	equ	0xFF5
  6932                           prodh	equ	0xFF4
  6933                           prodl	equ	0xFF3
  6934                           intcon	equ	0xFF2
  6935                           indf0	equ	0xFEF
  6936                           postinc0	equ	0xFEE
  6937                           fsr0h	equ	0xFEA
  6938                           fsr0l	equ	0xFE9
  6939                           wreg	equ	0xFE8
  6940                           indf1	equ	0xFE7
  6941                           fsr1h	equ	0xFE2
  6942                           fsr1l	equ	0xFE1
  6943                           indf2	equ	0xFDF
  6944                           postinc2	equ	0xFDE
  6945                           postdec2	equ	0xFDD
  6946                           plusw2	equ	0xFDB
  6947                           fsr2h	equ	0xFDA
  6948                           fsr2l	equ	0xFD9
  6949                           status	equ	0xFD8
  6950                           
  6951 ;; *************** function _CANIntStatus *****************
  6952 ;; Defined at:
  6953 ;;		line 607 in file "CAN.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;		None
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;  status          1    0[COMRAM] unsigned char 
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  1    wreg      unsigned char 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2, status,0
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6967 ;;      Params:         0       0       0       0       0       0       0
  6968 ;;      Locals:         1       0       0       0       0       0       0
  6969 ;;      Temps:          0       0       0       0       0       0       0
  6970 ;;      Totals:         1       0       0       0       0       0       0
  6971 ;;Total ram usage:        1 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		_ISR
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text33
  6981  0021A0                     __ptext33:
  6982                           	opt stack 0
  6983  0021A0                     _CANIntStatus:
  6984                           	opt stack 0
  6985  0021A0  FFFF               	dw	65535	; assembler added errata NOP
  6986                           
  6987                           ;CAN.c: 609: uint8_t status = 0;
  6988                           
  6989                           ;incstack = 0
  6990  0021A2  0E00               	movlw	0
  6991  0021A4  6E01               	movwf	CANIntStatus@status,c
  6992                           
  6993                           ;CAN.c: 611: status |= PIR3 & 1<<0;
  6994  0021A6  50A4               	movf	4004,w,c	;volatile
  6995  0021A8  0B01               	andlw	1
  6996  0021AA  1201               	iorwf	CANIntStatus@status,f,c
  6997                           
  6998                           ;CAN.c: 612: status |= PIR3 & 1<<1;
  6999  0021AC  50A4               	movf	4004,w,c	;volatile
  7000  0021AE  0B02               	andlw	2
  7001  0021B0  1201               	iorwf	CANIntStatus@status,f,c
  7002                           
  7003                           ;CAN.c: 613: status |= PIR3 & 1<<2;
  7004  0021B2  50A4               	movf	4004,w,c	;volatile
  7005  0021B4  0B04               	andlw	4
  7006  0021B6  1201               	iorwf	CANIntStatus@status,f,c
  7007                           
  7008                           ;CAN.c: 614: status |= PIR3 & 1<<3;
  7009  0021B8  50A4               	movf	4004,w,c	;volatile
  7010  0021BA  0B08               	andlw	8
  7011  0021BC  1201               	iorwf	CANIntStatus@status,f,c
  7012                           
  7013                           ;CAN.c: 615: status |= PIR3 & 1<<4;
  7014  0021BE  50A4               	movf	4004,w,c	;volatile
  7015  0021C0  0B10               	andlw	16
  7016  0021C2  1201               	iorwf	CANIntStatus@status,f,c
  7017                           
  7018                           ;CAN.c: 616: status |= PIR3 & 1<<5;
  7019  0021C4  50A4               	movf	4004,w,c	;volatile
  7020  0021C6  0B20               	andlw	32
  7021  0021C8  1201               	iorwf	CANIntStatus@status,f,c
  7022                           
  7023                           ;CAN.c: 617: status |= PIR3 & 1<<6;
  7024  0021CA  50A4               	movf	4004,w,c	;volatile
  7025  0021CC  0B40               	andlw	64
  7026  0021CE  1201               	iorwf	CANIntStatus@status,f,c
  7027                           
  7028                           ;CAN.c: 618: status |= PIR3 & 1<<7;
  7029  0021D0  50A4               	movf	4004,w,c	;volatile
  7030  0021D2  0B80               	andlw	128
  7031  0021D4  1201               	iorwf	CANIntStatus@status,f,c
  7032                           
  7033                           ;CAN.c: 620: return status;
  7034  0021D6  5001               	movf	CANIntStatus@status,w,c
  7035  0021D8  0012               	return		;funcret
  7036  0021DA  FFFF               	dw	65535	; errata NOP
  7037  0021DC                     __end_of_CANIntStatus:
  7038                           	opt stack 0
  7039                           pclatu	equ	0xFFB
  7040                           pclath	equ	0xFFA
  7041                           tblptru	equ	0xFF8
  7042                           tblptrh	equ	0xFF7
  7043                           tblptrl	equ	0xFF6
  7044                           tablat	equ	0xFF5
  7045                           prodh	equ	0xFF4
  7046                           prodl	equ	0xFF3
  7047                           intcon	equ	0xFF2
  7048                           indf0	equ	0xFEF
  7049                           postinc0	equ	0xFEE
  7050                           fsr0h	equ	0xFEA
  7051                           fsr0l	equ	0xFE9
  7052                           wreg	equ	0xFE8
  7053                           indf1	equ	0xFE7
  7054                           fsr1h	equ	0xFE2
  7055                           fsr1l	equ	0xFE1
  7056                           indf2	equ	0xFDF
  7057                           postinc2	equ	0xFDE
  7058                           postdec2	equ	0xFDD
  7059                           plusw2	equ	0xFDB
  7060                           fsr2h	equ	0xFDA
  7061                           fsr2l	equ	0xFD9
  7062                           status	equ	0xFD8
  7063                           pclatu	equ	0xFFB
  7064                           pclath	equ	0xFFA
  7065                           tblptru	equ	0xFF8
  7066                           tblptrh	equ	0xFF7
  7067                           tblptrl	equ	0xFF6
  7068                           tablat	equ	0xFF5
  7069                           prodh	equ	0xFF4
  7070                           prodl	equ	0xFF3
  7071                           intcon	equ	0xFF2
  7072                           indf0	equ	0xFEF
  7073                           postinc0	equ	0xFEE
  7074                           fsr0h	equ	0xFEA
  7075                           fsr0l	equ	0xFE9
  7076                           wreg	equ	0xFE8
  7077                           indf1	equ	0xFE7
  7078                           fsr1h	equ	0xFE2
  7079                           fsr1l	equ	0xFE1
  7080                           indf2	equ	0xFDF
  7081                           postinc2	equ	0xFDE
  7082                           postdec2	equ	0xFDD
  7083                           plusw2	equ	0xFDB
  7084                           fsr2h	equ	0xFDA
  7085                           fsr2l	equ	0xFD9
  7086                           status	equ	0xFD8
  7087                           
  7088                           	psect	rparam
  7089  0000                     pclatu	equ	0xFFB
  7090                           pclath	equ	0xFFA
  7091                           tblptru	equ	0xFF8
  7092                           tblptrh	equ	0xFF7
  7093                           tblptrl	equ	0xFF6
  7094                           tablat	equ	0xFF5
  7095                           prodh	equ	0xFF4
  7096                           prodl	equ	0xFF3
  7097                           intcon	equ	0xFF2
  7098                           indf0	equ	0xFEF
  7099                           postinc0	equ	0xFEE
  7100                           fsr0h	equ	0xFEA
  7101                           fsr0l	equ	0xFE9
  7102                           wreg	equ	0xFE8
  7103                           indf1	equ	0xFE7
  7104                           fsr1h	equ	0xFE2
  7105                           fsr1l	equ	0xFE1
  7106                           indf2	equ	0xFDF
  7107                           postinc2	equ	0xFDE
  7108                           postdec2	equ	0xFDD
  7109                           plusw2	equ	0xFDB
  7110                           fsr2h	equ	0xFDA
  7111                           fsr2l	equ	0xFD9
  7112                           status	equ	0xFD8
  7113                           
  7114                           	psect	temp
  7115  000050                     btemp:
  7116                           	opt stack 0
  7117  000050                     	ds	1
  7118  0000                     int$flags	set	btemp
  7119                           pclatu	equ	0xFFB
  7120                           pclath	equ	0xFFA
  7121                           tblptru	equ	0xFF8
  7122                           tblptrh	equ	0xFF7
  7123                           tblptrl	equ	0xFF6
  7124                           tablat	equ	0xFF5
  7125                           prodh	equ	0xFF4
  7126                           prodl	equ	0xFF3
  7127                           intcon	equ	0xFF2
  7128                           indf0	equ	0xFEF
  7129                           postinc0	equ	0xFEE
  7130                           fsr0h	equ	0xFEA
  7131                           fsr0l	equ	0xFE9
  7132                           wreg	equ	0xFE8
  7133                           indf1	equ	0xFE7
  7134                           fsr1h	equ	0xFE2
  7135                           fsr1l	equ	0xFE1
  7136                           indf2	equ	0xFDF
  7137                           postinc2	equ	0xFDE
  7138                           postdec2	equ	0xFDD
  7139                           plusw2	equ	0xFDB
  7140                           fsr2h	equ	0xFDA
  7141                           fsr2l	equ	0xFD9
  7142                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    2
    Data        0
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      79
    BANK0           160     73     107
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Reply.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageSend@data_ptr	PTR volatile unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageSend@data_reg_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@psMsgObject.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageSend@psMsgObject	PTR struct . size(2) Largest target is 19
		 -> main@Reply(BANK0[18]), 

    CANMessageSend@TXBD0_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBDLC_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBEIDL_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBEIDH_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBSIDL_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBSIDH_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBCON_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXB_BASE_ADDRESS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageGet@data_ptr_977	PTR volatile unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageGet@rxBuffer_ptr_976	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXB1D0(SFR[1]), 

    CANMessageGet@data_ptr	PTR volatile unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageGet@rxBuffer_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXB0D0(SFR_1[1]), 

    CANMessageGet@psMsgObject.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageGet@psMsgObject	PTR struct . size(2) Largest target is 19
		 -> rxCANMessage(BANK0[18]), 

    CANSetFilter@pObject.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANSetFilter@pObject	PTR struct . size(2) Largest target is 19
		 -> rxCANMessage(BANK0[18]), 

    CANSetFilter@RXFEIDL_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetFilter@RXFEIDH_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetFilter@RXFSIDL_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetFilter@RXFSIDH_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetFilter@FILTER_BASE_ADDRESS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetMask@pObject.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANSetMask@pObject	PTR struct . size(2) Largest target is 19
		 -> rxCANMessage(BANK0[18]), 

    LCD_DispString@StrPtr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[4]), str_dist(BANK0[4]), STR_1(CODE[16]), 

    Reply.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    itoa_new@str	PTR unsigned char  size(2) Largest target is 4
		 -> str_dist(BANK0[4]), 

    S21$pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    rxCANMessage.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_AvgMeasure
    _itoa_new->___lwdiv
    _LCD_Init->_LCD_GoToXy
    _LCD_GoToXy->_SendCommand
    _SendCommand->_GPIOPinWrite
    _LCD_DispString->_SendData
    _SendData->_GPIOPinWrite
    _ComInit->_CANSetFilter
    _AvgMeasure->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft

Critical Paths under _ISR in COMRAM

    _ISR->_CANIntStatus
    _ISR->i2_CANIntClear

Critical Paths under _main in BANK0

    _main->_CANMessageGet
    _AvgMeasure->___fttol

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   27838
                                             37 BANK0     36    36      0
                         _AvgMeasure
                      _CANMessageGet
                     _CANMessageSend
                         _Clock_Init
                            _ComInit
                        _Hcsr04_Init
                     _LCD_DispString
                         _LCD_GoToXy
                           _LCD_Init
                           _LedsInit
                            ___lwdiv
                           _itoa_new
 ---------------------------------------------------------------------------------
 (1) _itoa_new                                             6     2      4    1711
                                             22 COMRAM     6     2      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     415
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _LedsInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    8148
                                             22 COMRAM     2     2      0
              _GPIOPinTypeGPIOOutput
                       _GPIOPinWrite
                         _LCD_GoToXy
                        _SendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_GoToXy                                           2     1      1    2852
                                             20 COMRAM     2     1      1
                        _SendCommand
 ---------------------------------------------------------------------------------
 (2) _SendCommand                                          1     1      0    2572
                                             19 COMRAM     1     1      0
                       _GPIOPinWrite
 ---------------------------------------------------------------------------------
 (2) _GPIOPinTypeGPIOOutput                                2     1      1     196
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _LCD_DispString                                       2     0      2    2809
                                             20 COMRAM     2     0      2
                           _SendData
 ---------------------------------------------------------------------------------
 (2) _SendData                                             1     1      0    2572
                                             19 COMRAM     1     1      0
                       _GPIOPinWrite
 ---------------------------------------------------------------------------------
 (3) _GPIOPinWrite                                         4     2      2    2528
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Hcsr04_Init                                          0     0      0       0
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (2) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ComInit                                              0     0      0    1673
                            _CANInit
                        _CANIntClear
                       _CANIntEnable
                     _CANSetBaudRate
                       _CANSetFilter
                         _CANSetMask
                         _CANSetMode
 ---------------------------------------------------------------------------------
 (2) _CANSetMode                                           3     3      0      44
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _CANSetMask                                          10     6      4     610
                                             15 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _CANSetFilter                                        17    15      2     515
                                             15 COMRAM    17    15      2
 ---------------------------------------------------------------------------------
 (2) _CANSetBaudRate                                       4     0      4     152
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _CANIntEnable                                         1     1      0     176
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANIntClear                                          1     1      0     176
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     8      0      69
                                             15 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _CANMessageSend                                      33    30      3    1178
                                             15 COMRAM    33    30      3
 ---------------------------------------------------------------------------------
 (1) _CANMessageGet                                       53    50      3     884
                                             15 COMRAM    16    13      3
                                              0 BANK0     37    37      0
 ---------------------------------------------------------------------------------
 (1) _AvgMeasure                                           6     4      2    7313
                                             50 COMRAM     3     1      2
                                              6 BANK0      3     3      0
                     _Hcsr04_Trigger
                            ___ftdiv
                            ___fttol
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2606
                                             23 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     857
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     525
                                             41 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3186
                                             26 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             15 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _Hcsr04_Trigger                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0     207
                                              1 COMRAM    14    14      0
                       _CANIntStatus
                      i2_CANIntClear
 ---------------------------------------------------------------------------------
 (6) i2_CANIntClear                                        1     1      0     176
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CANIntStatus                                         1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AvgMeasure
     _Hcsr04_Trigger
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwdiv
     ___lwtoft
       ___ftpack
   _CANMessageGet
   _CANMessageSend
   _Clock_Init
   _ComInit
     _CANInit
     _CANIntClear
     _CANIntEnable
     _CANSetBaudRate
     _CANSetFilter
     _CANSetMask
     _CANSetMode
   _Hcsr04_Init
     _Timer1_Init
   _LCD_DispString
     _SendData
       _GPIOPinWrite
   _LCD_GoToXy
     _SendCommand
       _GPIOPinWrite
   _LCD_Init
     _GPIOPinTypeGPIOOutput
     _GPIOPinWrite
     _LCD_GoToXy
       _SendCommand
         _GPIOPinWrite
     _SendCommand
       _GPIOPinWrite
   _LedsInit
   ___lwdiv
   _itoa_new
     ___lwdiv
     ___lwmod

 _ISR (ROOT)
   _CANIntStatus
   i2_CANIntClear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     49      6B       4       66.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      4F       1       84.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA       9        0.0%
DATA                 0      0      BA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed May 24 20:07:08 2017

                                                                        ?_LCD_GoToXy 0015  
                                                               __end_of_CANSetFilter 1684  
                                                             __end_of_CANSetBaudRate 1F12  
                                                                    main@sync_period 0095  
                                                                __end_of_Hcsr04_Init 226C  
                                                                                 l73 147C  
                                                                                 l74 148A  
                                                             __end_of_LCD_DispString 1FDC  
                                                                        __CFG_BOR$ON 000000  
                                                                       __CFG_CP0$OFF 000000  
                                                                       __CFG_CP1$OFF 000000  
                                                                       __CFG_CP2$OFF 000000  
                                                                       __CFG_CP3$OFF 000000  
                                                                                l141 1F76  
                                                                                l151 1CFE  
                                                                                l423 0F4C  
                                                                                l408 0C04  
                                                                                l443 1C6C  
                                                                                l371 124A  
                                                                                l428 1BE6  
                                                                                l188 2200  
                                                                                l390 0826  
                                                                                l384 167E  
                                                                                l376 14F4  
                                                                                l481 1D8A  
                                                                                l466 1D12  
                                                                                l821 1874  
                                                                                l399 0AF6  
                                                                                l824 1842  
                                                                                l755 1938  
                                                                                l766 1918  
                                                                                l944 202E  
                                                                                l857 178E  
                                                                                l954 2192  
                                                                                _GIE 007F97  
                                                                       __CFG_CPB$OFF 000000  
                                                                       __CFG_CPD$OFF 000000  
                                                                                _ISR 0008  
                                                                       __CFG_BORV$25 000000  
                                                                                wreg 000FE8  
                                                                    __end_of_CANInit 22A8  
                                                          CANMessageSend@TXBEIDH_PTR 001B  
                                                          CANMessageSend@TXBEIDL_PTR 001D  
                                                                     _Hcsr04_Trigger 226C  
                                                                       __CFG_LVP$OFF 000000  
                                                                               ?_ISR 0001  
                                                                       ___ftdiv@cntr 0024  
                                                                       ___ftdiv@sign 0029  
                                                                       __CFG_WDT$OFF 000000  
                                                                               l2201 1EE2  
                                                                               l2041 1CB4  
                                                                               l2105 21F0  
                                                                               l2131 1D66  
                                                                               l2123 1D42  
                                                                               l2115 1D1E  
                                                                               l2043 1CC8  
                                                                               l2035 1C78  
                                                                               l3021 19C6  
                                                                               l3101 0BE6  
                                                                               l2205 1EFE  
                                                                               l2037 1C8C  
                                                                               l2141 1F18  
                                                                               l3007 1952  
                                                                               l2135 1D78  
                                                                               l2127 1D54  
                                                                               l2119 1D30  
                                                                               l2231 14A6  
                                                                               l2215 101C  
                                                                               l2039 1CA0  
                                                                               l2047 1CDC  
                                                                               l2143 1F24  
                                                                               l2233 14AC  
                                                                               l2225 118C  
                                                                               l2217 10DA  
                                                                               l2145 1F30  
                                                                               l2153 1F54  
                                                                               l3043 06D0  
                                                                               l2251 15B2  
                                                                               l2235 14B2  
                                                                               l2243 14CC  
                                                                               l2147 1F3C  
                                                                               l3131 12F0  
                                                                               l3037 064E  
                                                                               l2237 14B8  
                                                                               l2229 14A0  
                                                                               l2149 1F48  
                                                                               l2413 2186  
                                                                               l2405 2160  
                                                                               l3141 133A  
                                                                               l3055 0896  
                                                                               l3063 08B8  
                                                                               l2271 1C1C  
                                                                               l2263 1BF4  
                                                                               l2239 14BE  
                                                                               l2407 216A  
                                                                               l3081 0B48  
                                                                               l3065 08F6  
                                                                               l3049 086E  
                                                                               l2193 1EAE  
                                                                               l2409 2170  
                                                                               l3145 1352  
                                                                               l3075 0992  
                                                                               l2283 1C58  
                                                                               l2275 1C30  
                                                                               l2267 1C08  
                                                                               l2187 2118  
                                                                               l2523 1F80  
                                                                               l3069 0900  
                                                                               l2197 1EC6  
                                                                               l3087 0B70  
                                                                               l3095 0B92  
                                                                               l2279 1C44  
                                                                               l2527 1FAC  
                                                                               l3167 13CC  
                                                                               l3097 0BD0  
                                                                               l2641 0C32  
                                                                               l3099 0BE0  
                                                                               l2635 0C0E  
                                                                               l2671 0EDA  
                                                                               l2639 0C28  
                                                                               l2841 189C  
                                                                               l2681 0F32  
                                                                               l2649 0D3A  
                                                                               l2851 1900  
                                                                               l2843 18A8  
                                                                               l2907 181A  
                                                                               l2853 190C  
                                                                               l2845 18C8  
                                                                               l2837 188C  
                                                                               l2951 172C  
                                                                               l2679 0EFC  
                                                                               l2849 18E0  
                                                                               l2945 170C  
                                                                               l2883 17CA  
                                                                               l2963 177C  
                                                                               l2955 1740  
                                                                               l2957 1752  
                                                                               l2949 1722  
                                                                               l2973 1FF4  
                                                                               l2887 17DA  
                                                                               l2959 175E  
                                                                               l2975 1FFE  
                                                                               l2985 2022  
                                                                               l2977 2004  
                                                                               STR_1 0603  
                                                                               STR_2 0613  
                                                                               u2300 0CF2  
                                                                               u2060 1FA4  
                                                                               _LATA 000F89  
                                                                               u2070 1FD0  
                                                                               _LATB 000F8A  
                                                                               _LATC 000F8B  
                                                                               u2320 0DC2  
                                                                               _LATD 000F8C  
                                                                               u2305 0CE6  
                                                                               _LATE 000F8D  
                                                                               u2330 0E0C  
                                                                               u2315 0D14  
                                                                               u3107 1B6A  
                                                                               u2067 1F9A  
                                                                               u2340 0E56  
                                                                               u1700 1150  
                                                                               u1540 213C  
                                                                               u2325 0DB6  
                                                                               u1525 2102  
                                                                               u3117 1B80  
                                                                               u2077 1FC6  
                                                                               u1630 0FE0  
                                                                               u1550 2140  
                                                                               u2335 0E00  
                                                                               u1535 2122  
                                                                               u3127 1BB4  
                                                                               u3047 1E40  
                                                                               u1720 11BA  
                                                                               u2345 0E4A  
                                                                               u1705 1144  
                                                                               u3137 1BCA  
                                                                               u3057 1E76  
                                                                               u1730 11F0  
                                                                               u1650 104A  
                                                                               u3147 195E  
                                                                               u2275 0C1A  
                                                                               u1715 116E  
                                                                               u1635 0FD4  
                                                                               u3067 1ACE  
                                                                               u1660 1080  
                                                                               u3157 2272  
                                                                               u1725 11AE  
                                                                               u1645 0FFE  
                                                                               u3077 1AE4  
                                                                               u2710 16C4  
                                                                               u1750 1568  
                                                                               u1735 11E4  
                                                                               u1655 103E  
                                                                               u3087 1B18  
                                                                               u2641 17A6  
                                                                               u1665 1074  
                                                                               u3097 1B2E  
                                                                               _PIE3 000FA3  
                                                                               u1770 15DC  
                                                                               u2715 16BA  
                                                                               u1755 155C  
                                                                               u1780 1616  
                                                                               u2661 17C0  
                                                                               u1765 158A  
                                                                               u1685 10EA  
                                                                               u1775 15D0  
                                                                               u1785 160A  
                                                                               u2691 1696  
                                                                               u2915 0920  
                                                                               u2925 09F0  
                                                                               u2845 0662  
                                                                               u2935 0A14  
                                                                               u2855 072A  
                                                                               u2865 074A  
                                                                               _PIR3 000FA4  
                                                                               i2l91 0094  
                                                                               i2l84 0060  
                                                                               i2l86 0076  
                                                                               i2l87 007A  
                                                                               i2l88 007E  
                                                                               _TMR1 000FCE  
                                                                __size_of_CANSetMask 02E6  
                                                                __size_of_CANSetMode 005A  
                                                                       __CFG_STVR$ON 000000  
                                                                        LCD_GoToXy@x 0016  
                                                                        LCD_GoToXy@y 0015  
                                                                               _dist 00B1  
                                                                               _main 1250  
                                                                       ___ftpack@arg 0010  
                                                                       ___ftpack@exp 0013  
                                                                               fsr0h 000FEA  
                                                                               fsr1h 000FE2  
                                                                               indf0 000FEF  
                                                                               fsr2h 000FDA  
                                                                               fsr0l 000FE9  
                                                                               indf1 000FE7  
                                                                               indf2 000FDF  
                                                                               fsr1l 000FE1  
                                                                               fsr2l 000FD9  
                                                                               btemp 0050  
                                                                               prodh 000FF4  
                                                                               prodl 000FF3  
                                                                               start 00D4  
                                                                    __end_of_ComInit 209A  
                                                                      ?_GPIOPinWrite 0010  
                                                          CANMessageSend@TXBSIDH_PTR 0029  
                                                             AvgMeasure@average_dist 0067  
                                                          CANMessageSend@TXBSIDL_PTR 002F  
                                                                         _AvgMeasure 193E  
                                                                    ?_CANMessageSend 0010  
                                                                       ___param_bank 000000  
                                                            ??_GPIOPinTypeGPIOOutput 0011  
                                                                              ??_ISR 0002  
                                                                       ___fttol@exp1 0065  
                                                                       ___fttol@lval 0061  
                                                                    ?_CANSetBaudRate 0010  
                                                                         _Clock_Init 209A  
                                                                   __end_of_LCD_Init 1E98  
                                                                    ?_LCD_DispString 0015  
                                                            CANSetMask@bDoubleBuffer 0013  
                                                                      __CFG_OSCS$OFF 000000  
                                                               __size_of_CANIntClear 008C  
                                                                              ?_main 0001  
                                                                    __end_of___ftdiv 187A  
                                                                    __end_of___fttol 1794  
                                                                    __end_of___lwdiv 203C  
                                                                    __end_of___lwmod 21A0  
                                                                              i2l481 1E16  
                                                                              i2l466 1D9E  
                                                                              _TMR3H 000FB3  
                                                                              _TMR3L 000FB2  
                                                                              _PORTA 000F80  
                                                                              _PORTB 000F81  
                                                                              _PORTC 000F82  
                                                                              _PORTD 000F83  
                                                                              _PORTE 000F84  
                                                                              _TRISA 000F92  
                                                                              _TRISB 000F93  
                                                                              _TRISC 000F94  
                                                                              _TRISD 000F95  
                                                                              _TRISE 000F96  
                                                                      __CFG_PWRT$OFF 000000  
                                                                      __CFG_WRT0$OFF 000000  
                                                             __end_of_Hcsr04_Trigger 227E  
                                                                      __CFG_WRT1$OFF 000000  
                                                                      __CFG_WRT2$OFF 000000  
                                                                      __CFG_WRT3$OFF 000000  
                                                                     __CFG_EBTR0$OFF 000000  
                                                                     __CFG_EBTR1$OFF 000000  
                                                                     __CFG_EBTR2$OFF 000000  
                                                                     __CFG_EBTR3$OFF 000000  
                                                                              _Reply 0036  
                                                                      __CFG_WRTB$OFF 000000  
                                                                      __CFG_WRTC$OFF 000000  
                                                                      __CFG_WRTD$OFF 000000  
                                                                     __CFG_EBTRB$OFF 000000  
                                                                      ___ftpack@sign 0014  
                                                                              _speed 0601  
                                                                __size_of_LCD_GoToXy 002A  
                                                                   CANIntEnable@type 0010  
                                                                              pclath 000FFA  
                                                                              tablat 000FF5  
                                                             __size_ofi2_CANIntClear 008C  
                                                                              plusw2 000FDB  
                                                                              status 000FD8  
                                                             CANSetMask@ui8CanBfrNum 0019  
                                                                     ??_GPIOPinWrite 0012  
                                                                        _Hcsr04_Init 2254  
                                                                    __initialization 222E  
                                                                      ??_SendCommand 0014  
                                                                   __end_of_LedsInit 228C  
                                                                       __end_of_main 1492  
                                                                        _AllowTxFlag 00B3  
                                                                     __CFG_OSC$HSPLL 000000  
                                                                  main@ui16ReplyData 0093  
                                                                          ??_CANInit 0010  
                                                                   __end_of_SendData 1BD6  
                                                                             ??_main 0085  
                                                                      ___fttol@sign1 0060  
                                                                      __activetblptr 000002  
                                                                    ?_Hcsr04_Trigger 0001  
                                                              __size_of_CANIntEnable 009C  
                                                                             _CANCON 000F6F  
                                                                             _CCPR1H 000FBF  
                                                                             _CCPR1L 000FBE  
                                                                             _CIOCON 000F73  
                                                                   __end_of___ftpack 193E  
                                                                             _T1RD16 007E6F  
                                                              __size_of_CANIntStatus 003C  
                                                                             i2l2721 1DE0  
                                                                             i2l2713 1DBC  
                                                                             i2l2725 1DF2  
                                                                             i2l2717 1DCE  
                                                                             i2l2709 1DAA  
                                                                             i2l2807 0052  
                                                                             i2l2729 1E04  
                                                                   __end_of___lwtoft 222E  
                                                                          ??_ComInit 0021  
                                                                             _RXB0D0 000F66  
                                                                             _RXB1D0 000F56  
                                                                             _TMR1CS 007E69  
                                                                     __CFG_WDTPS$128 000000  
                                                                             _TMR1ON 007E68  
                                                                  AvgMeasure@counter 0066  
                                                              __size_of_CANSetFilter 01F2  
                                                                      ??_Timer1_Init 0010  
                                                                        ?_AvgMeasure 0033  
                                                            CANSetFilter@RXFEIDH_PTR 0016  
                                                            CANSetFilter@RXFEIDL_PTR 0018  
                                                                          ??___ftdiv 0021  
                                                                          ??___fttol 002E  
                                                                          ??___lwdiv 0014  
                                                                       ??_CANSetMask 0014  
                                                                       ??_CANSetMode 0010  
                                                                          ??___lwmod 0014  
                                                                        ?_Clock_Init 0001  
                                                                      i2_CANIntClear 1D90  
                                                                   GPIOPinWrite@Data 0011  
                                                                  i2CANIntClear@type 0001  
                                                                             clear_0 2234  
                                                                             clear_1 2240  
                                                                   GPIOPinWrite@Mask 0010  
                                                                   GPIOPinWrite@Port 0013  
                                                                       _CANIntEnable 1BD6  
                                                                   __end_of_itoa_new 1A9E  
                                                                __end_of_SendCommand 1B3A  
                                                                       _CANIntStatus 21A0  
                                                                       __mediumconst 0000  
                                                                         _bRxMsgFlag 00B4  
                                                            CANSetFilter@RXFSIDH_PTR 001B  
                                                                             tblptrh 000FF7  
                                                                             tblptrl 000FF6  
                                                                             tblptru 000FF8  
                                                            CANSetFilter@RXFSIDL_PTR 001D  
                                                                       _CANSetFilter 1492  
                                                                         __accesstop 0060  
                                                            __end_of__initialization 2246  
                                                                          ?_LCD_Init 0001  
                                                                 __end_of_CANSetMask 1250  
                                                                 __end_of_CANSetMode 2150  
                                                                      ___rparam_used 000001  
                                                                         ___ftdiv@f1 001B  
                                                                         ___ftdiv@f2 001E  
                                                                         ___ftdiv@f3 0025  
                                                             CANMessageSend@data_ptr 0025  
                                                                         ___fttol@f1 002A  
                                                                     __pcstackCOMRAM 0001  
                                                                       ??_LCD_GoToXy 0016  
                                                                     ?i2_CANIntClear 0001  
                                                             CANMessageGet@RXMsgFlag 001F  
                                                                      __end_of_speed 0603  
                                                                __end_of_Timer1_Init 229A  
                                                                         ___lwtoft@c 0018  
                                                                        itoa_new@val 0017  
                                                                        itoa_new@str 0019  
                                                               __end_of_GPIOPinWrite 1D04  
                                                          CANSetFilter@ui8CanFltrNum 001A  
                                                                __size_of_AvgMeasure 00B8  
                                                                CANSetFilter@pObject 0010  
                                                                          ?_LedsInit 0001  
                                                                         __pbssBANK0 00A9  
                                                                 __end_of_LCD_GoToXy 2206  
                                                                __size_of_Clock_Init 005C  
                                                                         ??_LCD_Init 0017  
                                                                   ??_CANMessageSend 0013  
                                                                          ?_SendData 0001  
                                                                   ??_CANSetBaudRate 0014  
                                                                   ??_LCD_DispString 0017  
                                                                        _SendCommand 1A9E  
                                                     CANMessageSend@TXB_BASE_ADDRESS 002D  
                                                     __size_of_GPIOPinTypeGPIOOutput 006A  
                                                      __end_of_GPIOPinTypeGPIOOutput 1F7C  
                                                                            _CANSTAT 000F6E  
                                                                          ?___ftpack 0010  
                                                                            _CANInit 229A  
                                                                            _BRGCON1 000F70  
                                                                            _BRGCON2 000F71  
                                                                            _BRGCON3 000F72  
                                                                            _T1CKPS0 007E6C  
                                                                            _T1CKPS1 007E6D  
                                                                          ?___lwtoft 0018  
                                                            CANMessageSend@TXBD0_PTR 001F  
                                                                            _RXB0DLC 000F65  
                                                                            _RXB1DLC 000F55  
                                                                            _RXB0CON 000F60  
                                                                            _RXB1CON 000F50  
                                                                            _TXB0CON 000F40  
                                                                            _TXB1CON 000F30  
                                                             __size_of_CANMessageGet 05F2  
                                                          CANMessageGet@rxBuffer_ptr 0015  
                                                                         ??_LedsInit 0010  
                                                                            _ComInit 203C  
                                                                         ??_SendData 0014  
                                                                          ?_itoa_new 0017  
                                                                       ?_Hcsr04_Init 0001  
                                                                            __Hparam 0000  
                                                                        _Timer1_Init 228C  
                                                                            __Lparam 0000  
                                                                   itoa_new@temp_val 001B  
                                                                    ??i2_CANIntClear 0001  
                                                                      ??_CANIntClear 0010  
                                                                            ___ftdiv 1794  
                                                                            ___fttol 1684  
                                                                            ___lwdiv 1FDC  
                                                                            ___lwmod 2150  
                                                                       __psmallconst 0600  
                                                                            __pcinit 222E  
                                                                         ??___ftpack 0015  
                                                                   ??_Hcsr04_Trigger 0010  
                                                                            __ramtop 0600  
                                                                            __ptext0 1250  
                                                                            __ptext1 19F6  
                                                                            __ptext2 2150  
                                                                            __ptext3 227E  
                                                                            __ptext4 1E1C  
                                                                            __ptext5 21DC  
                                                                            __ptext6 1A9E  
                                                                            __ptext7 1F12  
                                                                            __ptext8 1F7C  
                                                                            __ptext9 1B3A  
                                                                     CANMessageGet@i 0013  
                                                                         ??___lwtoft 001B  
                                                                       __size_of_ISR 00CC  
                                                         CANMessageSend@data_reg_ptr 0023  
                                                                            _counter 004F  
                                                            CANMessageSend@FrameType 0012  
                                                                          _T3CONbits 000FB1  
                                                               end_of_initialization 2246  
                                                                      __Lmediumconst 0000  
                                                           Clock_Init@ulCompareValue 0014  
                                                                         ??_itoa_new 001B  
                                                                       SendData@data 0014  
                                                                       ??_AvgMeasure 0035  
                                                                      _CANMessageGet 0618  
                                                                       _average_dist 004C  
                                                                            postdec2 000FDD  
                                                                            postinc0 000FEE  
                                                                            postinc2 000FDE  
                                                                       ??_Clock_Init 0010  
                                                              __size_of_GPIOPinWrite 0092  
                                                                          _PORTBbits 000F81  
                                                                __end_of_CANIntClear 1D90  
                                                                     CANSetMode@mode 0012  
                                                                          _TRISBbits 000F93  
                                                                          _TRISDbits 000F95  
                                                                 __end_of_AvgMeasure 19F6  
                                                                CANSetMask@ui8IDType 0012  
                                                                 __end_of_Clock_Init 20F6  
                                                                        _CCP1CONbits 000FBD  
                                                                        ___ftdiv@exp 0028  
                                                                       _rxCANMessage 00B5  
                                                                  __size_of_LCD_Init 007C  
                                                                     ?_CANMessageGet 0010  
                                                                       _GPIOPinWrite 1C72  
                                                                    CANIntClear@type 0010  
                                                                  main@response_time 0091  
                                                                start_initialization 222E  
                                                                        __end_of_ISR 00D4  
                                                      CANMessageGet@rxBuffer_ptr_976 001B  
                                                                  __size_of_LedsInit 000E  
                                                                  __size_of_SendData 009C  
                                                               __size_of_Hcsr04_Init 0018  
                                                                       ?_SendCommand 0001  
                                                                        _CANIntClear 1D04  
                                                                           ?_CANInit 0001  
                                                                  __size_of___ftpack 00C4  
                                                                        __pbssCOMRAM 0036  
                                                                  __size_of___lwtoft 0028  
                                                                      __pcstackBANK0 0060  
                                                              SendCommand@command_id 0014  
                                                               LCD_DispString@StrPtr 0015  
                                                                           ?_ComInit 0001  
                                                                    ??_CANMessageGet 0060  
                                                                       ?_Timer1_Init 0001  
                                                                   ___lwdiv@dividend 0010  
                                                                  __size_of_itoa_new 00A8  
                                                                          __pintcode 0008  
                                                                           ?___ftdiv 001B  
                                                                           ?___fttol 002A  
                                                                           ?___lwdiv 0010  
                                                                           ?___lwmod 0010  
                                                      Clock_Init@ulConstCompareValue 0010  
                                                                          _ui8Status 004E  
                                                              _GPIOPinTypeGPIOOutput 1F12  
                                                                        __smallconst 0600  
                                                                        _COMSTATbits 000F74  
                                                              CANMessageGet@data_ptr 0017  
                                                                   ___lwdiv@quotient 0015  
                                                                 CANMessageGet@i_975 0019  
                                                                        _clockcounts 004A  
                                                                           _LCD_Init 1E1C  
                                                                           _LATDbits 000F8C  
                                                           CANMessageSend@TXBDLC_PTR 002B  
                                                                           _PIE1bits 000F9D  
                                                           CANMessageSend@TXBCON_PTR 0027  
                                                                           _PIR1bits 000F9E  
                                                                           _PIR3bits 000FA4  
                                                                           _RXB0EIDH 000F63  
                                                                           _RXB0EIDL 000F64  
                                                                           _RXB1EIDH 000F53  
                                                                           _RXB1EIDL 000F54  
                                                                           _RXB0SIDH 000F61  
                                                                           _RXB0SIDL 000F62  
                                                                           _RXB1SIDH 000F51  
                                                                           _RXB1SIDL 000F52  
                                                                           _RXF0SIDH 000F00  
                                                                           _RXF1SIDH 000F04  
                                                                           _RXF2SIDH 000F08  
                                                                           _RXF3SIDH 000F0C  
                                                                           _RXF4SIDH 000F10  
                                                                           _RXF5SIDH 000F14  
                                                                           _RXM0EIDH 000F1A  
                                                                           _RXM0EIDL 000F1B  
                                                                           _RXM1EIDH 000F1E  
                                                                           _RXM1EIDL 000F1F  
                                                              __end_ofi2_CANIntClear 1E1C  
                                                                           _RXM0SIDH 000F18  
                                                                           _RXM0SIDL 000F19  
                                                                           _RXM1SIDH 000F1C  
                                                                           _RXM1SIDL 000F1D  
                                                            __size_of_CANMessageSend 0360  
                                                                      ?_CANIntEnable 0001  
                                                            __size_of_CANSetBaudRate 007A  
                                                                          main@Reply 0097  
                                                                   __size_of_CANInit 000E  
                                                            __size_of_LCD_DispString 0060  
                                                                      ?_CANIntStatus 0001  
                                                                      ?_CANSetFilter 0010  
                                                                           _LedsInit 227E  
                                                                   __size_of_ComInit 005E  
                                                                           _SendData 1B3A  
                                                                           __Hrparam 0000  
                                                                       _RXB0SIDLbits 000F62  
                                                                           __Lrparam 0000  
                                                                       _RXB1SIDLbits 000F52  
                                                                         _CANSetMask 0F6A  
                                                                         _CANSetMode 20F6  
                                                                     ??_CANIntEnable 0010  
                                                                   __size_of___ftdiv 00E6  
                                                                   __size_of___fttol 0110  
                                                                   __size_of___lwdiv 0060  
                                                               __size_of_SendCommand 009C  
                                                                   __size_of___lwmod 0050  
                                                                           ___ftpack 187A  
                                                             ?_GPIOPinTypeGPIOOutput 0010  
                                                                           ___lwtoft 2206  
                                                                 CANIntStatus@status 0001  
                                                                     ??_CANIntStatus 0001  
                                                                    ___lwdiv@divisor 0012  
                                                                    ___lwdiv@counter 0014  
                                                                     ??_CANSetFilter 0012  
                                                                           __ptext10 1C72  
                                                                           __ptext11 2254  
                                                                           __ptext20 229A  
                                                                           __ptext12 228C  
                                                                           __ptext21 209A  
                                                                           __ptext13 203C  
                                                                           __ptext30 226C  
                                                                           __ptext22 0C0A  
                                                                           __ptext14 20F6  
                                                                           __ptext23 0618  
                                                                           __ptext15 0F6A  
                                                                           __ptext32 1D90  
                                                                           __ptext24 193E  
                                                                           __ptext16 1492  
                                                                           __ptext33 21A0  
                                                                           __ptext25 2206  
                                                                           __ptext17 1E98  
                                                                           __ptext26 1FDC  
                                                                           __ptext18 1BD6  
                                                                           __ptext27 1684  
                                                                           __ptext19 1D04  
                                                                           __ptext28 1794  
                                                                           __ptext29 187A  
                                                            __size_of_Hcsr04_Trigger 0012  
                                                                           _distance 0048  
                                                           CANMessageGet@psMsgObject 0010  
                                                                    CANMessageSend@i 0021  
                                                          CANMessageGet@data_ptr_977 001D  
                                                                      __size_of_main 0242  
                                                                           _itoa_new 19F6  
                                                                           _tickcntr 00AD  
                                                          GPIOPinTypeGPIOOutput@Mask 0010  
                                                                         _LCD_GoToXy 21DC  
                                                          GPIOPinTypeGPIOOutput@Port 0011  
                                                               __size_of_Timer1_Init 000E  
                                                                           int$flags 0050  
                                                                       ?_CANIntClear 0001  
                                                                  CANSetMask@pObject 0010  
                                                                           _str_dist 00C7  
                                                                        _RXB0CONbits 000F60  
                                                                        _RXB1CONbits 000F50  
                                                                         _INTCONbits 000FF2  
                                                             CANSetBaudRate@baudrate 0010  
                                                                           intlevel2 22A8  
                                                                   ___lwmod@dividend 0010  
                                                                      ??_Hcsr04_Init 0010  
                                                        CANMessageGet@bClrPendingInt 0012  
                                                          CANMessageSend@psMsgObject 0010  
                                                                  _Sync_Arrival_Time 00A9  
                                                                     _CANMessageSend 0C0A  
                                                                        ?_CANSetMask 0010  
                                                                        ?_CANSetMode 0001  
                                                                     _CANSetBaudRate 1E98  
                                                                     _LCD_DispString 1F7C  
                                                                    ___lwmod@divisor 0012  
                                                                    ___lwmod@counter 0014  
                                                    CANSetFilter@FILTER_BASE_ADDRESS 001F  
                                                               __end_of_CANIntEnable 1C72  
                                                               __end_of_CANIntStatus 21DC  
                                                              __end_of_CANMessageGet 0C0A  
                                                             __end_of_CANMessageSend 0F6A  
