

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Aug 10 17:33:32 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 1.41
    50                           ; Generated 25/01/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F458 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	smallconst
    85  000600                     __psmallconst:
    86                           	opt stack 0
    87  000600  00                 	db	0
    88  000601                     _speed:
    89                           	opt stack 0
    90  000601  4268               	dw	17000
    91  000603                     __end_of_speed:
    92                           	opt stack 0
    93  0000                     _TXB1CON	set	3888
    94  0000                     _RXB1DLC	set	3925
    95  0000                     _RXB1EIDL	set	3924
    96  0000                     _RXB1EIDH	set	3923
    97  0000                     _RXB1SIDL	set	3922
    98  0000                     _RXB1SIDH	set	3921
    99  0000                     _RXB1SIDLbits	set	3922
   100  0000                     _RXB1CONbits	set	3920
   101  0000                     _RXM1EIDL	set	3871
   102  0000                     _RXM1EIDH	set	3870
   103  0000                     _RXM1SIDL	set	3869
   104  0000                     _RXM1SIDH	set	3868
   105  0000                     _RXB1CON	set	3920
   106  0000                     _RXM0EIDL	set	3867
   107  0000                     _RXM0EIDH	set	3866
   108  0000                     _RXM0SIDL	set	3865
   109  0000                     _RXM0SIDH	set	3864
   110  0000                     _TXB0CON	set	3904
   111  0000                     _RXB1D0	set	3926
   112  0000                     _RXF5SIDH	set	3860
   113  0000                     _RXF4SIDH	set	3856
   114  0000                     _RXF3SIDH	set	3852
   115  0000                     _RXF2SIDH	set	3848
   116  0000                     _RXF1SIDH	set	3844
   117  0000                     _RXF0SIDH	set	3840
   118  0000                     _TMR1	set	4046
   119  0000                     _T3CONbits	set	4017
   120  0000                     _PIE1bits	set	3997
   121  0000                     _CCP1CONbits	set	4029
   122  0000                     _CCPR1H	set	4031
   123  0000                     _CCPR1L	set	4030
   124  0000                     _TMR3L	set	4018
   125  0000                     _TMR3H	set	4019
   126  0000                     _COMSTATbits	set	3956
   127  0000                     _PIE3	set	4003
   128  0000                     _RXB0DLC	set	3941
   129  0000                     _RXB0EIDL	set	3940
   130  0000                     _RXB0EIDH	set	3939
   131  0000                     _RXB0SIDL	set	3938
   132  0000                     _RXB0SIDH	set	3937
   133  0000                     _RXB0SIDLbits	set	3938
   134  0000                     _RXB0CONbits	set	3936
   135  0000                     _PIR3	set	4004
   136  0000                     _RXB0CON	set	3936
   137  0000                     _BRGCON3	set	3954
   138  0000                     _BRGCON2	set	3953
   139  0000                     _BRGCON1	set	3952
   140  0000                     _CANSTAT	set	3950
   141  0000                     _CANCON	set	3951
   142  0000                     _CIOCON	set	3955
   143  0000                     _TRISDbits	set	3989
   144  0000                     _TRISBbits	set	3987
   145  0000                     _PORTE	set	3972
   146  0000                     _PORTD	set	3971
   147  0000                     _PORTC	set	3970
   148  0000                     _PORTB	set	3969
   149  0000                     _PORTA	set	3968
   150  0000                     _LATE	set	3981
   151  0000                     _LATD	set	3980
   152  0000                     _LATC	set	3979
   153  0000                     _LATB	set	3978
   154  0000                     _LATA	set	3977
   155  0000                     _TRISE	set	3990
   156  0000                     _TRISD	set	3989
   157  0000                     _TRISC	set	3988
   158  0000                     _TRISB	set	3987
   159  0000                     _TRISA	set	3986
   160  0000                     _PIR1bits	set	3998
   161  0000                     _PORTBbits	set	3969
   162  0000                     _INTCONbits	set	4082
   163  0000                     _LATDbits	set	3980
   164  0000                     _PIR3bits	set	4004
   165  0000                     _RXB0D0	set	3942
   166  0000                     _T1CKPS0	set	32364
   167  0000                     _T1CKPS1	set	32365
   168  0000                     _TMR1CS	set	32361
   169  0000                     _T1RD16	set	32367
   170  0000                     _TMR1ON	set	32360
   171  0000                     _GIE	set	32663
   172  000603                     STR_1:
   173  000603  48                 	db	72	;'H'
   174  000604  65                 	db	101	;'e'
   175  000605  69                 	db	105	;'i'
   176  000606  67                 	db	103	;'g'
   177  000607  68                 	db	104	;'h'
   178  000608  74                 	db	116	;'t'
   179  000609  3D                 	db	61	;'='
   180  00060A  20                 	db	32
   181  00060B  20                 	db	32
   182  00060C  20                 	db	32
   183  00060D  20                 	db	32
   184  00060E  20                 	db	32
   185  00060F  20                 	db	32
   186  000610  63                 	db	99	;'c'
   187  000611  6D                 	db	109	;'m'
   188  000612  00                 	db	0
   189  000613                     STR_2:
   190  000613  58                 	db	88	;'X'
   191  000614  58                 	db	88	;'X'
   192  000615  58                 	db	88	;'X'
   193  000616  00                 	db	0
   194                           
   195                           ; #config settings
   196  000617  00                 	db	0	; dummy byte at the end
   197  0000                     
   198                           	psect	cinit
   199  002214                     __pcinit:
   200                           	opt stack 0
   201  002214                     start_initialization:
   202                           	opt stack 0
   203  002214                     __initialization:
   204                           	opt stack 0
   205                           
   206                           ; Clear objects allocated to BANK0 (34 bytes)
   207  002214  EE00  F0A9         	lfsr	0,__pbssBANK0
   208  002218  0E22               	movlw	34
   209  00221A                     clear_0:
   210  00221A  6AEE               	clrf	postinc0,c
   211  00221C  06E8               	decf	wreg,f,c
   212  00221E  E1FD               	bnz	clear_0
   213                           
   214                           ; Clear objects allocated to COMRAM (26 bytes)
   215  002220  EE00  F036         	lfsr	0,__pbssCOMRAM
   216  002224  0E1A               	movlw	26
   217  002226                     clear_1:
   218  002226  6AEE               	clrf	postinc0,c
   219  002228  06E8               	decf	wreg,f,c
   220  00222A  E1FD               	bnz	clear_1
   221  00222C                     end_of_initialization:
   222                           	opt stack 0
   223  00222C                     __end_of__initialization:
   224                           	opt stack 0
   225  00222C  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   226  00222E  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   227  002230  0E00               	movlw	low (__Lmediumconst shr (0+16))
   228  002232  6EF8               	movwf	tblptru,c
   229  002234  0100               	movlb	0
   230  002236  EF28  F009         	goto	_main	;jump to C main() function
   231                           tblptru	equ	0xFF8
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	bssCOMRAM
   236  000036                     __pbssCOMRAM:
   237                           	opt stack 0
   238  000036                     _Reply:
   239                           	opt stack 0
   240  000036                     	ds	18
   241  000048                     _distance:
   242                           	opt stack 0
   243  000048                     	ds	2
   244  00004A                     _clockcounts:
   245                           	opt stack 0
   246  00004A                     	ds	2
   247  00004C                     _average_dist:
   248                           	opt stack 0
   249  00004C                     	ds	2
   250  00004E                     _ui8Status:
   251                           	opt stack 0
   252  00004E                     	ds	1
   253  00004F                     _counter:
   254                           	opt stack 0
   255  00004F                     	ds	1
   256                           tblptru	equ	0xFF8
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           
   260                           	psect	bssBANK0
   261  0000A9                     __pbssBANK0:
   262                           	opt stack 0
   263  0000A9                     _Sync_Arrival_Time:
   264                           	opt stack 0
   265  0000A9                     	ds	4
   266  0000AD                     _tickcntr:
   267                           	opt stack 0
   268  0000AD                     	ds	4
   269  0000B1                     _dist:
   270                           	opt stack 0
   271  0000B1                     	ds	2
   272  0000B3                     _AllowTxFlag:
   273                           	opt stack 0
   274  0000B3                     	ds	1
   275  0000B4                     _bRxMsgFlag:
   276                           	opt stack 0
   277  0000B4                     	ds	1
   278  0000B5                     _rxCANMessage:
   279                           	opt stack 0
   280  0000B5                     	ds	18
   281  0000C7                     _str_dist:
   282                           	opt stack 0
   283  0000C7                     	ds	4
   284                           tblptru	equ	0xFF8
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           
   288                           	psect	cstackBANK0
   289  000060                     __pcstackBANK0:
   290                           	opt stack 0
   291  000060                     ??_CANMessageGet:
   292  000060                     ___fttol@sign1:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x0
   296  000060                     	ds	1
   297  000061                     ___fttol@lval:
   298                           	opt stack 0
   299                           
   300                           ; 4 bytes @ 0x1
   301  000061                     	ds	4
   302  000065                     ___fttol@exp1:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x5
   306  000065                     	ds	1
   307  000066                     AvgMeasure@counter:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x6
   311  000066                     	ds	1
   312  000067                     AvgMeasure@average_dist:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x7
   316  000067                     	ds	30
   317  000085                     ??_main:
   318                           
   319                           ; 1 bytes @ 0x25
   320  000085                     	ds	12
   321  000091                     main@response_time_ms:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x31
   325  000091                     	ds	2
   326  000093                     main@sync_period:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x33
   330  000093                     	ds	2
   331  000095                     main@ui16ReplyData:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x35
   335  000095                     	ds	2
   336  000097                     main@Reply:
   337                           	opt stack 0
   338                           
   339                           ; 18 bytes @ 0x37
   340  000097                     	ds	18
   341                           tblptru	equ	0xFF8
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345                           	psect	cstackCOMRAM
   346  000001                     __pcstackCOMRAM:
   347                           	opt stack 0
   348  000001                     CANIntStatus@status:
   349                           	opt stack 0
   350  000001                     i2CANIntClear@type:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x0
   354  000001                     	ds	1
   355  000002                     ??_ISR:
   356                           
   357                           ; 1 bytes @ 0x1
   358  000002                     	ds	14
   359  000010                     ??_CANSetMode:
   360  000010                     ?___lwdiv:
   361                           	opt stack 0
   362  000010                     ?___lwmod:
   363                           	opt stack 0
   364  000010                     ?___ftpack:
   365                           	opt stack 0
   366  000010                     GPIOPinTypeGPIOOutput@Mask:
   367                           	opt stack 0
   368  000010                     GPIOPinWrite@Mask:
   369                           	opt stack 0
   370  000010                     CANIntEnable@type:
   371                           	opt stack 0
   372  000010                     CANIntClear@type:
   373                           	opt stack 0
   374  000010                     CANSetMask@pObject:
   375                           	opt stack 0
   376  000010                     CANSetFilter@pObject:
   377                           	opt stack 0
   378  000010                     CANMessageGet@psMsgObject:
   379                           	opt stack 0
   380  000010                     CANMessageSend@psMsgObject:
   381                           	opt stack 0
   382  000010                     ___lwdiv@dividend:
   383                           	opt stack 0
   384  000010                     ___lwmod@dividend:
   385                           	opt stack 0
   386  000010                     ___ftpack@arg:
   387                           	opt stack 0
   388  000010                     CANSetBaudRate@baudrate:
   389                           	opt stack 0
   390  000010                     Clock_Init@ulConstCompareValue:
   391                           	opt stack 0
   392                           
   393                           ; 4 bytes @ 0xF
   394  000010                     	ds	1
   395  000011                     GPIOPinTypeGPIOOutput@Port:
   396                           	opt stack 0
   397  000011                     GPIOPinWrite@Data:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x10
   401  000011                     	ds	1
   402  000012                     ??_GPIOPinWrite:
   403  000012                     ??_CANSetFilter:
   404  000012                     CANSetMode@mode:
   405                           	opt stack 0
   406  000012                     CANSetMask@ui8IDType:
   407                           	opt stack 0
   408  000012                     CANMessageGet@bClrPendingInt:
   409                           	opt stack 0
   410  000012                     CANMessageSend@FrameType:
   411                           	opt stack 0
   412  000012                     ___lwdiv@divisor:
   413                           	opt stack 0
   414  000012                     ___lwmod@divisor:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x11
   418  000012                     	ds	1
   419  000013                     ??_CANMessageSend:
   420  000013                     GPIOPinWrite@Port:
   421                           	opt stack 0
   422  000013                     CANSetMask@bDoubleBuffer:
   423                           	opt stack 0
   424  000013                     ___ftpack@exp:
   425                           	opt stack 0
   426  000013                     CANMessageGet@i:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x12
   430  000013                     	ds	1
   431  000014                     ??_CANSetMask:
   432  000014                     SendCommand@command_id:
   433                           	opt stack 0
   434  000014                     SendData@data:
   435                           	opt stack 0
   436  000014                     ___ftpack@sign:
   437                           	opt stack 0
   438  000014                     ___lwdiv@counter:
   439                           	opt stack 0
   440  000014                     ___lwmod@counter:
   441                           	opt stack 0
   442  000014                     Clock_Init@ulCompareValue:
   443                           	opt stack 0
   444                           
   445                           ; 4 bytes @ 0x13
   446  000014                     	ds	1
   447  000015                     ??___ftpack:
   448  000015                     LCD_GoToXy@y:
   449                           	opt stack 0
   450  000015                     LCD_DispString@StrPtr:
   451                           	opt stack 0
   452  000015                     CANMessageGet@rxBuffer_ptr:
   453                           	opt stack 0
   454  000015                     ___lwdiv@quotient:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x14
   458  000015                     	ds	1
   459  000016                     LCD_GoToXy@x:
   460                           	opt stack 0
   461  000016                     CANSetFilter@RXFEIDH_PTR:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x15
   465  000016                     	ds	1
   466  000017                     ??_LCD_Init:
   467  000017                     itoa_new@val:
   468                           	opt stack 0
   469  000017                     CANMessageGet@data_ptr:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x16
   473  000017                     	ds	1
   474  000018                     ?___lwtoft:
   475                           	opt stack 0
   476  000018                     CANSetFilter@RXFEIDL_PTR:
   477                           	opt stack 0
   478  000018                     ___lwtoft@c:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x17
   482  000018                     	ds	1
   483  000019                     CANSetMask@ui8CanBfrNum:
   484                           	opt stack 0
   485  000019                     itoa_new@str:
   486                           	opt stack 0
   487  000019                     CANMessageGet@i_975:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x18
   491  000019                     	ds	1
   492  00001A                     CANSetFilter@ui8CanFltrNum:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x19
   496  00001A                     	ds	1
   497  00001B                     ?___ftdiv:
   498                           	opt stack 0
   499  00001B                     itoa_new@temp_val:
   500                           	opt stack 0
   501  00001B                     CANSetFilter@RXFSIDH_PTR:
   502                           	opt stack 0
   503  00001B                     CANMessageGet@rxBuffer_ptr_976:
   504                           	opt stack 0
   505  00001B                     CANMessageSend@TXBEIDH_PTR:
   506                           	opt stack 0
   507  00001B                     ___ftdiv@f1:
   508                           	opt stack 0
   509                           
   510                           ; 3 bytes @ 0x1A
   511  00001B                     	ds	2
   512  00001D                     CANSetFilter@RXFSIDL_PTR:
   513                           	opt stack 0
   514  00001D                     CANMessageGet@data_ptr_977:
   515                           	opt stack 0
   516  00001D                     CANMessageSend@TXBEIDL_PTR:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x1C
   520  00001D                     	ds	1
   521  00001E                     ___ftdiv@f2:
   522                           	opt stack 0
   523                           
   524                           ; 3 bytes @ 0x1D
   525  00001E                     	ds	1
   526  00001F                     CANMessageGet@RXMsgFlag:
   527                           	opt stack 0
   528  00001F                     CANSetFilter@FILTER_BASE_ADDRESS:
   529                           	opt stack 0
   530  00001F                     CANMessageSend@TXBD0_PTR:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x1E
   534  00001F                     	ds	2
   535  000021                     ??___ftdiv:
   536  000021                     CANMessageSend@i:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x20
   540  000021                     	ds	2
   541  000023                     CANMessageSend@data_reg_ptr:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x22
   545  000023                     	ds	1
   546  000024                     ___ftdiv@cntr:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x23
   550  000024                     	ds	1
   551  000025                     CANMessageSend@data_ptr:
   552                           	opt stack 0
   553  000025                     ___ftdiv@f3:
   554                           	opt stack 0
   555                           
   556                           ; 3 bytes @ 0x24
   557  000025                     	ds	2
   558  000027                     CANMessageSend@TXBCON_PTR:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x26
   562  000027                     	ds	1
   563  000028                     ___ftdiv@exp:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x27
   567  000028                     	ds	1
   568  000029                     ___ftdiv@sign:
   569                           	opt stack 0
   570  000029                     CANMessageSend@TXBSIDH_PTR:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x28
   574  000029                     	ds	1
   575  00002A                     ?___fttol:
   576                           	opt stack 0
   577  00002A                     ___fttol@f1:
   578                           	opt stack 0
   579                           
   580                           ; 3 bytes @ 0x29
   581  00002A                     	ds	1
   582  00002B                     CANMessageSend@TXBDLC_PTR:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x2A
   586  00002B                     	ds	2
   587  00002D                     CANMessageSend@TXB_BASE_ADDRESS:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x2C
   591  00002D                     	ds	1
   592  00002E                     ??___fttol:
   593                           
   594                           ; 1 bytes @ 0x2D
   595  00002E                     	ds	1
   596  00002F                     CANMessageSend@TXBSIDL_PTR:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x2E
   600  00002F                     	ds	4
   601  000033                     ?_AvgMeasure:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x32
   605  000033                     	ds	2
   606  000035                     ??_AvgMeasure:
   607                           
   608                           ; 1 bytes @ 0x34
   609  000035                     	ds	1
   610                           tblptru	equ	0xFF8
   611                           postinc0	equ	0xFEE
   612                           wreg	equ	0xFE8
   613                           
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 131 in file "main.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  Reply          18   55[BANK0 ] struct .
   624 ;;  ui16ReplyDat    2   53[BANK0 ] unsigned int 
   625 ;;  sync_period     2   51[BANK0 ] unsigned int 
   626 ;;  response_tim    2   49[BANK0 ] unsigned int 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  2   65[None  ] int 
   629 ;; Registers used:
   630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   636 ;;      Params:         0       0       0       0       0       0       0
   637 ;;      Locals:         0      24       0       0       0       0       0
   638 ;;      Temps:          0      12       0       0       0       0       0
   639 ;;      Totals:         0      36       0       0       0       0       0
   640 ;;Total ram usage:       36 bytes
   641 ;; Hardware stack levels required when called:    6
   642 ;; This function calls:
   643 ;;		_AvgMeasure
   644 ;;		_CANMessageGet
   645 ;;		_CANMessageSend
   646 ;;		_Clock_Init
   647 ;;		_ComInit
   648 ;;		_Hcsr04_Init
   649 ;;		_LCD_DispString
   650 ;;		_LCD_GoToXy
   651 ;;		_LCD_Init
   652 ;;		_LedsInit
   653 ;;		_itoa_new
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text0
   660  001250                     __ptext0:
   661                           	opt stack 0
   662  001250                     _main:
   663                           	opt stack 0
   664  001250  FFFF               	dw	65535	; assembler added errata NOP
   665                           
   666                           ;main.c: 135: uint16_t ui16ReplyData = 0 ;
   667                           
   668                           ;incstack = 0
   669  001252  0E00               	movlw	0
   670  001254  0100               	movlb	0	; () banked
   671  001256  6F96               	movwf	(main@ui16ReplyData+1)& (0+255),b
   672  001258  0E00               	movlw	0
   673  00125A  6F95               	movwf	main@ui16ReplyData& (0+255),b
   674                           
   675                           ;main.c: 145: uint16_t response_time_ms = 0;
   676  00125C  0E00               	movlw	0
   677  00125E  0100               	movlb	0	; () banked
   678  001260  6F92               	movwf	(main@response_time_ms+1)& (0+255),b
   679  001262  0E00               	movlw	0
   680  001264  6F91               	movwf	main@response_time_ms& (0+255),b
   681                           
   682                           ;main.c: 146: uint16_t sync_period = 0;
   683  001266  0E00               	movlw	0
   684  001268  0100               	movlb	0	; () banked
   685  00126A  6F94               	movwf	(main@sync_period+1)& (0+255),b
   686  00126C  0E00               	movlw	0
   687  00126E  6F93               	movwf	main@sync_period& (0+255),b
   688                           
   689                           ;main.c: 147: rxCANMessage.ui32MsgID = 0x100;
   690  001270  0E00               	movlw	0
   691  001272  0100               	movlb	0	; () banked
   692  001274  6FB5               	movwf	_rxCANMessage& (0+255),b
   693  001276  0E01               	movlw	1
   694  001278  6FB6               	movwf	(_rxCANMessage+1)& (0+255),b
   695  00127A  0E00               	movlw	0
   696  00127C  6FB7               	movwf	(_rxCANMessage+2)& (0+255),b
   697  00127E  0E00               	movlw	0
   698  001280  6FB8               	movwf	(_rxCANMessage+3)& (0+255),b
   699                           
   700                           ;main.c: 148: rxCANMessage.ui32MsgIDMask = 0x7ff;
   701  001282  0EFF               	movlw	255
   702  001284  0100               	movlb	0	; () banked
   703  001286  6FB9               	movwf	(_rxCANMessage+4)& (0+255),b
   704  001288  0E07               	movlw	7
   705  00128A  6FBA               	movwf	(_rxCANMessage+5)& (0+255),b
   706  00128C  0E00               	movlw	0
   707  00128E  6FBB               	movwf	(_rxCANMessage+6)& (0+255),b
   708  001290  0E00               	movlw	0
   709  001292  6FBC               	movwf	(_rxCANMessage+7)& (0+255),b
   710                           
   711                           ; BSR set to: 0
   712                           ;main.c: 149: rxCANMessage.pui8MsgData = (uint8_t *)&sync_period;
   713  001294  0E93               	movlw	low main@sync_period
   714  001296  0100               	movlb	0	; () banked
   715  001298  6FC5               	movwf	(_rxCANMessage+16)& (0+255),b
   716  00129A  0E00               	movlw	high main@sync_period
   717  00129C  0100               	movlb	0	; () banked
   718  00129E  6FC6               	movwf	(_rxCANMessage+17)& (0+255),b
   719                           
   720                           ; BSR set to: 0
   721                           ;main.c: 152: tCANMsgObject Reply;
   722                           ;main.c: 158: Reply.ui32MsgID = ((0x02<<8) | (0x01)) ;
   723  0012A0  0E01               	movlw	1
   724  0012A2  0100               	movlb	0	; () banked
   725  0012A4  6F97               	movwf	main@Reply& (0+255),b
   726  0012A6  0E02               	movlw	2
   727  0012A8  6F98               	movwf	(main@Reply+1)& (0+255),b
   728  0012AA  0E00               	movlw	0
   729  0012AC  6F99               	movwf	(main@Reply+2)& (0+255),b
   730  0012AE  0E00               	movlw	0
   731  0012B0  6F9A               	movwf	(main@Reply+3)& (0+255),b
   732                           
   733                           ; BSR set to: 0
   734                           ;main.c: 159: Reply.ui32MsgLen = sizeof(ui16ReplyData);
   735  0012B2  0E02               	movlw	2
   736  0012B4  0100               	movlb	0	; () banked
   737  0012B6  6FA3               	movwf	(main@Reply+12)& (0+255),b
   738  0012B8  0E00               	movlw	0
   739  0012BA  6FA4               	movwf	(main@Reply+13)& (0+255),b
   740  0012BC  0E00               	movlw	0
   741  0012BE  6FA5               	movwf	(main@Reply+14)& (0+255),b
   742  0012C0  0E00               	movlw	0
   743  0012C2  6FA6               	movwf	(main@Reply+15)& (0+255),b
   744                           
   745                           ; BSR set to: 0
   746                           ;main.c: 160: Reply.pui8MsgData = (uint8_t *)(&ui16ReplyData);
   747  0012C4  0E95               	movlw	low main@ui16ReplyData
   748  0012C6  0100               	movlb	0	; () banked
   749  0012C8  6FA7               	movwf	(main@Reply+16)& (0+255),b
   750  0012CA  0E00               	movlw	high main@ui16ReplyData
   751  0012CC  0100               	movlb	0	; () banked
   752  0012CE  6FA8               	movwf	(main@Reply+17)& (0+255),b
   753                           
   754                           ; BSR set to: 0
   755                           ;main.c: 163: Clock_Init();
   756  0012D0  EC40  F010         	call	_Clock_Init	;wreg free
   757                           
   758                           ;main.c: 164: ComInit();
   759  0012D4  EC11  F010         	call	_ComInit	;wreg free
   760                           
   761                           ;main.c: 165: LedsInit();
   762  0012D8  EC32  F011         	call	_LedsInit	;wreg free
   763                           
   764                           ;main.c: 166: Hcsr04_Init();
   765  0012DC  EC1D  F011         	call	_Hcsr04_Init	;wreg free
   766                           
   767                           ;main.c: 167: LCD_Init();
   768  0012E0  EC01  F00F         	call	_LCD_Init	;wreg free
   769                           
   770                           ;main.c: 169: LCD_DispString("Height=      cm");
   771  0012E4  0E03               	movlw	low STR_1
   772  0012E6  6E15               	movwf	LCD_DispString@StrPtr,c
   773  0012E8  0E06               	movlw	high STR_1
   774  0012EA  6E16               	movwf	LCD_DispString@StrPtr+1,c
   775  0012EC  ECB1  F00F         	call	_LCD_DispString	;wreg free
   776  0012F0                     l3123:
   777  0012F0  FFFF               	dw	65535	; assembler added errata NOP
   778                           
   779                           ;main.c: 172: {
   780                           ;main.c: 174: dist = AvgMeasure();
   781  0012F2  EC92  F00C         	call	_AvgMeasure	;wreg free
   782  0012F6  C033  F0B1         	movff	?_AvgMeasure,_dist
   783  0012FA  C034  F0B2         	movff	?_AvgMeasure+1,_dist+1
   784                           
   785                           ;main.c: 177: if(dist<400)
   786  0012FE  0E90               	movlw	144
   787  001300  0100               	movlb	0	; () banked
   788  001302  5DB1               	subwf	_dist& (0+255),w,b
   789  001304  0E01               	movlw	1
   790  001306  0100               	movlb	0	; () banked
   791  001308  59B2               	subwfb	(_dist+1)& (0+255),w,b
   792  00130A  B0D8               	btfsc	status,0,c
   793  00130C  D016               	goto	l3133
   794                           
   795                           ; BSR set to: 0
   796                           ;main.c: 178: {
   797                           ;main.c: 179: itoa_new(dist, str_dist);
   798  00130E  C0B1  F017         	movff	_dist,itoa_new@val
   799  001312  C0B2  F018         	movff	_dist+1,itoa_new@val+1
   800  001316  0EC7               	movlw	low _str_dist
   801  001318  6E19               	movwf	itoa_new@str,c
   802  00131A  0E00               	movlw	high _str_dist
   803  00131C  6E1A               	movwf	itoa_new@str+1,c
   804  00131E  ECEE  F00C         	call	_itoa_new	;wreg free
   805                           
   806                           ;main.c: 180: LCD_GoToXy(8,0);
   807  001322  0E00               	movlw	0
   808  001324  6E15               	movwf	LCD_GoToXy@y,c
   809  001326  0E08               	movlw	8
   810  001328  ECE1  F010         	call	_LCD_GoToXy
   811                           
   812                           ;main.c: 181: LCD_DispString(str_dist);
   813  00132C  0EC7               	movlw	low _str_dist
   814  00132E  6E15               	movwf	LCD_DispString@StrPtr,c
   815  001330  0E00               	movlw	high _str_dist
   816  001332  6E16               	movwf	LCD_DispString@StrPtr+1,c
   817  001334  ECB1  F00F         	call	_LCD_DispString	;wreg free
   818                           
   819                           ;main.c: 182: }
   820  001338  D00C               	goto	l3137
   821  00133A                     l3133:
   822  00133A  FFFF               	dw	65535	; assembler added errata NOP
   823                           
   824                           ;main.c: 184: else
   825                           ;main.c: 185: {
   826                           ;main.c: 186: LCD_GoToXy(8,0);
   827  00133C  0E00               	movlw	0
   828  00133E  6E15               	movwf	LCD_GoToXy@y,c
   829  001340  0E08               	movlw	8
   830  001342  ECE1  F010         	call	_LCD_GoToXy
   831                           
   832                           ;main.c: 187: LCD_DispString("XXX");
   833  001346  0E13               	movlw	low STR_2
   834  001348  6E15               	movwf	LCD_DispString@StrPtr,c
   835  00134A  0E06               	movlw	high STR_2
   836  00134C  6E16               	movwf	LCD_DispString@StrPtr+1,c
   837  00134E  ECB1  F00F         	call	_LCD_DispString	;wreg free
   838  001352                     l3137:
   839  001352  FFFF               	dw	65535	; assembler added errata NOP
   840                           
   841                           ;main.c: 188: }
   842                           ;main.c: 193: ui16ReplyData = dist;
   843  001354  C0B1  F095         	movff	_dist,main@ui16ReplyData
   844  001358  C0B2  F096         	movff	_dist+1,main@ui16ReplyData+1
   845                           
   846                           ;main.c: 196: if( bRxMsgFlag == 1 )
   847  00135C  0100               	movlb	0	; () banked
   848  00135E  05B4               	decf	_bRxMsgFlag& (0+255),w,b	;volatile
   849  001360  A4D8               	btfss	status,2,c
   850  001362  D027               	goto	l3155
   851                           
   852                           ; BSR set to: 0
   853                           ;main.c: 197: {
   854                           ;main.c: 198: GIE = 0;
   855  001364  9EF2               	bcf	intcon,7,c	;volatile
   856                           
   857                           ; BSR set to: 0
   858                           ;main.c: 199: CANMessageGet( &rxCANMessage, 0 );
   859  001366  0EB5               	movlw	low _rxCANMessage
   860  001368  6E10               	movwf	CANMessageGet@psMsgObject,c
   861  00136A  0E00               	movlw	high _rxCANMessage
   862  00136C  6E11               	movwf	CANMessageGet@psMsgObject+1,c
   863  00136E  0E00               	movlw	0
   864  001370  6E12               	movwf	CANMessageGet@bClrPendingInt,c
   865  001372  EC0C  F003         	call	_CANMessageGet	;wreg free
   866                           
   867                           ;main.c: 201: Sync_Arrival_Time = tickcntr;
   868  001376  C0AD  F0A9         	movff	_tickcntr,_Sync_Arrival_Time	;volatile
   869  00137A  C0AE  F0AA         	movff	_tickcntr+1,_Sync_Arrival_Time+1	;volatile
   870  00137E  C0AF  F0AB         	movff	_tickcntr+2,_Sync_Arrival_Time+2	;volatile
   871  001382  C0B0  F0AC         	movff	_tickcntr+3,_Sync_Arrival_Time+3	;volatile
   872                           
   873                           ;main.c: 202: GIE = 1;
   874  001386  8EF2               	bsf	intcon,7,c	;volatile
   875                           
   876                           ;main.c: 204: bRxMsgFlag = 0;
   877  001388  0E00               	movlw	0
   878  00138A  0100               	movlb	0	; () banked
   879  00138C  6FB4               	movwf	_bRxMsgFlag& (0+255),b	;volatile
   880                           
   881                           ; BSR set to: 0
   882                           ;main.c: 208: if( rxCANMessage.ui32MsgID == 0x100 )
   883  00138E  0100               	movlb	0	; () banked
   884  001390  05B6               	decf	(_rxCANMessage+1)& (0+255),w,b
   885  001392  0100               	movlb	0	; () banked
   886  001394  11B5               	iorwf	_rxCANMessage& (0+255),w,b
   887  001396  0100               	movlb	0	; () banked
   888  001398  11B7               	iorwf	(_rxCANMessage+2)& (0+255),w,b
   889  00139A  0100               	movlb	0	; () banked
   890  00139C  11B8               	iorwf	(_rxCANMessage+3)& (0+255),w,b
   891  00139E  A4D8               	btfss	status,2,c
   892  0013A0  D008               	goto	l3155
   893                           
   894                           ; BSR set to: 0
   895                           ;main.c: 209: {
   896                           ;main.c: 210: AllowTxFlag = 1;
   897  0013A2  0E01               	movlw	1
   898  0013A4  0100               	movlb	0	; () banked
   899  0013A6  6FB3               	movwf	_AllowTxFlag& (0+255),b	;volatile
   900                           
   901                           ;main.c: 211: response_time_ms = 10*0x01;
   902  0013A8  0E00               	movlw	0
   903  0013AA  0100               	movlb	0	; () banked
   904  0013AC  6F92               	movwf	(main@response_time_ms+1)& (0+255),b
   905  0013AE  0E0A               	movlw	10
   906  0013B0  6F91               	movwf	main@response_time_ms& (0+255),b
   907  0013B2                     l3155:
   908  0013B2  FFFF               	dw	65535	; assembler added errata NOP
   909                           
   910                           ; BSR set to: 0
   911                           ;main.c: 212: }
   912                           ;main.c: 214: }
   913                           ;main.c: 217: if( AllowTxFlag == 1)
   914  0013B4  0100               	movlb	0	; () banked
   915  0013B6  05B3               	decf	_AllowTxFlag& (0+255),w,b	;volatile
   916  0013B8  A4D8               	btfss	status,2,c
   917  0013BA  D053               	goto	l73
   918                           
   919                           ; BSR set to: 0
   920                           ;main.c: 218: {
   921                           ;main.c: 221: if( ( tickcntr - Sync_Arrival_Time ) > response_time_ms )
   922  0013BC  C0A9  F085         	movff	_Sync_Arrival_Time,??_main	;volatile
   923  0013C0  C0AA  F086         	movff	_Sync_Arrival_Time+1,??_main+1	;volatile
   924  0013C4  C0AB  F087         	movff	_Sync_Arrival_Time+2,??_main+2	;volatile
   925  0013C8  C0AC  F088         	movff	_Sync_Arrival_Time+3,??_main+3	;volatile
   926  0013CC  0100               	movlb	0	; () banked
   927  0013CE  1F85               	comf	??_main& (0+255),f,b
   928  0013D0  1F86               	comf	(??_main+1)& (0+255),f,b
   929  0013D2  1F87               	comf	(??_main+2)& (0+255),f,b
   930  0013D4  1F88               	comf	(??_main+3)& (0+255),f,b
   931  0013D6  2B85               	incf	??_main& (0+255),f,b
   932  0013D8  0E00               	movlw	0
   933  0013DA  2386               	addwfc	(??_main+1)& (0+255),f,b
   934  0013DC  2387               	addwfc	(??_main+2)& (0+255),f,b
   935  0013DE  2388               	addwfc	(??_main+3)& (0+255),f,b
   936  0013E0  0100               	movlb	0	; () banked
   937  0013E2  51AD               	movf	_tickcntr& (0+255),w,b	;volatile
   938  0013E4  0100               	movlb	0	; () banked
   939  0013E6  2585               	addwf	??_main& (0+255),w,b
   940  0013E8  0100               	movlb	0	; () banked
   941  0013EA  6F89               	movwf	(??_main+4)& (0+255),b
   942  0013EC  0100               	movlb	0	; () banked
   943  0013EE  51AE               	movf	(_tickcntr+1)& (0+255),w,b	;volatile
   944  0013F0  0100               	movlb	0	; () banked
   945  0013F2  2186               	addwfc	(??_main+1)& (0+255),w,b
   946  0013F4  0100               	movlb	0	; () banked
   947  0013F6  6F8A               	movwf	(??_main+5)& (0+255),b
   948  0013F8  0100               	movlb	0	; () banked
   949  0013FA  51AF               	movf	(_tickcntr+2)& (0+255),w,b	;volatile
   950  0013FC  0100               	movlb	0	; () banked
   951  0013FE  2187               	addwfc	(??_main+2)& (0+255),w,b
   952  001400  0100               	movlb	0	; () banked
   953  001402  6F8B               	movwf	(??_main+6)& (0+255),b
   954  001404  0100               	movlb	0	; () banked
   955  001406  51B0               	movf	(_tickcntr+3)& (0+255),w,b	;volatile
   956  001408  0100               	movlb	0	; () banked
   957  00140A  2188               	addwfc	(??_main+3)& (0+255),w,b
   958  00140C  0100               	movlb	0	; () banked
   959  00140E  6F8C               	movwf	(??_main+7)& (0+255),b
   960  001410  0100               	movlb	0	; () banked
   961  001412  5191               	movf	main@response_time_ms& (0+255),w,b
   962  001414  0100               	movlb	0	; () banked
   963  001416  6F8D               	movwf	(??_main+8)& (0+255),b
   964  001418  0100               	movlb	0	; () banked
   965  00141A  5192               	movf	(main@response_time_ms+1)& (0+255),w,b
   966  00141C  0100               	movlb	0	; () banked
   967  00141E  6F8E               	movwf	(??_main+9)& (0+255),b
   968  001420  0100               	movlb	0	; () banked
   969  001422  6B8F               	clrf	(??_main+10)& (0+255),b
   970  001424  0100               	movlb	0	; () banked
   971  001426  6B90               	clrf	(??_main+11)& (0+255),b
   972  001428  0100               	movlb	0	; () banked
   973  00142A  5189               	movf	(??_main+4)& (0+255),w,b
   974  00142C  0100               	movlb	0	; () banked
   975  00142E  5D8D               	subwf	(??_main+8)& (0+255),w,b
   976  001430  0100               	movlb	0	; () banked
   977  001432  518A               	movf	(??_main+5)& (0+255),w,b
   978  001434  0100               	movlb	0	; () banked
   979  001436  598E               	subwfb	(??_main+9)& (0+255),w,b
   980  001438  0100               	movlb	0	; () banked
   981  00143A  518B               	movf	(??_main+6)& (0+255),w,b
   982  00143C  0100               	movlb	0	; () banked
   983  00143E  598F               	subwfb	(??_main+10)& (0+255),w,b
   984  001440  0100               	movlb	0	; () banked
   985  001442  518C               	movf	(??_main+7)& (0+255),w,b
   986  001444  0100               	movlb	0	; () banked
   987  001446  5990               	subwfb	(??_main+11)& (0+255),w,b
   988  001448  B0D8               	btfsc	status,0,c
   989  00144A  D00B               	goto	l73
   990                           
   991                           ; BSR set to: 0
   992                           ;main.c: 222: {
   993                           ;main.c: 223: CANMessageSend( &Reply, 1<<2 );
   994  00144C  0E97               	movlw	low main@Reply
   995  00144E  6E10               	movwf	CANMessageSend@psMsgObject,c
   996  001450  0E00               	movlw	high main@Reply
   997  001452  6E11               	movwf	CANMessageSend@psMsgObject+1,c
   998  001454  0E04               	movlw	4
   999  001456  6E12               	movwf	CANMessageSend@FrameType,c
  1000  001458  EC05  F006         	call	_CANMessageSend	;wreg free
  1001                           
  1002                           ;main.c: 224: AllowTxFlag = 0;
  1003  00145C  0E00               	movlw	0
  1004  00145E  0100               	movlb	0	; () banked
  1005  001460  6FB3               	movwf	_AllowTxFlag& (0+255),b	;volatile
  1006  001462                     l73:
  1007  001462  FFFF               	dw	65535	; assembler added errata NOP
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main.c: 232: if(PIR3bits.ERRIF == 1)
  1011  001464  AAA4               	btfss	4004,5,c	;volatile
  1012  001466  D004               	goto	l74
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;main.c: 233: {
  1016                           ;main.c: 234: LATDbits.LD2 = 1;
  1017  001468  848C               	bsf	3980,2,c	;volatile
  1018                           
  1019                           ;main.c: 235: LATDbits.LD3 = 0;
  1020  00146A  968C               	bcf	3980,3,c	;volatile
  1021                           
  1022                           ;main.c: 237: PIR3bits.ERRIF = 0;
  1023  00146C  9AA4               	bcf	4004,5,c	;volatile
  1024                           
  1025                           ;main.c: 238: }
  1026  00146E  D740               	goto	l3123
  1027  001470                     l74:
  1028  001470  FFFF               	dw	65535	; assembler added errata NOP
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 239: else
  1032                           ;main.c: 240: {
  1033                           ;main.c: 241: LATDbits.LD3 = 1;
  1034  001472  868C               	bsf	3980,3,c	;volatile
  1035                           
  1036                           ;main.c: 242: LATDbits.LD2 = 0;
  1037  001474  948C               	bcf	3980,2,c	;volatile
  1038                           
  1039                           ; BSR set to: 0
  1040                           
  1041                           ; BSR set to: 0
  1042  001476  D73C               	goto	l3123
  1043  001478                     __end_of_main:
  1044                           	opt stack 0
  1045                           tblptru	equ	0xFF8
  1046                           intcon	equ	0xFF2
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           status	equ	0xFD8
  1050                           
  1051 ;; *************** function _itoa_new *****************
  1052 ;; Defined at:
  1053 ;;		line 113 in file "main.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  val             2   22[COMRAM] unsigned int 
  1056 ;;  str             2   24[COMRAM] PTR unsigned char 
  1057 ;;		 -> str_dist(4), 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  temp_val        2   26[COMRAM] unsigned int 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1069 ;;      Params:         4       0       0       0       0       0       0
  1070 ;;      Locals:         2       0       0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0
  1072 ;;      Totals:         6       0       0       0       0       0       0
  1073 ;;Total ram usage:        6 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    3
  1076 ;; This function calls:
  1077 ;;		___lwdiv
  1078 ;;		___lwmod
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text1
  1085  0019DC                     __ptext1:
  1086                           	opt stack 0
  1087  0019DC                     _itoa_new:
  1088                           	opt stack 0
  1089  0019DC  FFFF               	dw	65535	; assembler added errata NOP
  1090                           
  1091                           ;main.c: 115: uint16_t temp_val;
  1092                           ;main.c: 116: temp_val = val;
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;incstack = 0
  1096  0019DE  C017  F01B         	movff	itoa_new@val,itoa_new@temp_val
  1097  0019E2  C018  F01C         	movff	itoa_new@val+1,itoa_new@temp_val+1
  1098                           
  1099                           ;main.c: 117: str[0] = (temp_val / 100) + 48;
  1100  0019E6  C01B  F010         	movff	itoa_new@temp_val,___lwdiv@dividend
  1101  0019EA  C01C  F011         	movff	itoa_new@temp_val+1,___lwdiv@dividend+1
  1102  0019EE  0E00               	movlw	0
  1103  0019F0  6E13               	movwf	___lwdiv@divisor+1,c
  1104  0019F2  0E64               	movlw	100
  1105  0019F4  6E12               	movwf	___lwdiv@divisor,c
  1106  0019F6  ECE1  F00F         	call	___lwdiv	;wreg free
  1107  0019FA  5010               	movf	?___lwdiv,w,c
  1108  0019FC  0F30               	addlw	48
  1109  0019FE  C019  FFD9         	movff	itoa_new@str,fsr2l
  1110  001A02  C01A  FFDA         	movff	itoa_new@str+1,fsr2h
  1111  001A06  6EDF               	movwf	indf2,c
  1112                           
  1113                           ;main.c: 118: temp_val = (temp_val % 100);
  1114  001A08  C01B  F010         	movff	itoa_new@temp_val,___lwmod@dividend
  1115  001A0C  C01C  F011         	movff	itoa_new@temp_val+1,___lwmod@dividend+1
  1116  001A10  0E00               	movlw	0
  1117  001A12  6E13               	movwf	___lwmod@divisor+1,c
  1118  001A14  0E64               	movlw	100
  1119  001A16  6E12               	movwf	___lwmod@divisor,c
  1120  001A18  EC9B  F010         	call	___lwmod	;wreg free
  1121  001A1C  C010  F01B         	movff	?___lwmod,itoa_new@temp_val
  1122  001A20  C011  F01C         	movff	?___lwmod+1,itoa_new@temp_val+1
  1123                           
  1124                           ;main.c: 119: str[1] = (temp_val / 10) + 48;
  1125  001A24  EE20 F001          	lfsr	2,1
  1126  001A28  5019               	movf	itoa_new@str,w,c
  1127  001A2A  26D9               	addwf	fsr2l,f,c
  1128  001A2C  501A               	movf	itoa_new@str+1,w,c
  1129  001A2E  22DA               	addwfc	fsr2h,f,c
  1130  001A30  C01B  F010         	movff	itoa_new@temp_val,___lwdiv@dividend
  1131  001A34  C01C  F011         	movff	itoa_new@temp_val+1,___lwdiv@dividend+1
  1132  001A38  0E00               	movlw	0
  1133  001A3A  6E13               	movwf	___lwdiv@divisor+1,c
  1134  001A3C  0E0A               	movlw	10
  1135  001A3E  6E12               	movwf	___lwdiv@divisor,c
  1136  001A40  ECE1  F00F         	call	___lwdiv	;wreg free
  1137  001A44  5010               	movf	?___lwdiv,w,c
  1138  001A46  0F30               	addlw	48
  1139  001A48  6EDF               	movwf	indf2,c
  1140                           
  1141                           ;main.c: 120: str[2] = (temp_val % 10) + 48;
  1142  001A4A  EE20 F002          	lfsr	2,2
  1143  001A4E  5019               	movf	itoa_new@str,w,c
  1144  001A50  26D9               	addwf	fsr2l,f,c
  1145  001A52  501A               	movf	itoa_new@str+1,w,c
  1146  001A54  22DA               	addwfc	fsr2h,f,c
  1147  001A56  C01B  F010         	movff	itoa_new@temp_val,___lwmod@dividend
  1148  001A5A  C01C  F011         	movff	itoa_new@temp_val+1,___lwmod@dividend+1
  1149  001A5E  0E00               	movlw	0
  1150  001A60  6E13               	movwf	___lwmod@divisor+1,c
  1151  001A62  0E0A               	movlw	10
  1152  001A64  6E12               	movwf	___lwmod@divisor,c
  1153  001A66  EC9B  F010         	call	___lwmod	;wreg free
  1154  001A6A  5010               	movf	?___lwmod,w,c
  1155  001A6C  0F30               	addlw	48
  1156  001A6E  6EDF               	movwf	indf2,c
  1157                           
  1158                           ;main.c: 121: str[3] = '\0';
  1159  001A70  EE20 F003          	lfsr	2,3
  1160  001A74  5019               	movf	itoa_new@str,w,c
  1161  001A76  26D9               	addwf	fsr2l,f,c
  1162  001A78  501A               	movf	itoa_new@str+1,w,c
  1163  001A7A  22DA               	addwfc	fsr2h,f,c
  1164  001A7C  0E00               	movlw	0
  1165  001A7E  6EDF               	movwf	indf2,c
  1166  001A80  0012               	return		;funcret
  1167  001A82  FFFF               	dw	65535	; errata NOP
  1168  001A84                     __end_of_itoa_new:
  1169                           	opt stack 0
  1170                           tblptru	equ	0xFF8
  1171                           intcon	equ	0xFF2
  1172                           postinc0	equ	0xFEE
  1173                           wreg	equ	0xFE8
  1174                           indf2	equ	0xFDF
  1175                           fsr2h	equ	0xFDA
  1176                           fsr2l	equ	0xFD9
  1177                           status	equ	0xFD8
  1178                           
  1179 ;; *************** function ___lwmod *****************
  1180 ;; Defined at:
  1181 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  dividend        2   15[COMRAM] unsigned int 
  1184 ;;  divisor         2   17[COMRAM] unsigned int 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  counter         1   19[COMRAM] unsigned char 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  2   15[COMRAM] unsigned int 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1196 ;;      Params:         4       0       0       0       0       0       0
  1197 ;;      Locals:         1       0       0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0       0       0
  1199 ;;      Totals:         5       0       0       0       0       0       0
  1200 ;;Total ram usage:        5 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    2
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_itoa_new
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text2
  1211  002136                     __ptext2:
  1212                           	opt stack 0
  1213  002136                     ___lwmod:
  1214                           	opt stack 0
  1215  002136  FFFF               	dw	65535	; assembler added errata NOP
  1216                           
  1217                           ;incstack = 0
  1218  002138  5012               	movf	___lwmod@divisor,w,c
  1219  00213A  1013               	iorwf	___lwmod@divisor+1,w,c
  1220  00213C  B4D8               	btfsc	status,2,c
  1221  00213E  D01C               	goto	l954
  1222  002140  0E01               	movlw	1
  1223  002142  6E14               	movwf	___lwmod@counter,c
  1224  002144  D005               	goto	l2403
  1225  002146                     l2401:
  1226  002146  FFFF               	dw	65535	; assembler added errata NOP
  1227  002148  90D8               	bcf	status,0,c
  1228  00214A  3612               	rlcf	___lwmod@divisor,f,c
  1229  00214C  3613               	rlcf	___lwmod@divisor+1,f,c
  1230  00214E  2A14               	incf	___lwmod@counter,f,c
  1231  002150                     l2403:
  1232  002150  FFFF               	dw	65535	; assembler added errata NOP
  1233  002152  AE13               	btfss	___lwmod@divisor+1,7,c
  1234  002154  D7F8               	goto	l2401
  1235  002156                     l2405:
  1236  002156  FFFF               	dw	65535	; assembler added errata NOP
  1237  002158  5012               	movf	___lwmod@divisor,w,c
  1238  00215A  5C10               	subwf	___lwmod@dividend,w,c
  1239  00215C  5013               	movf	___lwmod@divisor+1,w,c
  1240  00215E  5811               	subwfb	___lwmod@dividend+1,w,c
  1241  002160  A0D8               	btfss	status,0,c
  1242  002162  D004               	goto	l2409
  1243  002164  5012               	movf	___lwmod@divisor,w,c
  1244  002166  5E10               	subwf	___lwmod@dividend,f,c
  1245  002168  5013               	movf	___lwmod@divisor+1,w,c
  1246  00216A  5A11               	subwfb	___lwmod@dividend+1,f,c
  1247  00216C                     l2409:
  1248  00216C  FFFF               	dw	65535	; assembler added errata NOP
  1249  00216E  90D8               	bcf	status,0,c
  1250  002170  3213               	rrcf	___lwmod@divisor+1,f,c
  1251  002172  3212               	rrcf	___lwmod@divisor,f,c
  1252  002174  2E14               	decfsz	___lwmod@counter,f,c
  1253  002176  D7EF               	goto	l2405
  1254  002178                     l954:
  1255  002178  FFFF               	dw	65535	; assembler added errata NOP
  1256  00217A  C010  F010         	movff	___lwmod@dividend,?___lwmod
  1257  00217E  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  1258  002182  0012               	return		;funcret
  1259  002184  FFFF               	dw	65535	; errata NOP
  1260  002186                     __end_of___lwmod:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           intcon	equ	0xFF2
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           indf2	equ	0xFDF
  1267                           fsr2h	equ	0xFDA
  1268                           fsr2l	equ	0xFD9
  1269                           status	equ	0xFD8
  1270                           
  1271 ;; *************** function _LedsInit *****************
  1272 ;; Defined at:
  1273 ;;		line 12 in file "Leds.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		None
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1287 ;;      Params:         0       0       0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0       0       0
  1290 ;;      Totals:         0       0       0       0       0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    2
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text3
  1302  002264                     __ptext3:
  1303                           	opt stack 0
  1304  002264                     _LedsInit:
  1305                           	opt stack 0
  1306  002264  FFFF               	dw	65535	; assembler added errata NOP
  1307                           
  1308                           ;Leds.c: 15: TRISDbits.RD3 = 0;
  1309                           
  1310                           ;incstack = 0
  1311  002266  9695               	bcf	3989,3,c	;volatile
  1312                           
  1313                           ;Leds.c: 16: TRISDbits.RD2 = 0;
  1314  002268  9495               	bcf	3989,2,c	;volatile
  1315                           
  1316                           ;Leds.c: 19: LATDbits.LD2 = 0;
  1317  00226A  948C               	bcf	3980,2,c	;volatile
  1318                           
  1319                           ;Leds.c: 20: LATDbits.LD3 = 0;
  1320  00226C  968C               	bcf	3980,3,c	;volatile
  1321  00226E  0012               	return		;funcret
  1322  002270  FFFF               	dw	65535	; errata NOP
  1323  002272                     __end_of_LedsInit:
  1324                           	opt stack 0
  1325                           tblptru	equ	0xFF8
  1326                           intcon	equ	0xFF2
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           indf2	equ	0xFDF
  1330                           fsr2h	equ	0xFDA
  1331                           fsr2l	equ	0xFD9
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function _LCD_Init *****************
  1335 ;; Defined at:
  1336 ;;		line 56 in file "lcd.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1350 ;;      Params:         0       0       0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0       0       0
  1352 ;;      Temps:          2       0       0       0       0       0       0
  1353 ;;      Totals:         2       0       0       0       0       0       0
  1354 ;;Total ram usage:        2 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    5
  1357 ;; This function calls:
  1358 ;;		_GPIOPinTypeGPIOOutput
  1359 ;;		_GPIOPinWrite
  1360 ;;		_LCD_GoToXy
  1361 ;;		_SendCommand
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text4
  1368  001E02                     __ptext4:
  1369                           	opt stack 0
  1370  001E02                     _LCD_Init:
  1371                           	opt stack 0
  1372  001E02  FFFF               	dw	65535	; assembler added errata NOP
  1373                           
  1374                           ;lcd.c: 58: GPIOPinTypeGPIOOutput( 0x02, 0xfc );
  1375                           
  1376                           ;incstack = 0
  1377  001E04  0EFC               	movlw	252
  1378  001E06  6E10               	movwf	GPIOPinTypeGPIOOutput@Mask,c
  1379  001E08  0E02               	movlw	2
  1380  001E0A  EC7C  F00F         	call	_GPIOPinTypeGPIOOutput
  1381                           
  1382                           ;lcd.c: 59: GPIOPinWrite( 0x02, 0xfc, 0x00 );
  1383  001E0E  0EFC               	movlw	252
  1384  001E10  6E10               	movwf	GPIOPinWrite@Mask,c
  1385  001E12  0E00               	movlw	0
  1386  001E14  6E11               	movwf	GPIOPinWrite@Data,c
  1387  001E16  0E02               	movlw	2
  1388  001E18  EC2C  F00E         	call	_GPIOPinWrite
  1389                           
  1390                           ;lcd.c: 61: _delay((unsigned long)((100)*(32000000/4000.0)));
  1391  001E1C  0E04               	movlw	4
  1392  001E1E  6E18               	movwf	(??_LCD_Init+1)& (0+255),c
  1393  001E20  0E0C               	movlw	12
  1394  001E22  6E17               	movwf	??_LCD_Init& (0+255),c
  1395  001E24  0EB7               	movlw	183
  1396  001E26                     u3047:
  1397  001E26  FFFF               	dw	65535	; errata NOP
  1398  001E28  2EE8               	decfsz	wreg,f,c
  1399  001E2A  D7FD               	bra	u3047
  1400  001E2C  2E17               	decfsz	??_LCD_Init& (0+255),f,c
  1401  001E2E  D7FB               	bra	u3047
  1402  001E30  2E18               	decfsz	(??_LCD_Init+1)& (0+255),f,c
  1403  001E32  D7F9               	bra	u3047
  1404                           
  1405                           ;lcd.c: 79: SendCommand(0x03);
  1406  001E34  0E03               	movlw	3
  1407  001E36  EC42  F00D         	call	_SendCommand
  1408                           
  1409                           ;lcd.c: 82: SendCommand( 0x20 | 1<<3 | 0<<2 );
  1410  001E3A  0E28               	movlw	40
  1411  001E3C  EC42  F00D         	call	_SendCommand
  1412                           
  1413                           ;lcd.c: 85: SendCommand( 0x20 | 1<<3 | 0<<2 );
  1414  001E40  0E28               	movlw	40
  1415  001E42  EC42  F00D         	call	_SendCommand
  1416                           
  1417                           ;lcd.c: 88: SendCommand( 1<<3 | 0x04 );
  1418  001E46  0E0C               	movlw	12
  1419  001E48  EC42  F00D         	call	_SendCommand
  1420                           
  1421                           ;lcd.c: 92: SendCommand( 0x01 );
  1422  001E4C  0E01               	movlw	1
  1423  001E4E  EC42  F00D         	call	_SendCommand
  1424                           
  1425                           ;lcd.c: 94: _delay((unsigned long)((100)*(32000000/4000.0)));
  1426  001E52  0E04               	movlw	4
  1427  001E54  6E18               	movwf	(??_LCD_Init+1)& (0+255),c
  1428  001E56  0E0C               	movlw	12
  1429  001E58  6E17               	movwf	??_LCD_Init& (0+255),c
  1430  001E5A  0EB7               	movlw	183
  1431  001E5C                     u3057:
  1432  001E5C  FFFF               	dw	65535	; errata NOP
  1433  001E5E  2EE8               	decfsz	wreg,f,c
  1434  001E60  D7FD               	bra	u3057
  1435  001E62  2E17               	decfsz	??_LCD_Init& (0+255),f,c
  1436  001E64  D7FB               	bra	u3057
  1437  001E66  2E18               	decfsz	(??_LCD_Init+1)& (0+255),f,c
  1438  001E68  D7F9               	bra	u3057
  1439                           
  1440                           ;lcd.c: 97: SendCommand( 1<<2 | 0x02 | 0x00 );
  1441  001E6A  0E06               	movlw	6
  1442  001E6C  EC42  F00D         	call	_SendCommand
  1443                           
  1444                           ;lcd.c: 99: LCD_GoToXy(0,0);
  1445  001E70  0E00               	movlw	0
  1446  001E72  6E15               	movwf	LCD_GoToXy@y,c
  1447  001E74  0E00               	movlw	0
  1448  001E76  ECE1  F010         	call	_LCD_GoToXy
  1449  001E7A  0012               	return		;funcret
  1450  001E7C  FFFF               	dw	65535	; errata NOP
  1451  001E7E                     __end_of_LCD_Init:
  1452                           	opt stack 0
  1453                           tblptru	equ	0xFF8
  1454                           intcon	equ	0xFF2
  1455                           postinc0	equ	0xFEE
  1456                           wreg	equ	0xFE8
  1457                           indf2	equ	0xFDF
  1458                           fsr2h	equ	0xFDA
  1459                           fsr2l	equ	0xFD9
  1460                           status	equ	0xFD8
  1461                           
  1462 ;; *************** function _LCD_GoToXy *****************
  1463 ;; Defined at:
  1464 ;;		line 109 in file "lcd.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  x               1    wreg     unsigned char 
  1467 ;;  y               1   20[COMRAM] unsigned char 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  x               1   21[COMRAM] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1479 ;;      Params:         1       0       0       0       0       0       0
  1480 ;;      Locals:         1       0       0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0
  1482 ;;      Totals:         2       0       0       0       0       0       0
  1483 ;;Total ram usage:        2 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    4
  1486 ;; This function calls:
  1487 ;;		_SendCommand
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;;		_LCD_Init
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text5
  1495  0021C2                     __ptext5:
  1496                           	opt stack 0
  1497  0021C2                     _LCD_GoToXy:
  1498                           	opt stack 0
  1499  0021C2  FFFF               	dw	65535	; assembler added errata NOP
  1500                           
  1501                           ;incstack = 0
  1502                           ;LCD_GoToXy@x stored from wreg
  1503  0021C4  6E16               	movwf	LCD_GoToXy@x,c
  1504                           
  1505                           ;lcd.c: 113: if(y==0)
  1506  0021C6  5015               	movf	LCD_GoToXy@y,w,c
  1507  0021C8  A4D8               	btfss	status,2,c
  1508  0021CA  D005               	goto	l2101
  1509                           
  1510                           ;lcd.c: 114: {
  1511                           ;lcd.c: 115: SendCommand( 0x80 | x );
  1512  0021CC  5016               	movf	LCD_GoToXy@x,w,c
  1513  0021CE  0980               	iorlw	128
  1514  0021D0  EC42  F00D         	call	_SendCommand
  1515                           
  1516                           ;lcd.c: 116: }
  1517  0021D4  D008               	goto	l188
  1518  0021D6                     l2101:
  1519  0021D6  FFFF               	dw	65535	; assembler added errata NOP
  1520                           
  1521                           ;lcd.c: 118: else if (y==1)
  1522  0021D8  0415               	decf	LCD_GoToXy@y,w,c
  1523  0021DA  A4D8               	btfss	status,2,c
  1524  0021DC  D004               	goto	l188
  1525                           
  1526                           ;lcd.c: 119: {
  1527                           ;lcd.c: 120: SendCommand( 0x80 | 0x40 | x );
  1528  0021DE  5016               	movf	LCD_GoToXy@x,w,c
  1529  0021E0  09C0               	iorlw	192
  1530  0021E2  EC42  F00D         	call	_SendCommand
  1531  0021E6                     l188:
  1532  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  1533  0021E8  0012               	return		;funcret
  1534  0021EA  FFFF               	dw	65535	; errata NOP
  1535  0021EC                     __end_of_LCD_GoToXy:
  1536                           	opt stack 0
  1537                           tblptru	equ	0xFF8
  1538                           intcon	equ	0xFF2
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           indf2	equ	0xFDF
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _SendCommand *****************
  1547 ;; Defined at:
  1548 ;;		line 16 in file "lcd.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  command_id      1    wreg     unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  command_id      1   19[COMRAM] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1562 ;;      Params:         0       0       0       0       0       0       0
  1563 ;;      Locals:         1       0       0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0
  1565 ;;      Totals:         1       0       0       0       0       0       0
  1566 ;;Total ram usage:        1 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    3
  1569 ;; This function calls:
  1570 ;;		_GPIOPinWrite
  1571 ;; This function is called by:
  1572 ;;		_LCD_Init
  1573 ;;		_LCD_GoToXy
  1574 ;;		_LCD_Clear
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text6
  1579  001A84                     __ptext6:
  1580                           	opt stack 0
  1581  001A84                     _SendCommand:
  1582                           	opt stack 0
  1583  001A84  FFFF               	dw	65535	; assembler added errata NOP
  1584                           
  1585                           ;incstack = 0
  1586                           ;SendCommand@command_id stored from wreg
  1587  001A86  6E14               	movwf	SendCommand@command_id,c
  1588                           
  1589                           ;lcd.c: 19: GPIOPinWrite( 0x02, 1<<2, 0x00 );
  1590  001A88  0E04               	movlw	4
  1591  001A8A  6E10               	movwf	GPIOPinWrite@Mask,c
  1592  001A8C  0E00               	movlw	0
  1593  001A8E  6E11               	movwf	GPIOPinWrite@Data,c
  1594  001A90  0E02               	movlw	2
  1595  001A92  EC2C  F00E         	call	_GPIOPinWrite
  1596                           
  1597                           ;lcd.c: 20: GPIOPinWrite( 0x02, 1<<3, 0xff );
  1598  001A96  0E08               	movlw	8
  1599  001A98  6E10               	movwf	GPIOPinWrite@Mask,c
  1600  001A9A  0EFF               	movlw	255
  1601  001A9C  6E11               	movwf	GPIOPinWrite@Data,c
  1602  001A9E  0E02               	movlw	2
  1603  001AA0  EC2C  F00E         	call	_GPIOPinWrite
  1604                           
  1605                           ;lcd.c: 21: GPIOPinWrite( 0x02, ((1<<4) | (1<<5) | (1<<6) | (1<<7)), command_id );
  1606  001AA4  0EF0               	movlw	240
  1607  001AA6  6E10               	movwf	GPIOPinWrite@Mask,c
  1608  001AA8  C014  F011         	movff	SendCommand@command_id,GPIOPinWrite@Data
  1609  001AAC  0E02               	movlw	2
  1610  001AAE  EC2C  F00E         	call	_GPIOPinWrite
  1611                           
  1612                           ;lcd.c: 22: _delay((unsigned long)((2)*(32000000/4000000.0)));
  1613  001AB2  0E04               	movlw	4
  1614  001AB4                     u3067:
  1615  001AB4  FFFF               	dw	65535	; errata NOP
  1616  001AB6  2EE8               	decfsz	wreg,f,c
  1617  001AB8  D7FD               	bra	u3067
  1618                           
  1619                           ;lcd.c: 23: GPIOPinWrite( 0x02, 1<<3, 0);
  1620  001ABA  0E08               	movlw	8
  1621  001ABC  6E10               	movwf	GPIOPinWrite@Mask,c
  1622  001ABE  0E00               	movlw	0
  1623  001AC0  6E11               	movwf	GPIOPinWrite@Data,c
  1624  001AC2  0E02               	movlw	2
  1625  001AC4  EC2C  F00E         	call	_GPIOPinWrite
  1626                           
  1627                           ;lcd.c: 24: _delay((unsigned long)((2)*(32000000/4000000.0)));
  1628  001AC8  0E04               	movlw	4
  1629  001ACA                     u3077:
  1630  001ACA  FFFF               	dw	65535	; errata NOP
  1631  001ACC  2EE8               	decfsz	wreg,f,c
  1632  001ACE  D7FD               	bra	u3077
  1633                           
  1634                           ;lcd.c: 27: GPIOPinWrite( 0x02, 1<<2, 0x00 );
  1635  001AD0  0E04               	movlw	4
  1636  001AD2  6E10               	movwf	GPIOPinWrite@Mask,c
  1637  001AD4  0E00               	movlw	0
  1638  001AD6  6E11               	movwf	GPIOPinWrite@Data,c
  1639  001AD8  0E02               	movlw	2
  1640  001ADA  EC2C  F00E         	call	_GPIOPinWrite
  1641                           
  1642                           ;lcd.c: 28: GPIOPinWrite( 0x02, 1<<3, 0xff );
  1643  001ADE  0E08               	movlw	8
  1644  001AE0  6E10               	movwf	GPIOPinWrite@Mask,c
  1645  001AE2  0EFF               	movlw	255
  1646  001AE4  6E11               	movwf	GPIOPinWrite@Data,c
  1647  001AE6  0E02               	movlw	2
  1648  001AE8  EC2C  F00E         	call	_GPIOPinWrite
  1649                           
  1650                           ;lcd.c: 29: GPIOPinWrite( 0x02, ((1<<4) | (1<<5) | (1<<6) | (1<<7)), (command_id<<4) );
  1651  001AEC  0EF0               	movlw	240
  1652  001AEE  6E10               	movwf	GPIOPinWrite@Mask,c
  1653  001AF0  3814               	swapf	SendCommand@command_id,w,c
  1654  001AF2  0BF0               	andlw	240
  1655  001AF4  6E11               	movwf	GPIOPinWrite@Data,c
  1656  001AF6  0E02               	movlw	2
  1657  001AF8  EC2C  F00E         	call	_GPIOPinWrite
  1658                           
  1659                           ;lcd.c: 30: _delay((unsigned long)((2)*(32000000/4000000.0)));
  1660  001AFC  0E04               	movlw	4
  1661  001AFE                     u3087:
  1662  001AFE  FFFF               	dw	65535	; errata NOP
  1663  001B00  2EE8               	decfsz	wreg,f,c
  1664  001B02  D7FD               	bra	u3087
  1665                           
  1666                           ;lcd.c: 31: GPIOPinWrite( 0x02, 1<<3, 0);
  1667  001B04  0E08               	movlw	8
  1668  001B06  6E10               	movwf	GPIOPinWrite@Mask,c
  1669  001B08  0E00               	movlw	0
  1670  001B0A  6E11               	movwf	GPIOPinWrite@Data,c
  1671  001B0C  0E02               	movlw	2
  1672  001B0E  EC2C  F00E         	call	_GPIOPinWrite
  1673                           
  1674                           ;lcd.c: 33: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1675  001B12  0EA0               	movlw	160
  1676  001B14                     u3097:
  1677  001B14  FFFF               	dw	65535	; errata NOP
  1678  001B16  F000               	nop	
  1679  001B18  2EE8               	decfsz	wreg,f,c
  1680  001B1A  D7FC               	bra	u3097
  1681  001B1C  0012               	return		;funcret
  1682  001B1E  FFFF               	dw	65535	; errata NOP
  1683  001B20                     __end_of_SendCommand:
  1684                           	opt stack 0
  1685                           tblptru	equ	0xFF8
  1686                           intcon	equ	0xFF2
  1687                           postinc0	equ	0xFEE
  1688                           wreg	equ	0xFE8
  1689                           indf2	equ	0xFDF
  1690                           fsr2h	equ	0xFDA
  1691                           fsr2l	equ	0xFD9
  1692                           status	equ	0xFD8
  1693                           
  1694 ;; *************** function _GPIOPinTypeGPIOOutput *****************
  1695 ;; Defined at:
  1696 ;;		line 39 in file "gpio.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  Port            1    wreg     unsigned char 
  1699 ;;  Mask            1   15[COMRAM] unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  Port            1   16[COMRAM] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1711 ;;      Params:         1       0       0       0       0       0       0
  1712 ;;      Locals:         1       0       0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0
  1714 ;;      Totals:         2       0       0       0       0       0       0
  1715 ;;Total ram usage:        2 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    2
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_LCD_Init
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text7
  1726  001EF8                     __ptext7:
  1727                           	opt stack 0
  1728  001EF8                     _GPIOPinTypeGPIOOutput:
  1729                           	opt stack 0
  1730  001EF8  FFFF               	dw	65535	; assembler added errata NOP
  1731                           
  1732                           ;incstack = 0
  1733                           ;GPIOPinTypeGPIOOutput@Port stored from wreg
  1734  001EFA  6E11               	movwf	GPIOPinTypeGPIOOutput@Port,c
  1735                           
  1736                           ;gpio.c: 41: switch (Port)
  1737  001EFC  D01E               	goto	l2149
  1738  001EFE                     l2137:
  1739  001EFE  FFFF               	dw	65535	; assembler added errata NOP
  1740                           
  1741                           ;gpio.c: 44: TRISA = (TRISA & ~(Mask)) | (Mask & 0x00);
  1742  001F00  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1743  001F02  0AFF               	xorlw	255
  1744  001F04  1492               	andwf	3986,w,c	;volatile
  1745  001F06  6E92               	movwf	3986,c	;volatile
  1746                           
  1747                           ;gpio.c: 45: break;
  1748  001F08  D029               	goto	l141
  1749  001F0A                     l2139:
  1750  001F0A  FFFF               	dw	65535	; assembler added errata NOP
  1751                           
  1752                           ;gpio.c: 48: TRISB = (TRISB & ~(Mask)) | (Mask & 0x00);
  1753  001F0C  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1754  001F0E  0AFF               	xorlw	255
  1755  001F10  1493               	andwf	3987,w,c	;volatile
  1756  001F12  6E93               	movwf	3987,c	;volatile
  1757                           
  1758                           ;gpio.c: 49: break;
  1759  001F14  D023               	goto	l141
  1760  001F16                     l2141:
  1761  001F16  FFFF               	dw	65535	; assembler added errata NOP
  1762                           
  1763                           ;gpio.c: 52: TRISC = (TRISC & ~(Mask)) | (Mask & 0x00);
  1764  001F18  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1765  001F1A  0AFF               	xorlw	255
  1766  001F1C  1494               	andwf	3988,w,c	;volatile
  1767  001F1E  6E94               	movwf	3988,c	;volatile
  1768                           
  1769                           ;gpio.c: 53: break;
  1770  001F20  D01D               	goto	l141
  1771  001F22                     l2143:
  1772  001F22  FFFF               	dw	65535	; assembler added errata NOP
  1773                           
  1774                           ;gpio.c: 56: TRISD = (TRISD & ~(Mask)) | (Mask & 0x00);
  1775  001F24  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1776  001F26  0AFF               	xorlw	255
  1777  001F28  1495               	andwf	3989,w,c	;volatile
  1778  001F2A  6E95               	movwf	3989,c	;volatile
  1779                           
  1780                           ;gpio.c: 57: break;
  1781  001F2C  D017               	goto	l141
  1782  001F2E                     l2145:
  1783  001F2E  FFFF               	dw	65535	; assembler added errata NOP
  1784                           
  1785                           ;gpio.c: 60: TRISE = (TRISE & ~(Mask)) | (Mask & 0x00);
  1786  001F30  5010               	movf	GPIOPinTypeGPIOOutput@Mask,w,c
  1787  001F32  0AFF               	xorlw	255
  1788  001F34  1496               	andwf	3990,w,c	;volatile
  1789  001F36  6E96               	movwf	3990,c	;volatile
  1790                           
  1791                           ;gpio.c: 62: }
  1792                           
  1793                           ;gpio.c: 61: break;
  1794  001F38  D011               	goto	l141
  1795  001F3A                     l2149:
  1796  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  1797  001F3C  5011               	movf	GPIOPinTypeGPIOOutput@Port,w,c
  1798                           
  1799                           ; Switch size 1, requested type "space"
  1800                           ; Number of cases is 5, Range of values is 0 to 4
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte           16     9 (average)
  1804                           ;	Chosen strategy is simple_byte
  1805  001F3E  0A00               	xorlw	0	; case 0
  1806  001F40  B4D8               	btfsc	status,2,c
  1807  001F42  D7DD               	goto	l2137
  1808  001F44  0A01               	xorlw	1	; case 1
  1809  001F46  B4D8               	btfsc	status,2,c
  1810  001F48  D7E0               	goto	l2139
  1811  001F4A  0A03               	xorlw	3	; case 2
  1812  001F4C  B4D8               	btfsc	status,2,c
  1813  001F4E  D7E3               	goto	l2141
  1814  001F50  0A01               	xorlw	1	; case 3
  1815  001F52  B4D8               	btfsc	status,2,c
  1816  001F54  D7E6               	goto	l2143
  1817  001F56  0A07               	xorlw	7	; case 4
  1818  001F58  B4D8               	btfsc	status,2,c
  1819  001F5A  D7E9               	goto	l2145
  1820  001F5C                     l141:
  1821  001F5C  FFFF               	dw	65535	; assembler added errata NOP
  1822  001F5E  0012               	return		;funcret
  1823  001F60  FFFF               	dw	65535	; errata NOP
  1824  001F62                     __end_of_GPIOPinTypeGPIOOutput:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           intcon	equ	0xFF2
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           indf2	equ	0xFDF
  1831                           fsr2h	equ	0xFDA
  1832                           fsr2l	equ	0xFD9
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _LCD_DispString *****************
  1836 ;; Defined at:
  1837 ;;		line 131 in file "lcd.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  StrPtr          2   20[COMRAM] PTR unsigned char 
  1840 ;;		 -> STR_2(4), str_dist(4), STR_1(16), 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1852 ;;      Params:         2       0       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0
  1855 ;;      Totals:         2       0       0       0       0       0       0
  1856 ;;Total ram usage:        2 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    4
  1859 ;; This function calls:
  1860 ;;		_SendData
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text8
  1867  001F62                     __ptext8:
  1868                           	opt stack 0
  1869  001F62                     _LCD_DispString:
  1870                           	opt stack 0
  1871  001F62  FFFF               	dw	65535	; assembler added errata NOP
  1872                           
  1873                           ;lcd.c: 133: while( *StrPtr != '\0' )
  1874                           
  1875                           ;incstack = 0
  1876  001F64  D016               	goto	l2523
  1877  001F66                     l2519:
  1878  001F66  FFFF               	dw	65535	; assembler added errata NOP
  1879                           
  1880                           ;lcd.c: 134: {
  1881                           ;lcd.c: 135: SendData( *StrPtr );
  1882  001F68  C015  FFF6         	movff	LCD_DispString@StrPtr,tblptrl
  1883  001F6C  C016  FFF7         	movff	LCD_DispString@StrPtr+1,tblptrh
  1884  001F70  6AF8               	clrf	tblptru,c
  1885  001F72  0E05               	movlw	(high __ramtop+-1)
  1886  001F74  64F7               	cpfsgt	tblptrh,c
  1887  001F76  D004               	bra	u2067
  1888  001F78  0008               	tblrd		*
  1889  001F7A  FFFF               	dw	65535	; errata NOP
  1890  001F7C  50F5               	movf	tablat,w,c
  1891  001F7E  D005               	bra	u2060
  1892  001F80                     u2067:
  1893  001F80  CFF6 FFE9          	movff	tblptrl,fsr0l
  1894  001F84  CFF7 FFEA          	movff	tblptrh,fsr0h
  1895  001F88  50EF               	movf	indf0,w,c
  1896  001F8A                     u2060:
  1897  001F8A  EC90  F00D         	call	_SendData
  1898                           
  1899                           ;lcd.c: 136: StrPtr ++;
  1900  001F8E  4A15               	infsnz	LCD_DispString@StrPtr,f,c
  1901  001F90  2A16               	incf	LCD_DispString@StrPtr+1,f,c
  1902  001F92                     l2523:
  1903  001F92  FFFF               	dw	65535	; assembler added errata NOP
  1904  001F94  C015  FFF6         	movff	LCD_DispString@StrPtr,tblptrl
  1905  001F98  C016  FFF7         	movff	LCD_DispString@StrPtr+1,tblptrh
  1906  001F9C  6AF8               	clrf	tblptru,c
  1907  001F9E  0E05               	movlw	(high __ramtop+-1)
  1908  001FA0  64F7               	cpfsgt	tblptrh,c
  1909  001FA2  D004               	bra	u2077
  1910  001FA4  0008               	tblrd		*
  1911  001FA6  FFFF               	dw	65535	; errata NOP
  1912  001FA8  50F5               	movf	tablat,w,c
  1913  001FAA  D005               	bra	u2070
  1914  001FAC                     u2077:
  1915  001FAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  1916  001FB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1917  001FB4  50EF               	movf	indf0,w,c
  1918  001FB6                     u2070:
  1919  001FB6  0900               	iorlw	0
  1920  001FB8  B4D8               	btfsc	status,2,c
  1921  001FBA  0012               	return		;funcret
  1922  001FBC  FFFF               	dw	65535	; assembler added errata NOP
  1923  001FBE  D7D3               	goto	l2519
  1924  001FC0  FFFF               	dw	65535	; errata NOP
  1925  001FC2                     __end_of_LCD_DispString:
  1926                           	opt stack 0
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           intcon	equ	0xFF2
  1932                           indf0	equ	0xFEF
  1933                           postinc0	equ	0xFEE
  1934                           fsr0h	equ	0xFEA
  1935                           fsr0l	equ	0xFE9
  1936                           wreg	equ	0xFE8
  1937                           indf2	equ	0xFDF
  1938                           fsr2h	equ	0xFDA
  1939                           fsr2l	equ	0xFD9
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function _SendData *****************
  1943 ;; Defined at:
  1944 ;;		line 36 in file "lcd.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  data            1    wreg     unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  data            1   19[COMRAM] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1958 ;;      Params:         0       0       0       0       0       0       0
  1959 ;;      Locals:         1       0       0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0
  1961 ;;      Totals:         1       0       0       0       0       0       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    3
  1965 ;; This function calls:
  1966 ;;		_GPIOPinWrite
  1967 ;; This function is called by:
  1968 ;;		_LCD_DispString
  1969 ;;		_LCD_DispChar
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text9
  1974  001B20                     __ptext9:
  1975                           	opt stack 0
  1976  001B20                     _SendData:
  1977                           	opt stack 0
  1978  001B20  FFFF               	dw	65535	; assembler added errata NOP
  1979                           
  1980                           ;incstack = 0
  1981                           ;SendData@data stored from wreg
  1982  001B22  6E14               	movwf	SendData@data,c
  1983                           
  1984                           ;lcd.c: 39: GPIOPinWrite( 0x02, 1<<2, 0xff );
  1985  001B24  0E04               	movlw	4
  1986  001B26  6E10               	movwf	GPIOPinWrite@Mask,c
  1987  001B28  0EFF               	movlw	255
  1988  001B2A  6E11               	movwf	GPIOPinWrite@Data,c
  1989  001B2C  0E02               	movlw	2
  1990  001B2E  EC2C  F00E         	call	_GPIOPinWrite
  1991                           
  1992                           ;lcd.c: 40: GPIOPinWrite( 0x02, 1<<3, 0xff );
  1993  001B32  0E08               	movlw	8
  1994  001B34  6E10               	movwf	GPIOPinWrite@Mask,c
  1995  001B36  0EFF               	movlw	255
  1996  001B38  6E11               	movwf	GPIOPinWrite@Data,c
  1997  001B3A  0E02               	movlw	2
  1998  001B3C  EC2C  F00E         	call	_GPIOPinWrite
  1999                           
  2000                           ;lcd.c: 41: GPIOPinWrite( 0x02, ((1<<4) | (1<<5) | (1<<6) | (1<<7)), data );
  2001  001B40  0EF0               	movlw	240
  2002  001B42  6E10               	movwf	GPIOPinWrite@Mask,c
  2003  001B44  C014  F011         	movff	SendData@data,GPIOPinWrite@Data
  2004  001B48  0E02               	movlw	2
  2005  001B4A  EC2C  F00E         	call	_GPIOPinWrite
  2006                           
  2007                           ;lcd.c: 42: _delay((unsigned long)((2)*(32000000/4000000.0)));
  2008  001B4E  0E04               	movlw	4
  2009  001B50                     u3107:
  2010  001B50  FFFF               	dw	65535	; errata NOP
  2011  001B52  2EE8               	decfsz	wreg,f,c
  2012  001B54  D7FD               	bra	u3107
  2013                           
  2014                           ;lcd.c: 43: GPIOPinWrite( 0x02, 1<<3, 0);
  2015  001B56  0E08               	movlw	8
  2016  001B58  6E10               	movwf	GPIOPinWrite@Mask,c
  2017  001B5A  0E00               	movlw	0
  2018  001B5C  6E11               	movwf	GPIOPinWrite@Data,c
  2019  001B5E  0E02               	movlw	2
  2020  001B60  EC2C  F00E         	call	_GPIOPinWrite
  2021                           
  2022                           ;lcd.c: 44: _delay((unsigned long)((2)*(32000000/4000000.0)));
  2023  001B64  0E04               	movlw	4
  2024  001B66                     u3117:
  2025  001B66  FFFF               	dw	65535	; errata NOP
  2026  001B68  2EE8               	decfsz	wreg,f,c
  2027  001B6A  D7FD               	bra	u3117
  2028                           
  2029                           ;lcd.c: 47: GPIOPinWrite( 0x02, 1<<2, 0xff );
  2030  001B6C  0E04               	movlw	4
  2031  001B6E  6E10               	movwf	GPIOPinWrite@Mask,c
  2032  001B70  0EFF               	movlw	255
  2033  001B72  6E11               	movwf	GPIOPinWrite@Data,c
  2034  001B74  0E02               	movlw	2
  2035  001B76  EC2C  F00E         	call	_GPIOPinWrite
  2036                           
  2037                           ;lcd.c: 48: GPIOPinWrite( 0x02, 1<<3, 0xff );
  2038  001B7A  0E08               	movlw	8
  2039  001B7C  6E10               	movwf	GPIOPinWrite@Mask,c
  2040  001B7E  0EFF               	movlw	255
  2041  001B80  6E11               	movwf	GPIOPinWrite@Data,c
  2042  001B82  0E02               	movlw	2
  2043  001B84  EC2C  F00E         	call	_GPIOPinWrite
  2044                           
  2045                           ;lcd.c: 49: GPIOPinWrite( 0x02, ((1<<4) | (1<<5) | (1<<6) | (1<<7)), (data<<4) );
  2046  001B88  0EF0               	movlw	240
  2047  001B8A  6E10               	movwf	GPIOPinWrite@Mask,c
  2048  001B8C  3814               	swapf	SendData@data,w,c
  2049  001B8E  0BF0               	andlw	240
  2050  001B90  6E11               	movwf	GPIOPinWrite@Data,c
  2051  001B92  0E02               	movlw	2
  2052  001B94  EC2C  F00E         	call	_GPIOPinWrite
  2053                           
  2054                           ;lcd.c: 50: _delay((unsigned long)((2)*(32000000/4000000.0)));
  2055  001B98  0E04               	movlw	4
  2056  001B9A                     u3127:
  2057  001B9A  FFFF               	dw	65535	; errata NOP
  2058  001B9C  2EE8               	decfsz	wreg,f,c
  2059  001B9E  D7FD               	bra	u3127
  2060                           
  2061                           ;lcd.c: 51: GPIOPinWrite( 0x02, 1<<3, 0);
  2062  001BA0  0E08               	movlw	8
  2063  001BA2  6E10               	movwf	GPIOPinWrite@Mask,c
  2064  001BA4  0E00               	movlw	0
  2065  001BA6  6E11               	movwf	GPIOPinWrite@Data,c
  2066  001BA8  0E02               	movlw	2
  2067  001BAA  EC2C  F00E         	call	_GPIOPinWrite
  2068                           
  2069                           ;lcd.c: 53: _delay((unsigned long)((100)*(32000000/4000000.0)));
  2070  001BAE  0EA0               	movlw	160
  2071  001BB0                     u3137:
  2072  001BB0  FFFF               	dw	65535	; errata NOP
  2073  001BB2  F000               	nop	
  2074  001BB4  2EE8               	decfsz	wreg,f,c
  2075  001BB6  D7FC               	bra	u3137
  2076  001BB8  0012               	return		;funcret
  2077  001BBA  FFFF               	dw	65535	; errata NOP
  2078  001BBC                     __end_of_SendData:
  2079                           	opt stack 0
  2080                           tblptru	equ	0xFF8
  2081                           tblptrh	equ	0xFF7
  2082                           tblptrl	equ	0xFF6
  2083                           tablat	equ	0xFF5
  2084                           intcon	equ	0xFF2
  2085                           indf0	equ	0xFEF
  2086                           postinc0	equ	0xFEE
  2087                           fsr0h	equ	0xFEA
  2088                           fsr0l	equ	0xFE9
  2089                           wreg	equ	0xFE8
  2090                           indf2	equ	0xFDF
  2091                           fsr2h	equ	0xFDA
  2092                           fsr2l	equ	0xFD9
  2093                           status	equ	0xFD8
  2094                           
  2095 ;; *************** function _GPIOPinWrite *****************
  2096 ;; Defined at:
  2097 ;;		line 65 in file "gpio.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  Port            1    wreg     unsigned char 
  2100 ;;  Mask            1   15[COMRAM] unsigned char 
  2101 ;;  Data            1   16[COMRAM] unsigned char 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  Port            1   18[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2113 ;;      Params:         2       0       0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0
  2115 ;;      Temps:          1       0       0       0       0       0       0
  2116 ;;      Totals:         4       0       0       0       0       0       0
  2117 ;;Total ram usage:        4 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    2
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_SendCommand
  2124 ;;		_SendData
  2125 ;;		_LCD_Init
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text10
  2130  001C58                     __ptext10:
  2131                           	opt stack 0
  2132  001C58                     _GPIOPinWrite:
  2133                           	opt stack 0
  2134  001C58  FFFF               	dw	65535	; assembler added errata NOP
  2135                           
  2136                           ;incstack = 0
  2137                           ;GPIOPinWrite@Port stored from wreg
  2138  001C5A  6E13               	movwf	GPIOPinWrite@Port,c
  2139                           
  2140                           ;gpio.c: 67: switch (Port)
  2141  001C5C  D032               	goto	l2043
  2142  001C5E                     l2031:
  2143  001C5E  FFFF               	dw	65535	; assembler added errata NOP
  2144                           
  2145                           ;gpio.c: 70: LATA = (LATA & ~(Mask)) | (Mask & Data);
  2146  001C60  5010               	movf	GPIOPinWrite@Mask,w,c
  2147  001C62  1411               	andwf	GPIOPinWrite@Data,w,c
  2148  001C64  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2149  001C66  5010               	movf	GPIOPinWrite@Mask,w,c
  2150  001C68  0AFF               	xorlw	255
  2151  001C6A  1489               	andwf	3977,w,c	;volatile
  2152  001C6C  1012               	iorwf	??_GPIOPinWrite,w,c
  2153  001C6E  6E89               	movwf	3977,c	;volatile
  2154                           
  2155                           ;gpio.c: 71: break;
  2156  001C70  D039               	goto	l151
  2157  001C72                     l2033:
  2158  001C72  FFFF               	dw	65535	; assembler added errata NOP
  2159                           
  2160                           ;gpio.c: 74: LATB = (LATB & ~(Mask)) | (Mask & Data);
  2161  001C74  5010               	movf	GPIOPinWrite@Mask,w,c
  2162  001C76  1411               	andwf	GPIOPinWrite@Data,w,c
  2163  001C78  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2164  001C7A  5010               	movf	GPIOPinWrite@Mask,w,c
  2165  001C7C  0AFF               	xorlw	255
  2166  001C7E  148A               	andwf	3978,w,c	;volatile
  2167  001C80  1012               	iorwf	??_GPIOPinWrite,w,c
  2168  001C82  6E8A               	movwf	3978,c	;volatile
  2169                           
  2170                           ;gpio.c: 75: break;
  2171  001C84  D02F               	goto	l151
  2172  001C86                     l2035:
  2173  001C86  FFFF               	dw	65535	; assembler added errata NOP
  2174                           
  2175                           ;gpio.c: 78: LATC = (LATC & ~(Mask)) | (Mask & Data);
  2176  001C88  5010               	movf	GPIOPinWrite@Mask,w,c
  2177  001C8A  1411               	andwf	GPIOPinWrite@Data,w,c
  2178  001C8C  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2179  001C8E  5010               	movf	GPIOPinWrite@Mask,w,c
  2180  001C90  0AFF               	xorlw	255
  2181  001C92  148B               	andwf	3979,w,c	;volatile
  2182  001C94  1012               	iorwf	??_GPIOPinWrite,w,c
  2183  001C96  6E8B               	movwf	3979,c	;volatile
  2184                           
  2185                           ;gpio.c: 79: break;
  2186  001C98  D025               	goto	l151
  2187  001C9A                     l2037:
  2188  001C9A  FFFF               	dw	65535	; assembler added errata NOP
  2189                           
  2190                           ;gpio.c: 82: LATD = (LATD & ~(Mask)) | (Mask & Data);
  2191  001C9C  5010               	movf	GPIOPinWrite@Mask,w,c
  2192  001C9E  1411               	andwf	GPIOPinWrite@Data,w,c
  2193  001CA0  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2194  001CA2  5010               	movf	GPIOPinWrite@Mask,w,c
  2195  001CA4  0AFF               	xorlw	255
  2196  001CA6  148C               	andwf	3980,w,c	;volatile
  2197  001CA8  1012               	iorwf	??_GPIOPinWrite,w,c
  2198  001CAA  6E8C               	movwf	3980,c	;volatile
  2199                           
  2200                           ;gpio.c: 83: break;
  2201  001CAC  D01B               	goto	l151
  2202  001CAE                     l2039:
  2203  001CAE  FFFF               	dw	65535	; assembler added errata NOP
  2204                           
  2205                           ;gpio.c: 86: LATE = (LATE & ~(Mask)) | (Mask & Data);
  2206  001CB0  5010               	movf	GPIOPinWrite@Mask,w,c
  2207  001CB2  1411               	andwf	GPIOPinWrite@Data,w,c
  2208  001CB4  6E12               	movwf	??_GPIOPinWrite& (0+255),c
  2209  001CB6  5010               	movf	GPIOPinWrite@Mask,w,c
  2210  001CB8  0AFF               	xorlw	255
  2211  001CBA  148D               	andwf	3981,w,c	;volatile
  2212  001CBC  1012               	iorwf	??_GPIOPinWrite,w,c
  2213  001CBE  6E8D               	movwf	3981,c	;volatile
  2214                           
  2215                           ;gpio.c: 88: }
  2216                           
  2217                           ;gpio.c: 87: break;
  2218  001CC0  D011               	goto	l151
  2219  001CC2                     l2043:
  2220  001CC2  FFFF               	dw	65535	; assembler added errata NOP
  2221  001CC4  5013               	movf	GPIOPinWrite@Port,w,c
  2222                           
  2223                           ; Switch size 1, requested type "space"
  2224                           ; Number of cases is 5, Range of values is 0 to 4
  2225                           ; switch strategies available:
  2226                           ; Name         Instructions Cycles
  2227                           ; simple_byte           16     9 (average)
  2228                           ;	Chosen strategy is simple_byte
  2229  001CC6  0A00               	xorlw	0	; case 0
  2230  001CC8  B4D8               	btfsc	status,2,c
  2231  001CCA  D7C9               	goto	l2031
  2232  001CCC  0A01               	xorlw	1	; case 1
  2233  001CCE  B4D8               	btfsc	status,2,c
  2234  001CD0  D7D0               	goto	l2033
  2235  001CD2  0A03               	xorlw	3	; case 2
  2236  001CD4  B4D8               	btfsc	status,2,c
  2237  001CD6  D7D7               	goto	l2035
  2238  001CD8  0A01               	xorlw	1	; case 3
  2239  001CDA  B4D8               	btfsc	status,2,c
  2240  001CDC  D7DE               	goto	l2037
  2241  001CDE  0A07               	xorlw	7	; case 4
  2242  001CE0  B4D8               	btfsc	status,2,c
  2243  001CE2  D7E5               	goto	l2039
  2244  001CE4                     l151:
  2245  001CE4  FFFF               	dw	65535	; assembler added errata NOP
  2246  001CE6  0012               	return		;funcret
  2247  001CE8  FFFF               	dw	65535	; errata NOP
  2248  001CEA                     __end_of_GPIOPinWrite:
  2249                           	opt stack 0
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           intcon	equ	0xFF2
  2255                           indf0	equ	0xFEF
  2256                           postinc0	equ	0xFEE
  2257                           fsr0h	equ	0xFEA
  2258                           fsr0l	equ	0xFE9
  2259                           wreg	equ	0xFE8
  2260                           indf2	equ	0xFDF
  2261                           fsr2h	equ	0xFDA
  2262                           fsr2l	equ	0xFD9
  2263                           status	equ	0xFD8
  2264                           
  2265 ;; *************** function _Hcsr04_Init *****************
  2266 ;; Defined at:
  2267 ;;		line 9 in file "hcsr04.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2281 ;;      Params:         0       0       0       0       0       0       0
  2282 ;;      Locals:         0       0       0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0
  2284 ;;      Totals:         0       0       0       0       0       0       0
  2285 ;;Total ram usage:        0 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    3
  2288 ;; This function calls:
  2289 ;;		_Timer1_Init
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text11
  2296  00223A                     __ptext11:
  2297                           	opt stack 0
  2298  00223A                     _Hcsr04_Init:
  2299                           	opt stack 0
  2300  00223A  FFFF               	dw	65535	; assembler added errata NOP
  2301                           
  2302                           ;hcsr04.c: 11: Timer1_Init();
  2303                           
  2304                           ;incstack = 0
  2305  00223C  EC39  F011         	call	_Timer1_Init	;wreg free
  2306                           
  2307                           ;hcsr04.c: 13: TRISBbits.RB4 = 1;
  2308  002240  8893               	bsf	3987,4,c	;volatile
  2309                           
  2310                           ;hcsr04.c: 14: TRISDbits.RD0 = 0;
  2311  002242  9095               	bcf	3989,0,c	;volatile
  2312                           
  2313                           ;hcsr04.c: 15: LATDbits.LD0 = 0;
  2314  002244  908C               	bcf	3980,0,c	;volatile
  2315                           
  2316                           ;hcsr04.c: 18: INTCONbits.RBIF = 0;
  2317  002246  90F2               	bcf	intcon,0,c	;volatile
  2318                           
  2319                           ;hcsr04.c: 19: INTCONbits.RBIE = 1;
  2320  002248  86F2               	bsf	intcon,3,c	;volatile
  2321                           
  2322                           ;hcsr04.c: 21: INTCONbits.PEIE = 1;
  2323  00224A  8CF2               	bsf	intcon,6,c	;volatile
  2324                           
  2325                           ;hcsr04.c: 22: INTCONbits.GIE = 1;
  2326  00224C  8EF2               	bsf	intcon,7,c	;volatile
  2327  00224E  0012               	return		;funcret
  2328  002250  FFFF               	dw	65535	; errata NOP
  2329  002252                     __end_of_Hcsr04_Init:
  2330                           	opt stack 0
  2331                           tblptru	equ	0xFF8
  2332                           tblptrh	equ	0xFF7
  2333                           tblptrl	equ	0xFF6
  2334                           tablat	equ	0xFF5
  2335                           intcon	equ	0xFF2
  2336                           indf0	equ	0xFEF
  2337                           postinc0	equ	0xFEE
  2338                           fsr0h	equ	0xFEA
  2339                           fsr0l	equ	0xFE9
  2340                           wreg	equ	0xFE8
  2341                           indf2	equ	0xFDF
  2342                           fsr2h	equ	0xFDA
  2343                           fsr2l	equ	0xFD9
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _Timer1_Init *****************
  2347 ;; Defined at:
  2348 ;;		line 8 in file "timer1.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		None
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2362 ;;      Params:         0       0       0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_Hcsr04_Init
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text12
  2377  002272                     __ptext12:
  2378                           	opt stack 0
  2379  002272                     _Timer1_Init:
  2380                           	opt stack 0
  2381  002272  FFFF               	dw	65535	; assembler added errata NOP
  2382                           
  2383                           ;timer1.c: 10: T1RD16 = 1;
  2384                           
  2385                           ;incstack = 0
  2386  002274  8ECD               	bsf	4045,7,c	;volatile
  2387                           
  2388                           ;timer1.c: 11: TMR1CS = 0;
  2389  002276  92CD               	bcf	4045,1,c	;volatile
  2390                           
  2391                           ;timer1.c: 12: T1CKPS1 = 1;
  2392  002278  8ACD               	bsf	4045,5,c	;volatile
  2393                           
  2394                           ;timer1.c: 13: T1CKPS0 = 1;
  2395  00227A  88CD               	bsf	4045,4,c	;volatile
  2396  00227C  0012               	return		;funcret
  2397  00227E  FFFF               	dw	65535	; errata NOP
  2398  002280                     __end_of_Timer1_Init:
  2399                           	opt stack 0
  2400                           tblptru	equ	0xFF8
  2401                           tblptrh	equ	0xFF7
  2402                           tblptrl	equ	0xFF6
  2403                           tablat	equ	0xFF5
  2404                           intcon	equ	0xFF2
  2405                           indf0	equ	0xFEF
  2406                           postinc0	equ	0xFEE
  2407                           fsr0h	equ	0xFEA
  2408                           fsr0l	equ	0xFE9
  2409                           wreg	equ	0xFE8
  2410                           indf2	equ	0xFDF
  2411                           fsr2h	equ	0xFDA
  2412                           fsr2l	equ	0xFD9
  2413                           status	equ	0xFD8
  2414                           
  2415 ;; *************** function _ComInit *****************
  2416 ;; Defined at:
  2417 ;;		line 17 in file "com_can.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2431 ;;      Params:         0       0       0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0
  2434 ;;      Totals:         0       0       0       0       0       0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    3
  2438 ;; This function calls:
  2439 ;;		_CANInit
  2440 ;;		_CANIntClear
  2441 ;;		_CANIntEnable
  2442 ;;		_CANSetBaudRate
  2443 ;;		_CANSetFilter
  2444 ;;		_CANSetMask
  2445 ;;		_CANSetMode
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text13
  2452  002022                     __ptext13:
  2453                           	opt stack 0
  2454  002022                     _ComInit:
  2455                           	opt stack 0
  2456  002022  FFFF               	dw	65535	; assembler added errata NOP
  2457                           
  2458                           ;com_can.c: 19: CANInit();
  2459                           
  2460                           ;incstack = 0
  2461  002024  EC40  F011         	call	_CANInit	;wreg free
  2462                           
  2463                           ;com_can.c: 20: CANSetMode( 4 );
  2464  002028  0E04               	movlw	4
  2465  00202A  EC6E  F010         	call	_CANSetMode
  2466                           
  2467                           ;com_can.c: 23: CANSetBaudRate( 125000 );
  2468  00202E  0E48               	movlw	72
  2469  002030  6E10               	movwf	CANSetBaudRate@baudrate,c
  2470  002032  0EE8               	movlw	232
  2471  002034  6E11               	movwf	CANSetBaudRate@baudrate+1,c
  2472  002036  0E01               	movlw	1
  2473  002038  6E12               	movwf	CANSetBaudRate@baudrate+2,c
  2474  00203A  0E00               	movlw	0
  2475  00203C  6E13               	movwf	CANSetBaudRate@baudrate+3,c
  2476  00203E  EC3F  F00F         	call	_CANSetBaudRate	;wreg free
  2477                           
  2478                           ;com_can.c: 24: CANSetMask( 0, &rxCANMessage, 0x00, 0 );
  2479  002042  0EB5               	movlw	low _rxCANMessage
  2480  002044  6E10               	movwf	CANSetMask@pObject,c
  2481  002046  0E00               	movlw	high _rxCANMessage
  2482  002048  6E11               	movwf	CANSetMask@pObject+1,c
  2483  00204A  0E00               	movlw	0
  2484  00204C  6E12               	movwf	CANSetMask@ui8IDType,c
  2485  00204E  0E00               	movlw	0
  2486  002050  6E13               	movwf	CANSetMask@bDoubleBuffer,c
  2487  002052  0E00               	movlw	0
  2488  002054  ECB5  F007         	call	_CANSetMask
  2489                           
  2490                           ;com_can.c: 25: CANSetFilter( 0, &rxCANMessage );
  2491  002058  0EB5               	movlw	low _rxCANMessage
  2492  00205A  6E10               	movwf	CANSetFilter@pObject,c
  2493  00205C  0E00               	movlw	high _rxCANMessage
  2494  00205E  6E11               	movwf	CANSetFilter@pObject+1,c
  2495  002060  0E00               	movlw	0
  2496  002062  EC3C  F00A         	call	_CANSetFilter
  2497                           
  2498                           ;com_can.c: 27: CANSetMode( 0 );
  2499  002066  0E00               	movlw	0
  2500  002068  EC6E  F010         	call	_CANSetMode
  2501                           
  2502                           ;com_can.c: 29: CANIntClear( 1<<0 | 1<<1 );
  2503  00206C  0E03               	movlw	3
  2504  00206E  EC75  F00E         	call	_CANIntClear
  2505                           
  2506                           ;com_can.c: 30: CANIntEnable( 1<<0 | 1<<1 );
  2507  002072  0E03               	movlw	3
  2508  002074  ECDE  F00D         	call	_CANIntEnable
  2509                           
  2510                           ;com_can.c: 32: INTCONbits.GIE = 1 ;
  2511  002078  8EF2               	bsf	intcon,7,c	;volatile
  2512                           
  2513                           ;com_can.c: 33: INTCONbits.PEIE = 1;
  2514  00207A  8CF2               	bsf	intcon,6,c	;volatile
  2515  00207C  0012               	return		;funcret
  2516  00207E  FFFF               	dw	65535	; errata NOP
  2517  002080                     __end_of_ComInit:
  2518                           	opt stack 0
  2519                           tblptru	equ	0xFF8
  2520                           tblptrh	equ	0xFF7
  2521                           tblptrl	equ	0xFF6
  2522                           tablat	equ	0xFF5
  2523                           intcon	equ	0xFF2
  2524                           indf0	equ	0xFEF
  2525                           postinc0	equ	0xFEE
  2526                           fsr0h	equ	0xFEA
  2527                           fsr0l	equ	0xFE9
  2528                           wreg	equ	0xFE8
  2529                           indf2	equ	0xFDF
  2530                           fsr2h	equ	0xFDA
  2531                           fsr2l	equ	0xFD9
  2532                           status	equ	0xFD8
  2533                           
  2534 ;; *************** function _CANSetMode *****************
  2535 ;; Defined at:
  2536 ;;		line 18 in file "CAN.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  mode            1    wreg     unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  mode            1   17[COMRAM] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2550 ;;      Params:         0       0       0       0       0       0       0
  2551 ;;      Locals:         1       0       0       0       0       0       0
  2552 ;;      Temps:          2       0       0       0       0       0       0
  2553 ;;      Totals:         3       0       0       0       0       0       0
  2554 ;;Total ram usage:        3 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    2
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_ComInit
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text14
  2565  0020DC                     __ptext14:
  2566                           	opt stack 0
  2567  0020DC                     _CANSetMode:
  2568                           	opt stack 0
  2569  0020DC  FFFF               	dw	65535	; assembler added errata NOP
  2570                           
  2571                           ;incstack = 0
  2572                           ;CANSetMode@mode stored from wreg
  2573  0020DE  6E12               	movwf	CANSetMode@mode,c
  2574                           
  2575                           ;CAN.c: 21: CANCON = (CANCON & ~(0xE0)) | (0xE0 & mode<<5);
  2576  0020E0  C012  F010         	movff	CANSetMode@mode,??_CANSetMode
  2577  0020E4  0E05               	movlw	5
  2578  0020E6  6E11               	movwf	(??_CANSetMode+1)& (0+255),c
  2579  0020E8                     u1525:
  2580  0020E8  FFFF               	dw	65535	; assembler added errata NOP
  2581  0020EA  90D8               	bcf	status,0,c
  2582  0020EC  3610               	rlcf	??_CANSetMode,f,c
  2583  0020EE  2E11               	decfsz	(??_CANSetMode+1)& (0+255),f,c
  2584  0020F0  D7FB               	goto	u1525
  2585  0020F2  0EE0               	movlw	224
  2586  0020F4  1610               	andwf	??_CANSetMode,f,c
  2587  0020F6  506F               	movf	3951,w,c	;volatile
  2588  0020F8  0B1F               	andlw	31
  2589  0020FA  1010               	iorwf	??_CANSetMode,w,c
  2590  0020FC  6E6F               	movwf	3951,c	;volatile
  2591  0020FE                     l2183:
  2592  0020FE  FFFF               	dw	65535	; assembler added errata NOP
  2593  002100  5012               	movf	CANSetMode@mode,w,c
  2594  002102  6E10               	movwf	??_CANSetMode& (0+255),c
  2595  002104  6A11               	clrf	(??_CANSetMode+1)& (0+255),c
  2596  002106  0E05               	movlw	5
  2597  002108                     u1535:
  2598  002108  FFFF               	dw	65535	; assembler added errata NOP
  2599  00210A  90D8               	bcf	status,0,c
  2600  00210C  3610               	rlcf	??_CANSetMode,f,c
  2601  00210E  3611               	rlcf	??_CANSetMode+1,f,c
  2602  002110  2EE8               	decfsz	wreg,f,c
  2603  002112  D7FA               	goto	u1535
  2604  002114  0EE0               	movlw	224
  2605  002116  1810               	xorwf	??_CANSetMode,w,c
  2606  002118  1011               	iorwf	??_CANSetMode+1,w,c
  2607  00211A  B4D8               	btfsc	status,2,c
  2608  00211C  D002               	goto	u1540
  2609  00211E  0E01               	movlw	1
  2610  002120  D002               	goto	u1550
  2611  002122                     u1540:
  2612  002122  FFFF               	dw	65535	; assembler added errata NOP
  2613  002124  0E00               	movlw	0
  2614  002126                     u1550:
  2615  002126  FFFF               	dw	65535	; assembler added errata NOP
  2616  002128  146E               	andwf	3950,w,c	;volatile
  2617  00212A  0900               	iorlw	0
  2618  00212C  B4D8               	btfsc	status,2,c
  2619  00212E  0012               	return		;funcret
  2620  002130  FFFF               	dw	65535	; assembler added errata NOP
  2621  002132  D7E5               	goto	l2183
  2622  002134  FFFF               	dw	65535	; errata NOP
  2623  002136                     __end_of_CANSetMode:
  2624                           	opt stack 0
  2625                           tblptru	equ	0xFF8
  2626                           tblptrh	equ	0xFF7
  2627                           tblptrl	equ	0xFF6
  2628                           tablat	equ	0xFF5
  2629                           intcon	equ	0xFF2
  2630                           indf0	equ	0xFEF
  2631                           postinc0	equ	0xFEE
  2632                           fsr0h	equ	0xFEA
  2633                           fsr0l	equ	0xFE9
  2634                           wreg	equ	0xFE8
  2635                           indf2	equ	0xFDF
  2636                           fsr2h	equ	0xFDA
  2637                           fsr2l	equ	0xFD9
  2638                           status	equ	0xFD8
  2639                           
  2640 ;; *************** function _CANSetMask *****************
  2641 ;; Defined at:
  2642 ;;		line 86 in file "CAN.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  ui8CanBfrNum    1    wreg     unsigned char 
  2645 ;;  pObject         2   15[COMRAM] PTR struct .
  2646 ;;		 -> rxCANMessage(18), 
  2647 ;;  ui8IDType       1   17[COMRAM] unsigned char 
  2648 ;;  bDoubleBuffe    1   18[COMRAM] unsigned char 
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;  ui8CanBfrNum    1   24[COMRAM] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2660 ;;      Params:         4       0       0       0       0       0       0
  2661 ;;      Locals:         1       0       0       0       0       0       0
  2662 ;;      Temps:          5       0       0       0       0       0       0
  2663 ;;      Totals:        10       0       0       0       0       0       0
  2664 ;;Total ram usage:       10 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    2
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_ComInit
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text15
  2675  000F6A                     __ptext15:
  2676                           	opt stack 0
  2677  000F6A                     _CANSetMask:
  2678                           	opt stack 0
  2679  000F6A  FFFF               	dw	65535	; assembler added errata NOP
  2680                           
  2681                           ;incstack = 0
  2682                           ;CANSetMask@ui8CanBfrNum stored from wreg
  2683  000F6C  6E19               	movwf	CANSetMask@ui8CanBfrNum,c
  2684                           
  2685                           ;CAN.c: 93: if( ui8CanBfrNum == 0 )
  2686  000F6E  5019               	movf	CANSetMask@ui8CanBfrNum,w,c
  2687  000F70  A4D8               	btfss	status,2,c
  2688  000F72  D0B3               	goto	l2213
  2689                           
  2690                           ;CAN.c: 94: {
  2691                           ;CAN.c: 95: RXB0CON = (RXB0CON & ~(((3<<5) | (1<<2)))) | (((3<<5) | (1<<2)) & ((ui8IDTyp
      +                          e<<5) | (bDoubleBuffer<<2)));
  2692  000F74  C013  F014         	movff	CANSetMask@bDoubleBuffer,??_CANSetMask
  2693  000F78  90D8               	bcf	status,0,c
  2694  000F7A  3614               	rlcf	??_CANSetMask,f,c
  2695  000F7C  90D8               	bcf	status,0,c
  2696  000F7E  3614               	rlcf	??_CANSetMask,f,c
  2697  000F80  3812               	swapf	CANSetMask@ui8IDType,w,c
  2698  000F82  46E8               	rlncf	wreg,f,c
  2699  000F84  0BE0               	andlw	224
  2700  000F86  1014               	iorwf	??_CANSetMask,w,c
  2701  000F88  6E15               	movwf	(??_CANSetMask+1)& (0+255),c
  2702  000F8A  0E64               	movlw	100
  2703  000F8C  1615               	andwf	??_CANSetMask+1,f,c
  2704  000F8E  5060               	movf	3936,w,c	;volatile
  2705  000F90  0B9B               	andlw	155
  2706  000F92  1015               	iorwf	??_CANSetMask+1,w,c
  2707  000F94  6E60               	movwf	3936,c	;volatile
  2708                           
  2709                           ;CAN.c: 98: if( pObject->ui32MsgID <= 0x7ff )
  2710  000F96  C010  FFD9         	movff	CANSetMask@pObject,fsr2l
  2711  000F9A  C011  FFDA         	movff	CANSetMask@pObject+1,fsr2h
  2712  000F9E  0E03               	movlw	3
  2713  000FA0  50DB               	movf	plusw2,w,c
  2714  000FA2  E13C               	bnz	l2211
  2715  000FA4  0E02               	movlw	2
  2716  000FA6  50DB               	movf	plusw2,w,c
  2717  000FA8  E139               	bnz	l2211
  2718  000FAA  52DE               	movf	postinc2,f,c
  2719  000FAC  0E08               	movlw	8
  2720  000FAE  5CDE               	subwf	postinc2,w,c
  2721  000FB0  B0D8               	btfsc	status,0,c
  2722  000FB2  D034               	goto	l2211
  2723                           
  2724                           ;CAN.c: 99: {
  2725                           ;CAN.c: 100: RXM0SIDH = (RXM0SIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>3);
  2726  000FB4  EE20 F004          	lfsr	2,4
  2727  000FB8  5010               	movf	CANSetMask@pObject,w,c
  2728  000FBA  26D9               	addwf	fsr2l,f,c
  2729  000FBC  5011               	movf	CANSetMask@pObject+1,w,c
  2730  000FBE  22DA               	addwfc	fsr2h,f,c
  2731  000FC0  CFDE F014          	movff	postinc2,??_CANSetMask
  2732  000FC4  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2733  000FC8  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2734  000FCC  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2735  000FD0  0E04               	movlw	4
  2736  000FD2  D006               	goto	u1630
  2737  000FD4                     u1635:
  2738  000FD4  FFFF               	dw	65535	; assembler added errata NOP
  2739  000FD6  90D8               	bcf	status,0,c
  2740  000FD8  3217               	rrcf	??_CANSetMask+3,f,c
  2741  000FDA  3216               	rrcf	??_CANSetMask+2,f,c
  2742  000FDC  3215               	rrcf	??_CANSetMask+1,f,c
  2743  000FDE  3214               	rrcf	??_CANSetMask,f,c
  2744  000FE0                     u1630:
  2745  000FE0  FFFF               	dw	65535	; assembler added errata NOP
  2746  000FE2  2EE8               	decfsz	wreg,f,c
  2747  000FE4  D7F7               	goto	u1635
  2748  000FE6  C014  FF18         	movff	??_CANSetMask,3864
  2749                           
  2750                           ;CAN.c: 101: RXM0SIDL = (RXM0SIDL & ~(0xE0)) | (0xE0 & pObject->ui32MsgIDMask<<5);
  2751  000FEA  EE20 F004          	lfsr	2,4
  2752  000FEE  5010               	movf	CANSetMask@pObject,w,c
  2753  000FF0  26D9               	addwf	fsr2l,f,c
  2754  000FF2  5011               	movf	CANSetMask@pObject+1,w,c
  2755  000FF4  22DA               	addwfc	fsr2h,f,c
  2756  000FF6  50DF               	movf	indf2,w,c
  2757  000FF8  6E14               	movwf	??_CANSetMask& (0+255),c
  2758  000FFA  0E05               	movlw	5
  2759  000FFC  6E15               	movwf	(??_CANSetMask+1)& (0+255),c
  2760  000FFE                     u1645:
  2761  000FFE  FFFF               	dw	65535	; assembler added errata NOP
  2762  001000  90D8               	bcf	status,0,c
  2763  001002  3614               	rlcf	??_CANSetMask,f,c
  2764  001004  2E15               	decfsz	(??_CANSetMask+1)& (0+255),f,c
  2765  001006  D7FB               	goto	u1645
  2766  001008  0EE0               	movlw	224
  2767  00100A  1614               	andwf	??_CANSetMask,f,c
  2768                           
  2769                           ; multi bank
  2770  00100C  010F               	movlb	15
  2771  00100E  5119               	movf	25,w,b
  2772  001010  0B1F               	andlw	31
  2773  001012  1014               	iorwf	??_CANSetMask,w,c
  2774  001014  6E16               	movwf	(??_CANSetMask+2)& (0+255),c
  2775  001016  C016  FF19         	movff	??_CANSetMask+2,3865
  2776                           
  2777                           ;CAN.c: 102: }
  2778  00101A  D05F               	goto	l2213
  2779  00101C                     l2211:
  2780  00101C  FFFF               	dw	65535	; assembler added errata NOP
  2781                           
  2782                           ;CAN.c: 104: else
  2783                           ;CAN.c: 105: {
  2784                           ;CAN.c: 106: RXM0SIDH = (RXM0SIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>21);
  2785  00101E  EE20 F004          	lfsr	2,4
  2786  001022  5010               	movf	CANSetMask@pObject,w,c
  2787  001024  26D9               	addwf	fsr2l,f,c
  2788  001026  5011               	movf	CANSetMask@pObject+1,w,c
  2789  001028  22DA               	addwfc	fsr2h,f,c
  2790  00102A  CFDE F014          	movff	postinc2,??_CANSetMask
  2791  00102E  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2792  001032  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2793  001036  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2794  00103A  0E16               	movlw	22
  2795  00103C  D006               	goto	u1650
  2796  00103E                     u1655:
  2797  00103E  FFFF               	dw	65535	; assembler added errata NOP
  2798  001040  90D8               	bcf	status,0,c
  2799  001042  3217               	rrcf	??_CANSetMask+3,f,c
  2800  001044  3216               	rrcf	??_CANSetMask+2,f,c
  2801  001046  3215               	rrcf	??_CANSetMask+1,f,c
  2802  001048  3214               	rrcf	??_CANSetMask,f,c
  2803  00104A                     u1650:
  2804  00104A  FFFF               	dw	65535	; assembler added errata NOP
  2805  00104C  2EE8               	decfsz	wreg,f,c
  2806  00104E  D7F7               	goto	u1655
  2807  001050  C014  FF18         	movff	??_CANSetMask,3864
  2808                           
  2809                           ;CAN.c: 107: RXM0SIDL = (RXM0SIDL & ~(0x03)) | (0x03 & pObject->ui32MsgIDMask>>16);
  2810  001054  EE20 F004          	lfsr	2,4
  2811  001058  5010               	movf	CANSetMask@pObject,w,c
  2812  00105A  26D9               	addwf	fsr2l,f,c
  2813  00105C  5011               	movf	CANSetMask@pObject+1,w,c
  2814  00105E  22DA               	addwfc	fsr2h,f,c
  2815  001060  CFDE F014          	movff	postinc2,??_CANSetMask
  2816  001064  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2817  001068  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2818  00106C  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2819  001070  0E11               	movlw	17
  2820  001072  D006               	goto	u1660
  2821  001074                     u1665:
  2822  001074  FFFF               	dw	65535	; assembler added errata NOP
  2823  001076  90D8               	bcf	status,0,c
  2824  001078  3217               	rrcf	??_CANSetMask+3,f,c
  2825  00107A  3216               	rrcf	??_CANSetMask+2,f,c
  2826  00107C  3215               	rrcf	??_CANSetMask+1,f,c
  2827  00107E  3214               	rrcf	??_CANSetMask,f,c
  2828  001080                     u1660:
  2829  001080  FFFF               	dw	65535	; assembler added errata NOP
  2830  001082  2EE8               	decfsz	wreg,f,c
  2831  001084  D7F7               	goto	u1665
  2832  001086  0E03               	movlw	3
  2833  001088  1614               	andwf	??_CANSetMask,f,c
  2834                           
  2835                           ; multi bank
  2836  00108A  010F               	movlb	15
  2837  00108C  5119               	movf	25,w,b
  2838  00108E  0BFC               	andlw	252
  2839  001090  1014               	iorwf	??_CANSetMask,w,c
  2840  001092  6E18               	movwf	(??_CANSetMask+4)& (0+255),c
  2841  001094  C018  FF19         	movff	??_CANSetMask+4,3865
  2842                           
  2843                           ;CAN.c: 108: RXM0EIDH = (RXM0EIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>8);
  2844  001098  EE20 F004          	lfsr	2,4
  2845  00109C  5010               	movf	CANSetMask@pObject,w,c
  2846  00109E  26D9               	addwf	fsr2l,f,c
  2847  0010A0  5011               	movf	CANSetMask@pObject+1,w,c
  2848  0010A2  22DA               	addwfc	fsr2h,f,c
  2849  0010A4  CFDE F014          	movff	postinc2,??_CANSetMask
  2850  0010A8  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2851  0010AC  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2852  0010B0  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2853  0010B4  C015  F014         	movff	??_CANSetMask+1,??_CANSetMask
  2854  0010B8  C016  F015         	movff	??_CANSetMask+2,??_CANSetMask+1
  2855  0010BC  C017  F016         	movff	??_CANSetMask+3,??_CANSetMask+2
  2856  0010C0  6A17               	clrf	??_CANSetMask+3,c
  2857  0010C2  C014  FF1A         	movff	??_CANSetMask,3866
  2858                           
  2859                           ;CAN.c: 109: RXM0EIDL = (RXM0EIDL & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask);
  2860  0010C6  EE20 F004          	lfsr	2,4
  2861  0010CA  5010               	movf	CANSetMask@pObject,w,c
  2862  0010CC  26D9               	addwf	fsr2l,f,c
  2863  0010CE  5011               	movf	CANSetMask@pObject+1,w,c
  2864  0010D0  22DA               	addwfc	fsr2h,f,c
  2865  0010D2  50DF               	movf	indf2,w,c
  2866  0010D4  6E14               	movwf	??_CANSetMask& (0+255),c
  2867  0010D6  C014  FF1B         	movff	??_CANSetMask,3867
  2868  0010DA                     l2213:
  2869  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  2870                           
  2871                           ;CAN.c: 118: if ( ui8CanBfrNum == 1)
  2872  0010DC  0419               	decf	CANSetMask@ui8CanBfrNum,w,c
  2873  0010DE  A4D8               	btfss	status,2,c
  2874  0010E0  D0B4               	goto	l371
  2875                           
  2876                           ;CAN.c: 119: {
  2877                           ;CAN.c: 120: RXB1CON = (RXB1CON & ~((3<<5))) | ((3<<5) & ui8IDType<<5);
  2878  0010E2  C012  F014         	movff	CANSetMask@ui8IDType,??_CANSetMask
  2879  0010E6  0E05               	movlw	5
  2880  0010E8  6E15               	movwf	(??_CANSetMask+1)& (0+255),c
  2881  0010EA                     u1685:
  2882  0010EA  FFFF               	dw	65535	; assembler added errata NOP
  2883  0010EC  90D8               	bcf	status,0,c
  2884  0010EE  3614               	rlcf	??_CANSetMask,f,c
  2885  0010F0  2E15               	decfsz	(??_CANSetMask+1)& (0+255),f,c
  2886  0010F2  D7FB               	goto	u1685
  2887  0010F4  0E60               	movlw	96
  2888  0010F6  1614               	andwf	??_CANSetMask,f,c
  2889                           
  2890                           ; multi bank
  2891  0010F8  010F               	movlb	15
  2892  0010FA  5150               	movf	80,w,b
  2893  0010FC  0B9F               	andlw	159
  2894  0010FE  1014               	iorwf	??_CANSetMask,w,c
  2895  001100  6E16               	movwf	(??_CANSetMask+2)& (0+255),c
  2896  001102  C016  FF50         	movff	??_CANSetMask+2,3920
  2897                           
  2898                           ;CAN.c: 123: if( pObject->ui32MsgID <= 0x7ff )
  2899  001106  C010  FFD9         	movff	CANSetMask@pObject,fsr2l
  2900  00110A  C011  FFDA         	movff	CANSetMask@pObject+1,fsr2h
  2901  00110E  0E03               	movlw	3
  2902  001110  50DB               	movf	plusw2,w,c
  2903  001112  E13C               	bnz	l2221
  2904  001114  0E02               	movlw	2
  2905  001116  50DB               	movf	plusw2,w,c
  2906  001118  E139               	bnz	l2221
  2907  00111A  52DE               	movf	postinc2,f,c
  2908  00111C  0E08               	movlw	8
  2909  00111E  5CDE               	subwf	postinc2,w,c
  2910  001120  B0D8               	btfsc	status,0,c
  2911  001122  D034               	goto	l2221
  2912                           
  2913                           ;CAN.c: 124: {
  2914                           ;CAN.c: 125: RXM1SIDH = (RXM1SIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>3);
  2915  001124  EE20 F004          	lfsr	2,4
  2916  001128  5010               	movf	CANSetMask@pObject,w,c
  2917  00112A  26D9               	addwf	fsr2l,f,c
  2918  00112C  5011               	movf	CANSetMask@pObject+1,w,c
  2919  00112E  22DA               	addwfc	fsr2h,f,c
  2920  001130  CFDE F014          	movff	postinc2,??_CANSetMask
  2921  001134  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2922  001138  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2923  00113C  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2924  001140  0E04               	movlw	4
  2925  001142  D006               	goto	u1700
  2926  001144                     u1705:
  2927  001144  FFFF               	dw	65535	; assembler added errata NOP
  2928  001146  90D8               	bcf	status,0,c
  2929  001148  3217               	rrcf	??_CANSetMask+3,f,c
  2930  00114A  3216               	rrcf	??_CANSetMask+2,f,c
  2931  00114C  3215               	rrcf	??_CANSetMask+1,f,c
  2932  00114E  3214               	rrcf	??_CANSetMask,f,c
  2933  001150                     u1700:
  2934  001150  FFFF               	dw	65535	; assembler added errata NOP
  2935  001152  2EE8               	decfsz	wreg,f,c
  2936  001154  D7F7               	goto	u1705
  2937  001156  C014  FF1C         	movff	??_CANSetMask,3868
  2938                           
  2939                           ;CAN.c: 126: RXM1SIDL = (RXM1SIDL & ~(0xE0)) | (0xE0 & pObject->ui32MsgIDMask<<5);
  2940  00115A  EE20 F004          	lfsr	2,4
  2941  00115E  5010               	movf	CANSetMask@pObject,w,c
  2942  001160  26D9               	addwf	fsr2l,f,c
  2943  001162  5011               	movf	CANSetMask@pObject+1,w,c
  2944  001164  22DA               	addwfc	fsr2h,f,c
  2945  001166  50DF               	movf	indf2,w,c
  2946  001168  6E14               	movwf	??_CANSetMask& (0+255),c
  2947  00116A  0E05               	movlw	5
  2948  00116C  6E15               	movwf	(??_CANSetMask+1)& (0+255),c
  2949  00116E                     u1715:
  2950  00116E  FFFF               	dw	65535	; assembler added errata NOP
  2951  001170  90D8               	bcf	status,0,c
  2952  001172  3614               	rlcf	??_CANSetMask,f,c
  2953  001174  2E15               	decfsz	(??_CANSetMask+1)& (0+255),f,c
  2954  001176  D7FB               	goto	u1715
  2955  001178  0EE0               	movlw	224
  2956  00117A  1614               	andwf	??_CANSetMask,f,c
  2957                           
  2958                           ; multi bank
  2959  00117C  010F               	movlb	15
  2960  00117E  511D               	movf	29,w,b
  2961  001180  0B1F               	andlw	31
  2962  001182  1014               	iorwf	??_CANSetMask,w,c
  2963  001184  6E16               	movwf	(??_CANSetMask+2)& (0+255),c
  2964  001186  C016  FF1D         	movff	??_CANSetMask+2,3869
  2965                           
  2966                           ;CAN.c: 127: }
  2967  00118A  D05F               	goto	l371
  2968  00118C                     l2221:
  2969  00118C  FFFF               	dw	65535	; assembler added errata NOP
  2970                           
  2971                           ;CAN.c: 129: else
  2972                           ;CAN.c: 130: {
  2973                           ;CAN.c: 131: RXM1SIDH = (RXM1SIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>21);
  2974  00118E  EE20 F004          	lfsr	2,4
  2975  001192  5010               	movf	CANSetMask@pObject,w,c
  2976  001194  26D9               	addwf	fsr2l,f,c
  2977  001196  5011               	movf	CANSetMask@pObject+1,w,c
  2978  001198  22DA               	addwfc	fsr2h,f,c
  2979  00119A  CFDE F014          	movff	postinc2,??_CANSetMask
  2980  00119E  CFDE F015          	movff	postinc2,??_CANSetMask+1
  2981  0011A2  CFDE F016          	movff	postinc2,??_CANSetMask+2
  2982  0011A6  CFDE F017          	movff	postinc2,??_CANSetMask+3
  2983  0011AA  0E16               	movlw	22
  2984  0011AC  D006               	goto	u1720
  2985  0011AE                     u1725:
  2986  0011AE  FFFF               	dw	65535	; assembler added errata NOP
  2987  0011B0  90D8               	bcf	status,0,c
  2988  0011B2  3217               	rrcf	??_CANSetMask+3,f,c
  2989  0011B4  3216               	rrcf	??_CANSetMask+2,f,c
  2990  0011B6  3215               	rrcf	??_CANSetMask+1,f,c
  2991  0011B8  3214               	rrcf	??_CANSetMask,f,c
  2992  0011BA                     u1720:
  2993  0011BA  FFFF               	dw	65535	; assembler added errata NOP
  2994  0011BC  2EE8               	decfsz	wreg,f,c
  2995  0011BE  D7F7               	goto	u1725
  2996  0011C0  C014  FF1C         	movff	??_CANSetMask,3868
  2997                           
  2998                           ;CAN.c: 132: RXM1SIDL = (RXM1SIDL & ~(0x03)) | (0x03 & pObject->ui32MsgIDMask>>16);
  2999  0011C4  EE20 F004          	lfsr	2,4
  3000  0011C8  5010               	movf	CANSetMask@pObject,w,c
  3001  0011CA  26D9               	addwf	fsr2l,f,c
  3002  0011CC  5011               	movf	CANSetMask@pObject+1,w,c
  3003  0011CE  22DA               	addwfc	fsr2h,f,c
  3004  0011D0  CFDE F014          	movff	postinc2,??_CANSetMask
  3005  0011D4  CFDE F015          	movff	postinc2,??_CANSetMask+1
  3006  0011D8  CFDE F016          	movff	postinc2,??_CANSetMask+2
  3007  0011DC  CFDE F017          	movff	postinc2,??_CANSetMask+3
  3008  0011E0  0E11               	movlw	17
  3009  0011E2  D006               	goto	u1730
  3010  0011E4                     u1735:
  3011  0011E4  FFFF               	dw	65535	; assembler added errata NOP
  3012  0011E6  90D8               	bcf	status,0,c
  3013  0011E8  3217               	rrcf	??_CANSetMask+3,f,c
  3014  0011EA  3216               	rrcf	??_CANSetMask+2,f,c
  3015  0011EC  3215               	rrcf	??_CANSetMask+1,f,c
  3016  0011EE  3214               	rrcf	??_CANSetMask,f,c
  3017  0011F0                     u1730:
  3018  0011F0  FFFF               	dw	65535	; assembler added errata NOP
  3019  0011F2  2EE8               	decfsz	wreg,f,c
  3020  0011F4  D7F7               	goto	u1735
  3021  0011F6  0E03               	movlw	3
  3022  0011F8  1614               	andwf	??_CANSetMask,f,c
  3023                           
  3024                           ; multi bank
  3025  0011FA  010F               	movlb	15
  3026  0011FC  511D               	movf	29,w,b
  3027  0011FE  0BFC               	andlw	252
  3028  001200  1014               	iorwf	??_CANSetMask,w,c
  3029  001202  6E18               	movwf	(??_CANSetMask+4)& (0+255),c
  3030  001204  C018  FF1D         	movff	??_CANSetMask+4,3869
  3031                           
  3032                           ;CAN.c: 133: RXM1EIDH = (RXM1EIDH & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask>>8);
  3033  001208  EE20 F004          	lfsr	2,4
  3034  00120C  5010               	movf	CANSetMask@pObject,w,c
  3035  00120E  26D9               	addwf	fsr2l,f,c
  3036  001210  5011               	movf	CANSetMask@pObject+1,w,c
  3037  001212  22DA               	addwfc	fsr2h,f,c
  3038  001214  CFDE F014          	movff	postinc2,??_CANSetMask
  3039  001218  CFDE F015          	movff	postinc2,??_CANSetMask+1
  3040  00121C  CFDE F016          	movff	postinc2,??_CANSetMask+2
  3041  001220  CFDE F017          	movff	postinc2,??_CANSetMask+3
  3042  001224  C015  F014         	movff	??_CANSetMask+1,??_CANSetMask
  3043  001228  C016  F015         	movff	??_CANSetMask+2,??_CANSetMask+1
  3044  00122C  C017  F016         	movff	??_CANSetMask+3,??_CANSetMask+2
  3045  001230  6A17               	clrf	??_CANSetMask+3,c
  3046  001232  C014  FF1E         	movff	??_CANSetMask,3870
  3047                           
  3048                           ;CAN.c: 134: RXM1EIDL = (RXM1EIDL & ~(0xFF)) | (0xFF & pObject->ui32MsgIDMask);
  3049  001236  EE20 F004          	lfsr	2,4
  3050  00123A  5010               	movf	CANSetMask@pObject,w,c
  3051  00123C  26D9               	addwf	fsr2l,f,c
  3052  00123E  5011               	movf	CANSetMask@pObject+1,w,c
  3053  001240  22DA               	addwfc	fsr2h,f,c
  3054  001242  50DF               	movf	indf2,w,c
  3055  001244  6E14               	movwf	??_CANSetMask& (0+255),c
  3056  001246  C014  FF1F         	movff	??_CANSetMask,3871
  3057  00124A                     l371:
  3058  00124A  FFFF               	dw	65535	; assembler added errata NOP
  3059  00124C  0012               	return		;funcret
  3060  00124E  FFFF               	dw	65535	; errata NOP
  3061  001250                     __end_of_CANSetMask:
  3062                           	opt stack 0
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           intcon	equ	0xFF2
  3068                           indf0	equ	0xFEF
  3069                           postinc0	equ	0xFEE
  3070                           fsr0h	equ	0xFEA
  3071                           fsr0l	equ	0xFE9
  3072                           wreg	equ	0xFE8
  3073                           indf2	equ	0xFDF
  3074                           postinc2	equ	0xFDE
  3075                           plusw2	equ	0xFDB
  3076                           fsr2h	equ	0xFDA
  3077                           fsr2l	equ	0xFD9
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function _CANSetFilter *****************
  3081 ;; Defined at:
  3082 ;;		line 150 in file "CAN.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  ui8CanFltrNu    1    wreg     unsigned char 
  3085 ;;  pObject         2   15[COMRAM] PTR struct .
  3086 ;;		 -> rxCANMessage(18), 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  ui8CanFltrNu    1   25[COMRAM] unsigned char 
  3089 ;;  FILTER_BASE_    2   30[COMRAM] PTR volatile unsigned ch
  3090 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3091 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3092 ;;  RXFSIDL_PTR     2   28[COMRAM] PTR volatile unsigned ch
  3093 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3094 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3095 ;;  RXFSIDH_PTR     2   26[COMRAM] PTR volatile unsigned ch
  3096 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3097 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3098 ;;  RXFEIDL_PTR     2   23[COMRAM] PTR volatile unsigned ch
  3099 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3100 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3101 ;;  RXFEIDH_PTR     2   21[COMRAM] PTR volatile unsigned ch
  3102 ;;		 -> RXF5SIDH(1), RXF4SIDH(1), RXF3SIDH(1), RXF2SIDH(1), 
  3103 ;;		 -> RXF1SIDH(1), RXF0SIDH(1), NULL(0), 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3113 ;;      Params:         2       0       0       0       0       0       0
  3114 ;;      Locals:        11       0       0       0       0       0       0
  3115 ;;      Temps:          4       0       0       0       0       0       0
  3116 ;;      Totals:        17       0       0       0       0       0       0
  3117 ;;Total ram usage:       17 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    2
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_ComInit
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text16
  3128  001478                     __ptext16:
  3129                           	opt stack 0
  3130  001478                     _CANSetFilter:
  3131                           	opt stack 0
  3132  001478  FFFF               	dw	65535	; assembler added errata NOP
  3133                           
  3134                           ;incstack = 0
  3135                           ;CANSetFilter@ui8CanFltrNum stored from wreg
  3136  00147A  6E1A               	movwf	CANSetFilter@ui8CanFltrNum,c
  3137                           
  3138                           ;CAN.c: 161: volatile uint8_t * FILTER_BASE_ADDRESS = 0;
  3139  00147C  0E00               	movlw	0
  3140  00147E  6E1F               	movwf	CANSetFilter@FILTER_BASE_ADDRESS,c
  3141  001480  0E00               	movlw	0
  3142  001482  6E20               	movwf	CANSetFilter@FILTER_BASE_ADDRESS+1,c
  3143                           
  3144                           ;CAN.c: 163: switch (ui8CanFltrNum)
  3145  001484  D016               	goto	l2239
  3146  001486                     l2225:
  3147  001486  FFFF               	dw	65535	; assembler added errata NOP
  3148                           
  3149                           ;CAN.c: 166: FILTER_BASE_ADDRESS = &RXF0SIDH;
  3150  001488  0E00               	movlw	0
  3151  00148A  D00E               	goto	L5
  3152  00148C                     l2227:
  3153  00148C  FFFF               	dw	65535	; assembler added errata NOP
  3154                           
  3155                           ;CAN.c: 169: FILTER_BASE_ADDRESS = &RXF1SIDH;
  3156  00148E  0E04               	movlw	4
  3157  001490  D00B               	goto	L5
  3158  001492                     l2229:
  3159  001492  FFFF               	dw	65535	; assembler added errata NOP
  3160                           
  3161                           ;CAN.c: 172: FILTER_BASE_ADDRESS = &RXF2SIDH;
  3162  001494  0E08               	movlw	8
  3163  001496  D008               	goto	L5
  3164  001498                     l2231:
  3165  001498  FFFF               	dw	65535	; assembler added errata NOP
  3166                           
  3167                           ;CAN.c: 175: FILTER_BASE_ADDRESS = &RXF3SIDH;
  3168  00149A  0E0C               	movlw	12
  3169  00149C  D005               	goto	L5
  3170  00149E                     l2233:
  3171  00149E  FFFF               	dw	65535	; assembler added errata NOP
  3172                           
  3173                           ;CAN.c: 178: FILTER_BASE_ADDRESS = &RXF4SIDH;
  3174  0014A0  0E10               	movlw	16
  3175  0014A2  D002               	goto	L5
  3176  0014A4                     l2235:
  3177  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  3178                           
  3179                           ;CAN.c: 181: FILTER_BASE_ADDRESS = &RXF5SIDH;
  3180  0014A6  0E14               	movlw	20
  3181  0014A8                     L5:
  3182  0014A8  FFFF               	dw	65535	; assembler added errata NOP
  3183  0014AA  6E1F               	movwf	CANSetFilter@FILTER_BASE_ADDRESS,c
  3184  0014AC  0E0F               	movlw	15
  3185  0014AE  6E20               	movwf	CANSetFilter@FILTER_BASE_ADDRESS+1,c
  3186                           
  3187                           ;CAN.c: 183: }
  3188                           
  3189                           ;CAN.c: 182: break;
  3190  0014B0  D014               	goto	l376
  3191  0014B2                     l2239:
  3192  0014B2  FFFF               	dw	65535	; assembler added errata NOP
  3193  0014B4  501A               	movf	CANSetFilter@ui8CanFltrNum,w,c
  3194                           
  3195                           ; Switch size 1, requested type "space"
  3196                           ; Number of cases is 6, Range of values is 0 to 6
  3197                           ; switch strategies available:
  3198                           ; Name         Instructions Cycles
  3199                           ; simple_byte           19    10 (average)
  3200                           ;	Chosen strategy is simple_byte
  3201  0014B6  0A00               	xorlw	0	; case 0
  3202  0014B8  B4D8               	btfsc	status,2,c
  3203  0014BA  D7E5               	goto	l2225
  3204  0014BC  0A01               	xorlw	1	; case 1
  3205  0014BE  B4D8               	btfsc	status,2,c
  3206  0014C0  D7E5               	goto	l2227
  3207  0014C2  0A03               	xorlw	3	; case 2
  3208  0014C4  B4D8               	btfsc	status,2,c
  3209  0014C6  D7E5               	goto	l2229
  3210  0014C8  0A01               	xorlw	1	; case 3
  3211  0014CA  B4D8               	btfsc	status,2,c
  3212  0014CC  D7E5               	goto	l2231
  3213  0014CE  0A06               	xorlw	6	; case 5
  3214  0014D0  B4D8               	btfsc	status,2,c
  3215  0014D2  D7E5               	goto	l2233
  3216  0014D4  0A03               	xorlw	3	; case 6
  3217  0014D6  B4D8               	btfsc	status,2,c
  3218  0014D8  D7E5               	goto	l2235
  3219  0014DA                     l376:
  3220  0014DA  FFFF               	dw	65535	; assembler added errata NOP
  3221                           
  3222                           ;CAN.c: 186: volatile uint8_t * RXFSIDH_PTR = FILTER_BASE_ADDRESS ;
  3223  0014DC  C01F  F01B         	movff	CANSetFilter@FILTER_BASE_ADDRESS,CANSetFilter@RXFSIDH_PTR
  3224  0014E0  C020  F01C         	movff	CANSetFilter@FILTER_BASE_ADDRESS+1,CANSetFilter@RXFSIDH_PTR+1
  3225                           
  3226                           ;CAN.c: 187: volatile uint8_t * RXFSIDL_PTR = FILTER_BASE_ADDRESS + 1 ;
  3227  0014E4  0E01               	movlw	1
  3228  0014E6  241F               	addwf	CANSetFilter@FILTER_BASE_ADDRESS,w,c
  3229  0014E8  6E1D               	movwf	CANSetFilter@RXFSIDL_PTR,c
  3230  0014EA  0E00               	movlw	0
  3231  0014EC  2020               	addwfc	CANSetFilter@FILTER_BASE_ADDRESS+1,w,c
  3232  0014EE  6E1E               	movwf	CANSetFilter@RXFSIDL_PTR+1,c
  3233                           
  3234                           ;CAN.c: 188: volatile uint8_t * RXFEIDH_PTR = FILTER_BASE_ADDRESS + 2 ;
  3235  0014F0  0E02               	movlw	2
  3236  0014F2  241F               	addwf	CANSetFilter@FILTER_BASE_ADDRESS,w,c
  3237  0014F4  6E16               	movwf	CANSetFilter@RXFEIDH_PTR,c
  3238  0014F6  0E00               	movlw	0
  3239  0014F8  2020               	addwfc	CANSetFilter@FILTER_BASE_ADDRESS+1,w,c
  3240  0014FA  6E17               	movwf	CANSetFilter@RXFEIDH_PTR+1,c
  3241                           
  3242                           ;CAN.c: 189: volatile uint8_t * RXFEIDL_PTR = FILTER_BASE_ADDRESS + 3 ;
  3243  0014FC  0E03               	movlw	3
  3244  0014FE  241F               	addwf	CANSetFilter@FILTER_BASE_ADDRESS,w,c
  3245  001500  6E18               	movwf	CANSetFilter@RXFEIDL_PTR,c
  3246  001502  0E00               	movlw	0
  3247  001504  2020               	addwfc	CANSetFilter@FILTER_BASE_ADDRESS+1,w,c
  3248  001506  6E19               	movwf	CANSetFilter@RXFEIDL_PTR+1,c
  3249                           
  3250                           ;CAN.c: 195: if( pObject->ui32MsgID <= 0x7ff )
  3251  001508  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3252  00150C  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3253  001510  0E03               	movlw	3
  3254  001512  50DB               	movf	plusw2,w,c
  3255  001514  E141               	bnz	l2247
  3256  001516  0E02               	movlw	2
  3257  001518  50DB               	movf	plusw2,w,c
  3258  00151A  E13E               	bnz	l2247
  3259  00151C  52DE               	movf	postinc2,f,c
  3260  00151E  0E08               	movlw	8
  3261  001520  5CDE               	subwf	postinc2,w,c
  3262  001522  B0D8               	btfsc	status,0,c
  3263  001524  D039               	goto	l2247
  3264                           
  3265                           ;CAN.c: 196: {
  3266                           ;CAN.c: 198: *(RXFSIDH_PTR) = (*(RXFSIDH_PTR) & ~(0xFF)) | (0xFF & (pObject->ui32MsgID)>
      +                          >3);
  3267  001526  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3268  00152A  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3269  00152E  CFDE F012          	movff	postinc2,??_CANSetFilter
  3270  001532  CFDE F013          	movff	postinc2,??_CANSetFilter+1
  3271  001536  CFDE F014          	movff	postinc2,??_CANSetFilter+2
  3272  00153A  CFDE F015          	movff	postinc2,??_CANSetFilter+3
  3273  00153E  0E04               	movlw	4
  3274  001540  D006               	goto	u1750
  3275  001542                     u1755:
  3276  001542  FFFF               	dw	65535	; assembler added errata NOP
  3277  001544  90D8               	bcf	status,0,c
  3278  001546  3215               	rrcf	??_CANSetFilter+3,f,c
  3279  001548  3214               	rrcf	??_CANSetFilter+2,f,c
  3280  00154A  3213               	rrcf	??_CANSetFilter+1,f,c
  3281  00154C  3212               	rrcf	??_CANSetFilter,f,c
  3282  00154E                     u1750:
  3283  00154E  FFFF               	dw	65535	; assembler added errata NOP
  3284  001550  2EE8               	decfsz	wreg,f,c
  3285  001552  D7F7               	goto	u1755
  3286  001554  5012               	movf	??_CANSetFilter,w,c
  3287  001556  C01B  FFD9         	movff	CANSetFilter@RXFSIDH_PTR,fsr2l
  3288  00155A  C01C  FFDA         	movff	CANSetFilter@RXFSIDH_PTR+1,fsr2h
  3289  00155E  6EDF               	movwf	indf2,c
  3290                           
  3291                           ;CAN.c: 199: *(RXFSIDL_PTR) = (*(RXFSIDL_PTR) & ~(0xE0)) | (0xE0 & (pObject->ui32MsgID)<
      +                          <5);
  3292  001560  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3293  001564  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3294  001568  50DF               	movf	indf2,w,c
  3295  00156A  6E12               	movwf	??_CANSetFilter& (0+255),c
  3296  00156C  0E05               	movlw	5
  3297  00156E  6E13               	movwf	(??_CANSetFilter+1)& (0+255),c
  3298  001570                     u1765:
  3299  001570  FFFF               	dw	65535	; assembler added errata NOP
  3300  001572  90D8               	bcf	status,0,c
  3301  001574  3612               	rlcf	??_CANSetFilter,f,c
  3302  001576  2E13               	decfsz	(??_CANSetFilter+1)& (0+255),f,c
  3303  001578  D7FB               	goto	u1765
  3304  00157A  0EE0               	movlw	224
  3305  00157C  1612               	andwf	??_CANSetFilter,f,c
  3306  00157E  C01D  FFD9         	movff	CANSetFilter@RXFSIDL_PTR,fsr2l
  3307  001582  C01E  FFDA         	movff	CANSetFilter@RXFSIDL_PTR+1,fsr2h
  3308  001586  50DF               	movf	indf2,w,c
  3309  001588  0B1F               	andlw	31
  3310  00158A  1012               	iorwf	??_CANSetFilter,w,c
  3311  00158C  C01D  FFD9         	movff	CANSetFilter@RXFSIDL_PTR,fsr2l
  3312  001590  C01E  FFDA         	movff	CANSetFilter@RXFSIDL_PTR+1,fsr2h
  3313  001594  6EDF               	movwf	indf2,c
  3314                           
  3315                           ;CAN.c: 200: }
  3316  001596  D066               	goto	l384
  3317  001598                     l2247:
  3318  001598  FFFF               	dw	65535	; assembler added errata NOP
  3319                           
  3320                           ;CAN.c: 202: else
  3321                           ;CAN.c: 203: {
  3322                           ;CAN.c: 204: *(RXFSIDH_PTR) = (*(RXFSIDH_PTR) & ~(0xFF)) | (0xFF & (pObject->ui32MsgID)>
      +                          >21);
  3323  00159A  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3324  00159E  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3325  0015A2  CFDE F012          	movff	postinc2,??_CANSetFilter
  3326  0015A6  CFDE F013          	movff	postinc2,??_CANSetFilter+1
  3327  0015AA  CFDE F014          	movff	postinc2,??_CANSetFilter+2
  3328  0015AE  CFDE F015          	movff	postinc2,??_CANSetFilter+3
  3329  0015B2  0E16               	movlw	22
  3330  0015B4  D006               	goto	u1770
  3331  0015B6                     u1775:
  3332  0015B6  FFFF               	dw	65535	; assembler added errata NOP
  3333  0015B8  90D8               	bcf	status,0,c
  3334  0015BA  3215               	rrcf	??_CANSetFilter+3,f,c
  3335  0015BC  3214               	rrcf	??_CANSetFilter+2,f,c
  3336  0015BE  3213               	rrcf	??_CANSetFilter+1,f,c
  3337  0015C0  3212               	rrcf	??_CANSetFilter,f,c
  3338  0015C2                     u1770:
  3339  0015C2  FFFF               	dw	65535	; assembler added errata NOP
  3340  0015C4  2EE8               	decfsz	wreg,f,c
  3341  0015C6  D7F7               	goto	u1775
  3342  0015C8  5012               	movf	??_CANSetFilter,w,c
  3343  0015CA  C01B  FFD9         	movff	CANSetFilter@RXFSIDH_PTR,fsr2l
  3344  0015CE  C01C  FFDA         	movff	CANSetFilter@RXFSIDH_PTR+1,fsr2h
  3345  0015D2  6EDF               	movwf	indf2,c
  3346                           
  3347                           ;CAN.c: 205: *(RXFSIDL_PTR) = (*(RXFSIDL_PTR) & ~(0x03)) | (0x03 & (pObject->ui32MsgID)>
      +                          >16);
  3348  0015D4  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3349  0015D8  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3350  0015DC  CFDE F012          	movff	postinc2,??_CANSetFilter
  3351  0015E0  CFDE F013          	movff	postinc2,??_CANSetFilter+1
  3352  0015E4  CFDE F014          	movff	postinc2,??_CANSetFilter+2
  3353  0015E8  CFDE F015          	movff	postinc2,??_CANSetFilter+3
  3354  0015EC  0E11               	movlw	17
  3355  0015EE  D006               	goto	u1780
  3356  0015F0                     u1785:
  3357  0015F0  FFFF               	dw	65535	; assembler added errata NOP
  3358  0015F2  90D8               	bcf	status,0,c
  3359  0015F4  3215               	rrcf	??_CANSetFilter+3,f,c
  3360  0015F6  3214               	rrcf	??_CANSetFilter+2,f,c
  3361  0015F8  3213               	rrcf	??_CANSetFilter+1,f,c
  3362  0015FA  3212               	rrcf	??_CANSetFilter,f,c
  3363  0015FC                     u1780:
  3364  0015FC  FFFF               	dw	65535	; assembler added errata NOP
  3365  0015FE  2EE8               	decfsz	wreg,f,c
  3366  001600  D7F7               	goto	u1785
  3367  001602  0E03               	movlw	3
  3368  001604  1612               	andwf	??_CANSetFilter,f,c
  3369  001606  C01D  FFD9         	movff	CANSetFilter@RXFSIDL_PTR,fsr2l
  3370  00160A  C01E  FFDA         	movff	CANSetFilter@RXFSIDL_PTR+1,fsr2h
  3371  00160E  50DF               	movf	indf2,w,c
  3372  001610  0BFC               	andlw	252
  3373  001612  1012               	iorwf	??_CANSetFilter,w,c
  3374  001614  C01D  FFD9         	movff	CANSetFilter@RXFSIDL_PTR,fsr2l
  3375  001618  C01E  FFDA         	movff	CANSetFilter@RXFSIDL_PTR+1,fsr2h
  3376  00161C  6EDF               	movwf	indf2,c
  3377                           
  3378                           ;CAN.c: 206: *(RXFEIDH_PTR) = (*(RXFEIDH_PTR) & ~(0xFF)) | (0xFF & (pObject->ui32MsgID)>
      +                          >8);
  3379  00161E  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3380  001622  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3381  001626  CFDE F012          	movff	postinc2,??_CANSetFilter
  3382  00162A  CFDE F013          	movff	postinc2,??_CANSetFilter+1
  3383  00162E  CFDE F014          	movff	postinc2,??_CANSetFilter+2
  3384  001632  CFDE F015          	movff	postinc2,??_CANSetFilter+3
  3385  001636  C013  F012         	movff	??_CANSetFilter+1,??_CANSetFilter
  3386  00163A  C014  F013         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3387  00163E  C015  F014         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3388  001642  6A15               	clrf	??_CANSetFilter+3,c
  3389  001644  5012               	movf	??_CANSetFilter,w,c
  3390  001646  C016  FFD9         	movff	CANSetFilter@RXFEIDH_PTR,fsr2l
  3391  00164A  C017  FFDA         	movff	CANSetFilter@RXFEIDH_PTR+1,fsr2h
  3392  00164E  6EDF               	movwf	indf2,c
  3393                           
  3394                           ;CAN.c: 207: *(RXFEIDL_PTR) = (*(RXFEIDL_PTR) & ~(0xFF)) | (0xFF & (pObject->ui32MsgID))
      +                          ;
  3395  001650  C010  FFD9         	movff	CANSetFilter@pObject,fsr2l
  3396  001654  C011  FFDA         	movff	CANSetFilter@pObject+1,fsr2h
  3397  001658  C018  FFE1         	movff	CANSetFilter@RXFEIDL_PTR,fsr1l
  3398  00165C  C019  FFE2         	movff	CANSetFilter@RXFEIDL_PTR+1,fsr1h
  3399  001660  CFDF FFE7          	movff	indf2,indf1
  3400  001664                     l384:
  3401  001664  FFFF               	dw	65535	; assembler added errata NOP
  3402  001666  0012               	return		;funcret
  3403  001668  FFFF               	dw	65535	; errata NOP
  3404  00166A                     __end_of_CANSetFilter:
  3405                           	opt stack 0
  3406                           tblptru	equ	0xFF8
  3407                           tblptrh	equ	0xFF7
  3408                           tblptrl	equ	0xFF6
  3409                           tablat	equ	0xFF5
  3410                           intcon	equ	0xFF2
  3411                           indf0	equ	0xFEF
  3412                           postinc0	equ	0xFEE
  3413                           fsr0h	equ	0xFEA
  3414                           fsr0l	equ	0xFE9
  3415                           wreg	equ	0xFE8
  3416                           indf1	equ	0xFE7
  3417                           fsr1h	equ	0xFE2
  3418                           fsr1l	equ	0xFE1
  3419                           indf2	equ	0xFDF
  3420                           postinc2	equ	0xFDE
  3421                           plusw2	equ	0xFDB
  3422                           fsr2h	equ	0xFDA
  3423                           fsr2l	equ	0xFD9
  3424                           status	equ	0xFD8
  3425                           
  3426 ;; *************** function _CANSetBaudRate *****************
  3427 ;; Defined at:
  3428 ;;		line 36 in file "CAN.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  baudrate        4   15[COMRAM] unsigned long 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3442 ;;      Params:         4       0       0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0
  3445 ;;      Totals:         4       0       0       0       0       0       0
  3446 ;;Total ram usage:        4 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    2
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_ComInit
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text17
  3457  001E7E                     __ptext17:
  3458                           	opt stack 0
  3459  001E7E                     _CANSetBaudRate:
  3460                           	opt stack 0
  3461  001E7E  FFFF               	dw	65535	; assembler added errata NOP
  3462                           
  3463                           ;CAN.c: 40: if (baudrate==100000)
  3464                           
  3465                           ;incstack = 0
  3466  001E80  0EA0               	movlw	160
  3467  001E82  1810               	xorwf	CANSetBaudRate@baudrate,w,c
  3468  001E84  E107               	bnz	l2189
  3469  001E86  0E86               	movlw	134
  3470  001E88  1811               	xorwf	CANSetBaudRate@baudrate+1,w,c
  3471  001E8A  E104               	bnz	l2189
  3472  001E8C  0412               	decf	CANSetBaudRate@baudrate+2,w,c
  3473  001E8E  1013               	iorwf	CANSetBaudRate@baudrate+3,w,c
  3474  001E90  B4D8               	btfsc	status,2,c
  3475  001E92  D028               	goto	l2201
  3476  001E94                     l2189:
  3477                           
  3478                           ;CAN.c: 46: else if (baudrate==125000)
  3479  001E94  0E48               	movlw	72
  3480  001E96  1810               	xorwf	CANSetBaudRate@baudrate,w,c
  3481  001E98  E109               	bnz	l2193
  3482  001E9A  0EE8               	movlw	232
  3483  001E9C  1811               	xorwf	CANSetBaudRate@baudrate+1,w,c
  3484  001E9E  E106               	bnz	l2193
  3485  001EA0  0412               	decf	CANSetBaudRate@baudrate+2,w,c
  3486  001EA2  1013               	iorwf	CANSetBaudRate@baudrate+3,w,c
  3487  001EA4  A4D8               	btfss	status,2,c
  3488  001EA6  D002               	goto	l2193
  3489                           
  3490                           ;CAN.c: 47: {
  3491                           ;CAN.c: 48: BRGCON1 = 0x87;
  3492  001EA8  0E87               	movlw	135
  3493  001EAA  D01E               	goto	L9
  3494  001EAC                     l2193:
  3495  001EAC  FFFF               	dw	65535	; assembler added errata NOP
  3496                           
  3497                           ;CAN.c: 52: else if (baudrate==500000)
  3498  001EAE  0E20               	movlw	32
  3499  001EB0  1810               	xorwf	CANSetBaudRate@baudrate,w,c
  3500  001EB2  E10A               	bnz	l2197
  3501  001EB4  0EA1               	movlw	161
  3502  001EB6  1811               	xorwf	CANSetBaudRate@baudrate+1,w,c
  3503  001EB8  E107               	bnz	l2197
  3504  001EBA  0E07               	movlw	7
  3505  001EBC  1812               	xorwf	CANSetBaudRate@baudrate+2,w,c
  3506  001EBE  1013               	iorwf	CANSetBaudRate@baudrate+3,w,c
  3507  001EC0  A4D8               	btfss	status,2,c
  3508  001EC2  D002               	goto	l2197
  3509                           
  3510                           ;CAN.c: 53: {
  3511                           ;CAN.c: 54: BRGCON1 = 0x81;
  3512  001EC4  0E81               	movlw	129
  3513  001EC6  D010               	goto	L9
  3514  001EC8                     l2197:
  3515  001EC8  FFFF               	dw	65535	; assembler added errata NOP
  3516                           
  3517                           ;CAN.c: 58: else if (baudrate==1000000)
  3518  001ECA  0E40               	movlw	64
  3519  001ECC  1810               	xorwf	CANSetBaudRate@baudrate,w,c
  3520  001ECE  E10A               	bnz	l2201
  3521  001ED0  0E42               	movlw	66
  3522  001ED2  1811               	xorwf	CANSetBaudRate@baudrate+1,w,c
  3523  001ED4  E107               	bnz	l2201
  3524  001ED6  0E0F               	movlw	15
  3525  001ED8  1812               	xorwf	CANSetBaudRate@baudrate+2,w,c
  3526  001EDA  1013               	iorwf	CANSetBaudRate@baudrate+3,w,c
  3527  001EDC  A4D8               	btfss	status,2,c
  3528  001EDE  D002               	goto	l2201
  3529                           
  3530                           ;CAN.c: 59: {
  3531                           ;CAN.c: 61: BRGCON1 = 0x80;
  3532  001EE0  0E80               	movlw	128
  3533  001EE2  D002               	goto	L9
  3534  001EE4                     l2201:
  3535  001EE4  FFFF               	dw	65535	; assembler added errata NOP
  3536                           
  3537                           ;CAN.c: 65: else
  3538                           ;CAN.c: 66: {
  3539                           ;CAN.c: 68: BRGCON1 = 0x89;
  3540  001EE6  0E89               	movlw	137
  3541  001EE8                     L9:
  3542  001EE8  FFFF               	dw	65535	; assembler added errata NOP
  3543  001EEA  6E70               	movwf	3952,c	;volatile
  3544                           
  3545                           ;CAN.c: 69: BRGCON2 = 0xB8;
  3546  001EEC  0EB8               	movlw	184
  3547  001EEE  6E71               	movwf	3953,c	;volatile
  3548                           
  3549                           ;CAN.c: 70: BRGCON3 = 0x05;
  3550  001EF0  0E05               	movlw	5
  3551  001EF2  6E72               	movwf	3954,c	;volatile
  3552  001EF4  0012               	return		;funcret
  3553  001EF6  FFFF               	dw	65535	; errata NOP
  3554  001EF8                     __end_of_CANSetBaudRate:
  3555                           	opt stack 0
  3556                           tblptru	equ	0xFF8
  3557                           tblptrh	equ	0xFF7
  3558                           tblptrl	equ	0xFF6
  3559                           tablat	equ	0xFF5
  3560                           intcon	equ	0xFF2
  3561                           indf0	equ	0xFEF
  3562                           postinc0	equ	0xFEE
  3563                           fsr0h	equ	0xFEA
  3564                           fsr0l	equ	0xFE9
  3565                           wreg	equ	0xFE8
  3566                           indf1	equ	0xFE7
  3567                           fsr1h	equ	0xFE2
  3568                           fsr1l	equ	0xFE1
  3569                           indf2	equ	0xFDF
  3570                           postinc2	equ	0xFDE
  3571                           plusw2	equ	0xFDB
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function _CANIntEnable *****************
  3577 ;; Defined at:
  3578 ;;		line 447 in file "CAN.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  type            1    wreg     unsigned char 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  type            1   15[COMRAM] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3592 ;;      Params:         0       0       0       0       0       0       0
  3593 ;;      Locals:         1       0       0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0
  3595 ;;      Totals:         1       0       0       0       0       0       0
  3596 ;;Total ram usage:        1 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    2
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_ComInit
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text18
  3607  001BBC                     __ptext18:
  3608                           	opt stack 0
  3609  001BBC                     _CANIntEnable:
  3610                           	opt stack 0
  3611  001BBC  FFFF               	dw	65535	; assembler added errata NOP
  3612                           
  3613                           ;incstack = 0
  3614                           ;CANIntEnable@type stored from wreg
  3615  001BBE  6E10               	movwf	CANIntEnable@type,c
  3616                           
  3617                           ;CAN.c: 449: if( (type & 1<<0) == 1 )
  3618  001BC0  A010               	btfss	CANIntEnable@type,0,c
  3619  001BC2  D004               	goto	l428
  3620                           
  3621                           ;CAN.c: 450: {
  3622                           ;CAN.c: 451: PIE3 = (PIE3 & ~(1<<0)) | (1<<0 & 0xFF);
  3623  001BC4  50A3               	movf	4003,w,c	;volatile
  3624  001BC6  0BFE               	andlw	254
  3625  001BC8  0901               	iorlw	1
  3626  001BCA  6EA3               	movwf	4003,c	;volatile
  3627  001BCC                     l428:
  3628  001BCC  FFFF               	dw	65535	; assembler added errata NOP
  3629                           
  3630                           ;CAN.c: 455: if( (type & 1<<1) == 2 )
  3631  001BCE  A210               	btfss	CANIntEnable@type,1,c
  3632  001BD0  D004               	goto	l2259
  3633                           
  3634                           ;CAN.c: 456: {
  3635                           ;CAN.c: 457: PIE3 = (PIE3 & ~(1<<1)) | (1<<1 & 0xFF);
  3636  001BD2  50A3               	movf	4003,w,c	;volatile
  3637  001BD4  0BFD               	andlw	253
  3638  001BD6  0902               	iorlw	2
  3639  001BD8  6EA3               	movwf	4003,c	;volatile
  3640  001BDA                     l2259:
  3641  001BDA  FFFF               	dw	65535	; assembler added errata NOP
  3642                           
  3643                           ;CAN.c: 461: if( (type & 1<<2) == 3 )
  3644  001BDC  5010               	movf	CANIntEnable@type,w,c
  3645  001BDE  0B04               	andlw	4
  3646  001BE0  0A03               	xorlw	3
  3647  001BE2  A4D8               	btfss	status,2,c
  3648  001BE4  D004               	goto	l2263
  3649                           
  3650                           ;CAN.c: 462: {
  3651                           ;CAN.c: 463: PIE3 = (PIE3 & ~(1<<2)) | (1<<2 & 0xFF);
  3652  001BE6  50A3               	movf	4003,w,c	;volatile
  3653  001BE8  0BFB               	andlw	251
  3654  001BEA  0904               	iorlw	4
  3655  001BEC  6EA3               	movwf	4003,c	;volatile
  3656  001BEE                     l2263:
  3657  001BEE  FFFF               	dw	65535	; assembler added errata NOP
  3658                           
  3659                           ;CAN.c: 467: if( (type & 1<<3) == 4 )
  3660  001BF0  5010               	movf	CANIntEnable@type,w,c
  3661  001BF2  0B08               	andlw	8
  3662  001BF4  0A04               	xorlw	4
  3663  001BF6  A4D8               	btfss	status,2,c
  3664  001BF8  D004               	goto	l2267
  3665                           
  3666                           ;CAN.c: 468: {
  3667                           ;CAN.c: 469: PIE3 = (PIE3 & ~(1<<3)) | (1<<3 & 0xFF);
  3668  001BFA  50A3               	movf	4003,w,c	;volatile
  3669  001BFC  0BF7               	andlw	247
  3670  001BFE  0908               	iorlw	8
  3671  001C00  6EA3               	movwf	4003,c	;volatile
  3672  001C02                     l2267:
  3673  001C02  FFFF               	dw	65535	; assembler added errata NOP
  3674                           
  3675                           ;CAN.c: 473: if( (type & 1<<4) == 5 )
  3676  001C04  5010               	movf	CANIntEnable@type,w,c
  3677  001C06  0B10               	andlw	16
  3678  001C08  0A05               	xorlw	5
  3679  001C0A  A4D8               	btfss	status,2,c
  3680  001C0C  D004               	goto	l2271
  3681                           
  3682                           ;CAN.c: 474: {
  3683                           ;CAN.c: 475: PIE3 = (PIE3 & ~(1<<4)) | (1<<4 & 0xFF);
  3684  001C0E  50A3               	movf	4003,w,c	;volatile
  3685  001C10  0BEF               	andlw	239
  3686  001C12  0910               	iorlw	16
  3687  001C14  6EA3               	movwf	4003,c	;volatile
  3688  001C16                     l2271:
  3689  001C16  FFFF               	dw	65535	; assembler added errata NOP
  3690                           
  3691                           ;CAN.c: 479: if( (type & 1<<5) == 6 )
  3692  001C18  5010               	movf	CANIntEnable@type,w,c
  3693  001C1A  0B20               	andlw	32
  3694  001C1C  0A06               	xorlw	6
  3695  001C1E  A4D8               	btfss	status,2,c
  3696  001C20  D004               	goto	l2275
  3697                           
  3698                           ;CAN.c: 480: {
  3699                           ;CAN.c: 481: PIE3 = (PIE3 & ~(1<<5)) | (1<<5 & 0xFF);
  3700  001C22  50A3               	movf	4003,w,c	;volatile
  3701  001C24  0BDF               	andlw	223
  3702  001C26  0920               	iorlw	32
  3703  001C28  6EA3               	movwf	4003,c	;volatile
  3704  001C2A                     l2275:
  3705  001C2A  FFFF               	dw	65535	; assembler added errata NOP
  3706                           
  3707                           ;CAN.c: 485: if( (type & 1<<6) == 7 )
  3708  001C2C  5010               	movf	CANIntEnable@type,w,c
  3709  001C2E  0B40               	andlw	64
  3710  001C30  0A07               	xorlw	7
  3711  001C32  A4D8               	btfss	status,2,c
  3712  001C34  D004               	goto	l2279
  3713                           
  3714                           ;CAN.c: 486: {
  3715                           ;CAN.c: 487: PIE3 = (PIE3 & ~(1<<6)) | (1<<6 & 0xFF);
  3716  001C36  50A3               	movf	4003,w,c	;volatile
  3717  001C38  0BBF               	andlw	191
  3718  001C3A  0940               	iorlw	64
  3719  001C3C  6EA3               	movwf	4003,c	;volatile
  3720  001C3E                     l2279:
  3721  001C3E  FFFF               	dw	65535	; assembler added errata NOP
  3722                           
  3723                           ;CAN.c: 491: if( (type & 1<<7) == 8 )
  3724  001C40  5010               	movf	CANIntEnable@type,w,c
  3725  001C42  0B80               	andlw	128
  3726  001C44  0A08               	xorlw	8
  3727  001C46  A4D8               	btfss	status,2,c
  3728  001C48  D004               	goto	l443
  3729                           
  3730                           ;CAN.c: 492: {
  3731                           ;CAN.c: 493: PIE3 = (PIE3 & ~(1<<7)) | (1<<7 & 0xFF);
  3732  001C4A  50A3               	movf	4003,w,c	;volatile
  3733  001C4C  0B7F               	andlw	127
  3734  001C4E  0980               	iorlw	128
  3735  001C50  6EA3               	movwf	4003,c	;volatile
  3736  001C52                     l443:
  3737  001C52  FFFF               	dw	65535	; assembler added errata NOP
  3738  001C54  0012               	return		;funcret
  3739  001C56  FFFF               	dw	65535	; errata NOP
  3740  001C58                     __end_of_CANIntEnable:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           intcon	equ	0xFF2
  3747                           indf0	equ	0xFEF
  3748                           postinc0	equ	0xFEE
  3749                           fsr0h	equ	0xFEA
  3750                           fsr0l	equ	0xFE9
  3751                           wreg	equ	0xFE8
  3752                           indf1	equ	0xFE7
  3753                           fsr1h	equ	0xFE2
  3754                           fsr1l	equ	0xFE1
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           plusw2	equ	0xFDB
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _CANIntClear *****************
  3763 ;; Defined at:
  3764 ;;		line 554 in file "CAN.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  type            1    wreg     unsigned char 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  type            1   15[COMRAM] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3778 ;;      Params:         0       0       0       0       0       0       0
  3779 ;;      Locals:         1       0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0
  3781 ;;      Totals:         1       0       0       0       0       0       0
  3782 ;;Total ram usage:        1 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    2
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_ComInit
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text19
  3793  001CEA                     __ptext19:
  3794                           	opt stack 0
  3795  001CEA                     _CANIntClear:
  3796                           	opt stack 0
  3797  001CEA  FFFF               	dw	65535	; assembler added errata NOP
  3798                           
  3799                           ;incstack = 0
  3800                           ;CANIntClear@type stored from wreg
  3801  001CEC  6E10               	movwf	CANIntClear@type,c
  3802                           
  3803                           ;CAN.c: 556: if( (type & 1<<0) == 1 )
  3804  001CEE  A010               	btfss	CANIntClear@type,0,c
  3805  001CF0  D003               	goto	l466
  3806                           
  3807                           ;CAN.c: 557: {
  3808                           ;CAN.c: 558: PIR3 = (PIR3 & ~(1<<0)) | (1<<0 & 0);
  3809  001CF2  50A4               	movf	4004,w,c	;volatile
  3810  001CF4  0BFE               	andlw	254
  3811  001CF6  6EA4               	movwf	4004,c	;volatile
  3812  001CF8                     l466:
  3813  001CF8  FFFF               	dw	65535	; assembler added errata NOP
  3814                           
  3815                           ;CAN.c: 562: if( (type & 1<<1) == 2 )
  3816  001CFA  A210               	btfss	CANIntClear@type,1,c
  3817  001CFC  D003               	goto	l2111
  3818                           
  3819                           ;CAN.c: 563: {
  3820                           ;CAN.c: 564: PIR3 = (PIR3 & ~(1<<1)) | (1<<1 & 0);
  3821  001CFE  50A4               	movf	4004,w,c	;volatile
  3822  001D00  0BFD               	andlw	253
  3823  001D02  6EA4               	movwf	4004,c	;volatile
  3824  001D04                     l2111:
  3825  001D04  FFFF               	dw	65535	; assembler added errata NOP
  3826                           
  3827                           ;CAN.c: 568: if( (type & 1<<2) == 3 )
  3828  001D06  5010               	movf	CANIntClear@type,w,c
  3829  001D08  0B04               	andlw	4
  3830  001D0A  0A03               	xorlw	3
  3831  001D0C  A4D8               	btfss	status,2,c
  3832  001D0E  D003               	goto	l2115
  3833                           
  3834                           ;CAN.c: 569: {
  3835                           ;CAN.c: 570: PIR3 = (PIR3 & ~(1<<2)) | (1<<2 & 0);
  3836  001D10  50A4               	movf	4004,w,c	;volatile
  3837  001D12  0BFB               	andlw	251
  3838  001D14  6EA4               	movwf	4004,c	;volatile
  3839  001D16                     l2115:
  3840  001D16  FFFF               	dw	65535	; assembler added errata NOP
  3841                           
  3842                           ;CAN.c: 574: if( (type & 1<<3) == 4 )
  3843  001D18  5010               	movf	CANIntClear@type,w,c
  3844  001D1A  0B08               	andlw	8
  3845  001D1C  0A04               	xorlw	4
  3846  001D1E  A4D8               	btfss	status,2,c
  3847  001D20  D003               	goto	l2119
  3848                           
  3849                           ;CAN.c: 575: {
  3850                           ;CAN.c: 576: PIR3 = (PIR3 & ~(1<<3)) | (1<<3 & 0);
  3851  001D22  50A4               	movf	4004,w,c	;volatile
  3852  001D24  0BF7               	andlw	247
  3853  001D26  6EA4               	movwf	4004,c	;volatile
  3854  001D28                     l2119:
  3855  001D28  FFFF               	dw	65535	; assembler added errata NOP
  3856                           
  3857                           ;CAN.c: 580: if( (type & 1<<4) == 5 )
  3858  001D2A  5010               	movf	CANIntClear@type,w,c
  3859  001D2C  0B10               	andlw	16
  3860  001D2E  0A05               	xorlw	5
  3861  001D30  A4D8               	btfss	status,2,c
  3862  001D32  D003               	goto	l2123
  3863                           
  3864                           ;CAN.c: 581: {
  3865                           ;CAN.c: 582: PIR3 = (PIR3 & ~(1<<4)) | (1<<4 & 0);
  3866  001D34  50A4               	movf	4004,w,c	;volatile
  3867  001D36  0BEF               	andlw	239
  3868  001D38  6EA4               	movwf	4004,c	;volatile
  3869  001D3A                     l2123:
  3870  001D3A  FFFF               	dw	65535	; assembler added errata NOP
  3871                           
  3872                           ;CAN.c: 586: if( (type & 1<<5) == 6 )
  3873  001D3C  5010               	movf	CANIntClear@type,w,c
  3874  001D3E  0B20               	andlw	32
  3875  001D40  0A06               	xorlw	6
  3876  001D42  A4D8               	btfss	status,2,c
  3877  001D44  D003               	goto	l2127
  3878                           
  3879                           ;CAN.c: 587: {
  3880                           ;CAN.c: 588: PIR3 = (PIR3 & ~(1<<5)) | (1<<5 & 0);
  3881  001D46  50A4               	movf	4004,w,c	;volatile
  3882  001D48  0BDF               	andlw	223
  3883  001D4A  6EA4               	movwf	4004,c	;volatile
  3884  001D4C                     l2127:
  3885  001D4C  FFFF               	dw	65535	; assembler added errata NOP
  3886                           
  3887                           ;CAN.c: 592: if( (type & 1<<6) == 7 )
  3888  001D4E  5010               	movf	CANIntClear@type,w,c
  3889  001D50  0B40               	andlw	64
  3890  001D52  0A07               	xorlw	7
  3891  001D54  A4D8               	btfss	status,2,c
  3892  001D56  D003               	goto	l2131
  3893                           
  3894                           ;CAN.c: 593: {
  3895                           ;CAN.c: 594: PIR3 = (PIR3 & ~(1<<6)) | (1<<6 & 0);
  3896  001D58  50A4               	movf	4004,w,c	;volatile
  3897  001D5A  0BBF               	andlw	191
  3898  001D5C  6EA4               	movwf	4004,c	;volatile
  3899  001D5E                     l2131:
  3900  001D5E  FFFF               	dw	65535	; assembler added errata NOP
  3901                           
  3902                           ;CAN.c: 598: if( (type & 1<<7) == 8 )
  3903  001D60  5010               	movf	CANIntClear@type,w,c
  3904  001D62  0B80               	andlw	128
  3905  001D64  0A08               	xorlw	8
  3906  001D66  A4D8               	btfss	status,2,c
  3907  001D68  D003               	goto	l481
  3908                           
  3909                           ;CAN.c: 599: {
  3910                           ;CAN.c: 600: PIR3 = (PIR3 & ~(1<<7)) | (1<<7 & 0);
  3911  001D6A  50A4               	movf	4004,w,c	;volatile
  3912  001D6C  0B7F               	andlw	127
  3913  001D6E  6EA4               	movwf	4004,c	;volatile
  3914  001D70                     l481:
  3915  001D70  FFFF               	dw	65535	; assembler added errata NOP
  3916  001D72  0012               	return		;funcret
  3917  001D74  FFFF               	dw	65535	; errata NOP
  3918  001D76                     __end_of_CANIntClear:
  3919                           	opt stack 0
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           intcon	equ	0xFF2
  3925                           indf0	equ	0xFEF
  3926                           postinc0	equ	0xFEE
  3927                           fsr0h	equ	0xFEA
  3928                           fsr0l	equ	0xFE9
  3929                           wreg	equ	0xFE8
  3930                           indf1	equ	0xFE7
  3931                           fsr1h	equ	0xFE2
  3932                           fsr1l	equ	0xFE1
  3933                           indf2	equ	0xFDF
  3934                           postinc2	equ	0xFDE
  3935                           plusw2	equ	0xFDB
  3936                           fsr2h	equ	0xFDA
  3937                           fsr2l	equ	0xFD9
  3938                           status	equ	0xFD8
  3939                           
  3940 ;; *************** function _CANInit *****************
  3941 ;; Defined at:
  3942 ;;		line 10 in file "CAN.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;		None
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;		None
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3956 ;;      Params:         0       0       0       0       0       0       0
  3957 ;;      Locals:         0       0       0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0
  3959 ;;      Totals:         0       0       0       0       0       0       0
  3960 ;;Total ram usage:        0 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    2
  3963 ;; This function calls:
  3964 ;;		Nothing
  3965 ;; This function is called by:
  3966 ;;		_ComInit
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text20
  3971  002280                     __ptext20:
  3972                           	opt stack 0
  3973  002280                     _CANInit:
  3974                           	opt stack 0
  3975  002280  FFFF               	dw	65535	; assembler added errata NOP
  3976                           
  3977                           ;CAN.c: 12: CIOCON = 0x20;
  3978                           
  3979                           ;incstack = 0
  3980  002282  0E20               	movlw	32
  3981  002284  6E73               	movwf	3955,c	;volatile
  3982                           
  3983                           ;CAN.c: 13: TRISBbits.RB3 = 1;
  3984  002286  8693               	bsf	3987,3,c	;volatile
  3985                           
  3986                           ;CAN.c: 14: TRISBbits.RB2 = 0;
  3987  002288  9493               	bcf	3987,2,c	;volatile
  3988  00228A  0012               	return		;funcret
  3989  00228C  FFFF               	dw	65535	; errata NOP
  3990  00228E                     __end_of_CANInit:
  3991                           	opt stack 0
  3992                           tblptru	equ	0xFF8
  3993                           tblptrh	equ	0xFF7
  3994                           tblptrl	equ	0xFF6
  3995                           tablat	equ	0xFF5
  3996                           intcon	equ	0xFF2
  3997                           indf0	equ	0xFEF
  3998                           postinc0	equ	0xFEE
  3999                           fsr0h	equ	0xFEA
  4000                           fsr0l	equ	0xFE9
  4001                           wreg	equ	0xFE8
  4002                           indf1	equ	0xFE7
  4003                           fsr1h	equ	0xFE2
  4004                           fsr1l	equ	0xFE1
  4005                           indf2	equ	0xFDF
  4006                           postinc2	equ	0xFDE
  4007                           plusw2	equ	0xFDB
  4008                           fsr2h	equ	0xFDA
  4009                           fsr2l	equ	0xFD9
  4010                           status	equ	0xFD8
  4011                           
  4012 ;; *************** function _Clock_Init *****************
  4013 ;; Defined at:
  4014 ;;		line 18 in file "clock.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  ulCompareVal    4   19[COMRAM] unsigned long 
  4019 ;;  ulConstCompa    4   15[COMRAM] const unsigned long 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      void 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4029 ;;      Params:         0       0       0       0       0       0       0
  4030 ;;      Locals:         8       0       0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0
  4032 ;;      Totals:         8       0       0       0       0       0       0
  4033 ;;Total ram usage:        8 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    2
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_main
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text21
  4044  002080                     __ptext21:
  4045                           	opt stack 0
  4046  002080                     _Clock_Init:
  4047                           	opt stack 0
  4048  002080  FFFF               	dw	65535	; assembler added errata NOP
  4049                           
  4050                           ;clock.c: 21: const uint32_t ulConstCompareValue = ( ( ( ( unsigned long ) 32000000 ) / 
      +                          ( ( uint32_t) 4 ) ) / ( ( unsigned int ) 1000 ) );
  4051                           
  4052                           ;incstack = 0
  4053  002082  0E40               	movlw	64
  4054  002084  6E10               	movwf	Clock_Init@ulConstCompareValue,c
  4055  002086  0E1F               	movlw	31
  4056  002088  6E11               	movwf	Clock_Init@ulConstCompareValue+1,c
  4057  00208A  0E00               	movlw	0
  4058  00208C  6E12               	movwf	Clock_Init@ulConstCompareValue+2,c
  4059  00208E  0E00               	movlw	0
  4060  002090  6E13               	movwf	Clock_Init@ulConstCompareValue+3,c
  4061                           
  4062                           ;clock.c: 22: uint32_t ulCompareValue;
  4063                           ;clock.c: 30: TMR3H = ( uint8_t ) 0x00;
  4064  002092  0E00               	movlw	0
  4065  002094  6EB3               	movwf	4019,c	;volatile
  4066                           
  4067                           ;clock.c: 31: TMR3L = ( uint8_t ) 0x00;
  4068  002096  0E00               	movlw	0
  4069  002098  6EB2               	movwf	4018,c	;volatile
  4070                           
  4071                           ;clock.c: 34: ulCompareValue = ulConstCompareValue;
  4072  00209A  C010  F014         	movff	Clock_Init@ulConstCompareValue,Clock_Init@ulCompareValue
  4073  00209E  C011  F015         	movff	Clock_Init@ulConstCompareValue+1,Clock_Init@ulCompareValue+1
  4074  0020A2  C012  F016         	movff	Clock_Init@ulConstCompareValue+2,Clock_Init@ulCompareValue+2
  4075  0020A6  C013  F017         	movff	Clock_Init@ulConstCompareValue+3,Clock_Init@ulCompareValue+3
  4076                           
  4077                           ;clock.c: 35: CCPR1L = ( uint8_t ) ( ulCompareValue & ( uint32_t ) 0xff );
  4078  0020AA  C014  FFBE         	movff	Clock_Init@ulCompareValue,4030	;volatile
  4079                           
  4080                           ;clock.c: 36: ulCompareValue >>= ( uint32_t ) 8;
  4081  0020AE  C015  F014         	movff	Clock_Init@ulCompareValue+1,Clock_Init@ulCompareValue
  4082  0020B2  C016  F015         	movff	Clock_Init@ulCompareValue+2,Clock_Init@ulCompareValue+1
  4083  0020B6  C017  F016         	movff	Clock_Init@ulCompareValue+3,Clock_Init@ulCompareValue+2
  4084  0020BA  6A17               	clrf	Clock_Init@ulCompareValue+3,c
  4085                           
  4086                           ;clock.c: 37: CCPR1H = ( uint8_t ) ( ulCompareValue & ( uint32_t ) 0xff );
  4087  0020BC  C014  FFBF         	movff	Clock_Init@ulCompareValue,4031	;volatile
  4088                           
  4089                           ;clock.c: 39: CCP1CONbits.CCP1M0 = 1;
  4090  0020C0  80BD               	bsf	4029,0,c	;volatile
  4091                           
  4092                           ;clock.c: 40: CCP1CONbits.CCP1M1 = 1;
  4093  0020C2  82BD               	bsf	4029,1,c	;volatile
  4094                           
  4095                           ;clock.c: 41: CCP1CONbits.CCP1M2 = 0;
  4096  0020C4  94BD               	bcf	4029,2,c	;volatile
  4097                           
  4098                           ;clock.c: 42: CCP1CONbits.CCP1M3 = 1;
  4099  0020C6  86BD               	bsf	4029,3,c	;volatile
  4100                           
  4101                           ;clock.c: 43: PIE1bits.CCP1IE = 1;
  4102  0020C8  849D               	bsf	3997,2,c	;volatile
  4103                           
  4104                           ;clock.c: 49: INTCONbits.GIE = 1;
  4105  0020CA  8EF2               	bsf	intcon,7,c	;volatile
  4106                           
  4107                           ;clock.c: 51: T3CONbits.T3RD16 = 1;
  4108  0020CC  8EB1               	bsf	4017,7,c	;volatile
  4109                           
  4110                           ;clock.c: 52: T3CONbits.T3ECCP1 = 1;
  4111  0020CE  8CB1               	bsf	4017,6,c	;volatile
  4112                           
  4113                           ;clock.c: 53: T3CONbits.T3CKPS = 0;
  4114  0020D0  0ECF               	movlw	-49
  4115  0020D2  16B1               	andwf	4017,f,c	;volatile
  4116                           
  4117                           ;clock.c: 54: T3CONbits.TMR3CS = 0;
  4118  0020D4  92B1               	bcf	4017,1,c	;volatile
  4119                           
  4120                           ;clock.c: 55: T3CONbits.TMR3ON = 1;
  4121  0020D6  80B1               	bsf	4017,0,c	;volatile
  4122  0020D8  0012               	return		;funcret
  4123  0020DA  FFFF               	dw	65535	; errata NOP
  4124  0020DC                     __end_of_Clock_Init:
  4125                           	opt stack 0
  4126                           tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           intcon	equ	0xFF2
  4131                           indf0	equ	0xFEF
  4132                           postinc0	equ	0xFEE
  4133                           fsr0h	equ	0xFEA
  4134                           fsr0l	equ	0xFE9
  4135                           wreg	equ	0xFE8
  4136                           indf1	equ	0xFE7
  4137                           fsr1h	equ	0xFE2
  4138                           fsr1l	equ	0xFE1
  4139                           indf2	equ	0xFDF
  4140                           postinc2	equ	0xFDE
  4141                           plusw2	equ	0xFDB
  4142                           fsr2h	equ	0xFDA
  4143                           fsr2l	equ	0xFD9
  4144                           status	equ	0xFD8
  4145                           
  4146 ;; *************** function _CANMessageSend *****************
  4147 ;; Defined at:
  4148 ;;		line 354 in file "CAN.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  psMsgObject     2   15[COMRAM] PTR struct .
  4151 ;;		 -> main@Reply(18), 
  4152 ;;  FrameType       1   17[COMRAM] unsigned char 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  data_ptr        2   36[COMRAM] PTR volatile unsigned ch
  4155 ;;		 -> main@sync_period(2), main@ui16ReplyData(2), 
  4156 ;;  data_reg_ptr    2   34[COMRAM] PTR volatile unsigned ch
  4157 ;;		 -> TXB0CON(1), 
  4158 ;;  i               2   32[COMRAM] int 
  4159 ;;  TXBSIDL_PTR     2   46[COMRAM] PTR volatile unsigned ch
  4160 ;;		 -> TXB0CON(1), 
  4161 ;;  TXB_BASE_ADD    2   44[COMRAM] PTR volatile unsigned ch
  4162 ;;		 -> TXB0CON(1), 
  4163 ;;  TXBDLC_PTR      2   42[COMRAM] PTR volatile unsigned ch
  4164 ;;		 -> TXB0CON(1), 
  4165 ;;  TXBSIDH_PTR     2   40[COMRAM] PTR volatile unsigned ch
  4166 ;;		 -> TXB0CON(1), 
  4167 ;;  TXBCON_PTR      2   38[COMRAM] PTR volatile unsigned ch
  4168 ;;		 -> TXB0CON(1), 
  4169 ;;  TXBD0_PTR       2   30[COMRAM] PTR volatile unsigned ch
  4170 ;;		 -> TXB0CON(1), 
  4171 ;;  TXBEIDL_PTR     2   28[COMRAM] PTR volatile unsigned ch
  4172 ;;		 -> TXB0CON(1), 
  4173 ;;  TXBEIDH_PTR     2   26[COMRAM] PTR volatile unsigned ch
  4174 ;;		 -> TXB0CON(1), 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4184 ;;      Params:         3       0       0       0       0       0       0
  4185 ;;      Locals:        22       0       0       0       0       0       0
  4186 ;;      Temps:          8       0       0       0       0       0       0
  4187 ;;      Totals:        33       0       0       0       0       0       0
  4188 ;;Total ram usage:       33 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    2
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_main
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text22
  4199  000C0A                     __ptext22:
  4200                           	opt stack 0
  4201  000C0A                     _CANMessageSend:
  4202                           	opt stack 0
  4203  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  4204                           
  4205                           ;incstack = 0
  4206  000C0C  D00D               	goto	l2635
  4207  000C0E                     l2631:
  4208  000C0E  FFFF               	dw	65535	; assembler added errata NOP
  4209                           
  4210                           ;CAN.c: 369: {
  4211                           ;CAN.c: 371: if( TXB_BASE_ADDRESS <= &TXB1CON)
  4212  000C10  502E               	movf	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4213  000C12  080F               	sublw	15
  4214  000C14  E102               	bnz	u2275
  4215  000C16  502D               	movf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4216  000C18  0830               	sublw	48
  4217  000C1A                     u2275:
  4218  000C1A  A0D8               	btfss	status,0,c
  4219  000C1C  D005               	goto	l2635
  4220                           
  4221                           ;CAN.c: 372: {
  4222                           ;CAN.c: 373: TXB_BASE_ADDRESS += 0x10;
  4223  000C1E  0E10               	movlw	16
  4224  000C20  262D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,f,c
  4225  000C22  0E00               	movlw	0
  4226  000C24  222E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,f,c
  4227                           
  4228                           ;CAN.c: 374: }
  4229  000C26  D005               	goto	l2637
  4230  000C28                     l2635:
  4231  000C28  FFFF               	dw	65535	; assembler added errata NOP
  4232                           
  4233                           ;CAN.c: 375: else
  4234                           ;CAN.c: 376: {
  4235                           ;CAN.c: 377: TXB_BASE_ADDRESS = &TXB0CON;
  4236  000C2A  0E40               	movlw	64
  4237  000C2C  6E2D               	movwf	CANMessageSend@TXB_BASE_ADDRESS,c
  4238  000C2E  0E0F               	movlw	15
  4239  000C30  6E2E               	movwf	CANMessageSend@TXB_BASE_ADDRESS+1,c
  4240  000C32                     l2637:
  4241  000C32  FFFF               	dw	65535	; assembler added errata NOP
  4242  000C34  C02D  FFD9         	movff	CANMessageSend@TXB_BASE_ADDRESS,fsr2l
  4243  000C38  C02E  FFDA         	movff	CANMessageSend@TXB_BASE_ADDRESS+1,fsr2h
  4244  000C3C  50DF               	movf	indf2,w,c
  4245  000C3E  0B08               	andlw	8
  4246  000C40  06E8               	decf	wreg,f,c
  4247  000C42  B4D8               	btfsc	status,2,c
  4248  000C44  D7E4               	goto	l2631
  4249                           
  4250                           ;CAN.c: 378: }
  4251                           ;CAN.c: 379: }
  4252                           ;CAN.c: 385: volatile uint8_t * TXBCON_PTR = TXB_BASE_ADDRESS;
  4253  000C46  C02D  F027         	movff	CANMessageSend@TXB_BASE_ADDRESS,CANMessageSend@TXBCON_PTR
  4254  000C4A  C02E  F028         	movff	CANMessageSend@TXB_BASE_ADDRESS+1,CANMessageSend@TXBCON_PTR+1
  4255                           
  4256                           ;CAN.c: 386: volatile uint8_t * TXBSIDH_PTR = TXB_BASE_ADDRESS + 1;
  4257  000C4E  0E01               	movlw	1
  4258  000C50  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4259  000C52  6E29               	movwf	CANMessageSend@TXBSIDH_PTR,c
  4260  000C54  0E00               	movlw	0
  4261  000C56  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4262  000C58  6E2A               	movwf	CANMessageSend@TXBSIDH_PTR+1,c
  4263                           
  4264                           ;CAN.c: 387: volatile uint8_t * TXBSIDL_PTR = TXB_BASE_ADDRESS + 2;
  4265  000C5A  0E02               	movlw	2
  4266  000C5C  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4267  000C5E  6E2F               	movwf	CANMessageSend@TXBSIDL_PTR,c
  4268  000C60  0E00               	movlw	0
  4269  000C62  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4270  000C64  6E30               	movwf	CANMessageSend@TXBSIDL_PTR+1,c
  4271                           
  4272                           ;CAN.c: 388: volatile uint8_t * TXBEIDH_PTR = TXB_BASE_ADDRESS + 3;
  4273  000C66  0E03               	movlw	3
  4274  000C68  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4275  000C6A  6E1B               	movwf	CANMessageSend@TXBEIDH_PTR,c
  4276  000C6C  0E00               	movlw	0
  4277  000C6E  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4278  000C70  6E1C               	movwf	CANMessageSend@TXBEIDH_PTR+1,c
  4279                           
  4280                           ;CAN.c: 389: volatile uint8_t * TXBEIDL_PTR = TXB_BASE_ADDRESS + 4;
  4281  000C72  0E04               	movlw	4
  4282  000C74  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4283  000C76  6E1D               	movwf	CANMessageSend@TXBEIDL_PTR,c
  4284  000C78  0E00               	movlw	0
  4285  000C7A  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4286  000C7C  6E1E               	movwf	CANMessageSend@TXBEIDL_PTR+1,c
  4287                           
  4288                           ;CAN.c: 390: volatile uint8_t * TXBDLC_PTR = TXB_BASE_ADDRESS + 5;
  4289  000C7E  0E05               	movlw	5
  4290  000C80  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4291  000C82  6E2B               	movwf	CANMessageSend@TXBDLC_PTR,c
  4292  000C84  0E00               	movlw	0
  4293  000C86  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4294  000C88  6E2C               	movwf	CANMessageSend@TXBDLC_PTR+1,c
  4295                           
  4296                           ;CAN.c: 391: volatile uint8_t * TXBD0_PTR = TXB_BASE_ADDRESS + 6;
  4297  000C8A  0E06               	movlw	6
  4298  000C8C  242D               	addwf	CANMessageSend@TXB_BASE_ADDRESS,w,c
  4299  000C8E  6E1F               	movwf	CANMessageSend@TXBD0_PTR,c
  4300  000C90  0E00               	movlw	0
  4301  000C92  202E               	addwfc	CANMessageSend@TXB_BASE_ADDRESS+1,w,c
  4302  000C94  6E20               	movwf	CANMessageSend@TXBD0_PTR+1,c
  4303                           
  4304                           ;CAN.c: 395: if( (psMsgObject->ui32MsgID) <= 2047 )
  4305  000C96  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4306  000C9A  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4307  000C9E  0E03               	movlw	3
  4308  000CA0  50DB               	movf	plusw2,w,c
  4309  000CA2  E14B               	bnz	l2645
  4310  000CA4  0E02               	movlw	2
  4311  000CA6  50DB               	movf	plusw2,w,c
  4312  000CA8  E148               	bnz	l2645
  4313  000CAA  52DE               	movf	postinc2,f,c
  4314  000CAC  0E08               	movlw	8
  4315  000CAE  5CDE               	subwf	postinc2,w,c
  4316  000CB0  B0D8               	btfsc	status,0,c
  4317  000CB2  D043               	goto	l2645
  4318                           
  4319                           ;CAN.c: 396: {
  4320                           ;CAN.c: 398: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0x08)) | (0x08 & 0x00);
  4321  000CB4  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4322  000CB8  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4323  000CBC  50DF               	movf	indf2,w,c
  4324  000CBE  0BF7               	andlw	247
  4325  000CC0  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4326  000CC4  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4327  000CC8  6EDF               	movwf	indf2,c
  4328                           
  4329                           ;CAN.c: 400: *(TXBSIDH_PTR) = (*(TXBSIDH_PTR) & ~(0xFF)) | (0xFF & ((psMsgObject->ui32Ms
      +                          gID))>>3);
  4330  000CCA  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4331  000CCE  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4332  000CD2  CFDE F013          	movff	postinc2,??_CANMessageSend
  4333  000CD6  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4334  000CDA  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4335  000CDE  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4336  000CE2  0E04               	movlw	4
  4337  000CE4  D006               	goto	u2300
  4338  000CE6                     u2305:
  4339  000CE6  FFFF               	dw	65535	; assembler added errata NOP
  4340  000CE8  90D8               	bcf	status,0,c
  4341  000CEA  3216               	rrcf	??_CANMessageSend+3,f,c
  4342  000CEC  3215               	rrcf	??_CANMessageSend+2,f,c
  4343  000CEE  3214               	rrcf	??_CANMessageSend+1,f,c
  4344  000CF0  3213               	rrcf	??_CANMessageSend,f,c
  4345  000CF2                     u2300:
  4346  000CF2  FFFF               	dw	65535	; assembler added errata NOP
  4347  000CF4  2EE8               	decfsz	wreg,f,c
  4348  000CF6  D7F7               	goto	u2305
  4349  000CF8  5013               	movf	??_CANMessageSend,w,c
  4350  000CFA  C029  FFD9         	movff	CANMessageSend@TXBSIDH_PTR,fsr2l
  4351  000CFE  C02A  FFDA         	movff	CANMessageSend@TXBSIDH_PTR+1,fsr2h
  4352  000D02  6EDF               	movwf	indf2,c
  4353                           
  4354                           ;CAN.c: 401: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0xE0)) | (0xE0 & ((psMsgObject->ui32Ms
      +                          gID))<<5);
  4355  000D04  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4356  000D08  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4357  000D0C  50DF               	movf	indf2,w,c
  4358  000D0E  6E13               	movwf	??_CANMessageSend& (0+255),c
  4359  000D10  0E05               	movlw	5
  4360  000D12  6E14               	movwf	(??_CANMessageSend+1)& (0+255),c
  4361  000D14                     u2315:
  4362  000D14  FFFF               	dw	65535	; assembler added errata NOP
  4363  000D16  90D8               	bcf	status,0,c
  4364  000D18  3613               	rlcf	??_CANMessageSend,f,c
  4365  000D1A  2E14               	decfsz	(??_CANMessageSend+1)& (0+255),f,c
  4366  000D1C  D7FB               	goto	u2315
  4367  000D1E  0EE0               	movlw	224
  4368  000D20  1613               	andwf	??_CANMessageSend,f,c
  4369  000D22  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4370  000D26  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4371  000D2A  50DF               	movf	indf2,w,c
  4372  000D2C  0B1F               	andlw	31
  4373  000D2E  1013               	iorwf	??_CANMessageSend,w,c
  4374  000D30  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4375  000D34  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4376  000D38  D096               	goto	L10
  4377  000D3A                     l2645:
  4378  000D3A  FFFF               	dw	65535	; assembler added errata NOP
  4379                           
  4380                           ;CAN.c: 403: else
  4381                           ;CAN.c: 404: {
  4382                           ;CAN.c: 406: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0x08)) | (0x08 & 0xff);
  4383  000D3C  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4384  000D40  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4385  000D44  50DF               	movf	indf2,w,c
  4386  000D46  0BF7               	andlw	247
  4387  000D48  0908               	iorlw	8
  4388  000D4A  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4389  000D4E  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4390  000D52  6EDF               	movwf	indf2,c
  4391                           
  4392                           ;CAN.c: 408: *(TXBEIDL_PTR) = (*(TXBEIDL_PTR) & ~(0xFF)) | (0xFF & ((psMsgObject->ui32Ms
      +                          gID)));
  4393  000D54  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4394  000D58  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4395  000D5C  C01D  FFE1         	movff	CANMessageSend@TXBEIDL_PTR,fsr1l
  4396  000D60  C01E  FFE2         	movff	CANMessageSend@TXBEIDL_PTR+1,fsr1h
  4397  000D64  CFDF FFE7          	movff	indf2,indf1
  4398                           
  4399                           ;CAN.c: 409: *(TXBEIDH_PTR) = (*(TXBEIDH_PTR) & ~(0xFF)) | (0xFF & ((psMsgObject->ui32Ms
      +                          gID))>>8);
  4400  000D68  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4401  000D6C  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4402  000D70  CFDE F013          	movff	postinc2,??_CANMessageSend
  4403  000D74  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4404  000D78  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4405  000D7C  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4406  000D80  C014  F013         	movff	??_CANMessageSend+1,??_CANMessageSend
  4407  000D84  C015  F014         	movff	??_CANMessageSend+2,??_CANMessageSend+1
  4408  000D88  C016  F015         	movff	??_CANMessageSend+3,??_CANMessageSend+2
  4409  000D8C  6A16               	clrf	??_CANMessageSend+3,c
  4410  000D8E  5013               	movf	??_CANMessageSend,w,c
  4411  000D90  C01B  FFD9         	movff	CANMessageSend@TXBEIDH_PTR,fsr2l
  4412  000D94  C01C  FFDA         	movff	CANMessageSend@TXBEIDH_PTR+1,fsr2h
  4413  000D98  6EDF               	movwf	indf2,c
  4414                           
  4415                           ;CAN.c: 410: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0x03)) | (0x03 & ((psMsgObject->ui32Ms
      +                          gID))>>16);
  4416  000D9A  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4417  000D9E  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4418  000DA2  CFDE F013          	movff	postinc2,??_CANMessageSend
  4419  000DA6  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4420  000DAA  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4421  000DAE  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4422  000DB2  0E11               	movlw	17
  4423  000DB4  D006               	goto	u2320
  4424  000DB6                     u2325:
  4425  000DB6  FFFF               	dw	65535	; assembler added errata NOP
  4426  000DB8  90D8               	bcf	status,0,c
  4427  000DBA  3216               	rrcf	??_CANMessageSend+3,f,c
  4428  000DBC  3215               	rrcf	??_CANMessageSend+2,f,c
  4429  000DBE  3214               	rrcf	??_CANMessageSend+1,f,c
  4430  000DC0  3213               	rrcf	??_CANMessageSend,f,c
  4431  000DC2                     u2320:
  4432  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  4433  000DC4  2EE8               	decfsz	wreg,f,c
  4434  000DC6  D7F7               	goto	u2325
  4435  000DC8  0E03               	movlw	3
  4436  000DCA  1613               	andwf	??_CANMessageSend,f,c
  4437  000DCC  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4438  000DD0  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4439  000DD4  50DF               	movf	indf2,w,c
  4440  000DD6  0BFC               	andlw	252
  4441  000DD8  1013               	iorwf	??_CANMessageSend,w,c
  4442  000DDA  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4443  000DDE  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4444  000DE2  6EDF               	movwf	indf2,c
  4445                           
  4446                           ;CAN.c: 411: *(TXBSIDL_PTR) = (*(TXBSIDL_PTR) & ~(0xE0)) | (0xE0 & ((psMsgObject->ui32Ms
      +                          gID))>>18);
  4447  000DE4  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4448  000DE8  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4449  000DEC  CFDE F013          	movff	postinc2,??_CANMessageSend
  4450  000DF0  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4451  000DF4  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4452  000DF8  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4453  000DFC  0E13               	movlw	19
  4454  000DFE  D006               	goto	u2330
  4455  000E00                     u2335:
  4456  000E00  FFFF               	dw	65535	; assembler added errata NOP
  4457  000E02  90D8               	bcf	status,0,c
  4458  000E04  3216               	rrcf	??_CANMessageSend+3,f,c
  4459  000E06  3215               	rrcf	??_CANMessageSend+2,f,c
  4460  000E08  3214               	rrcf	??_CANMessageSend+1,f,c
  4461  000E0A  3213               	rrcf	??_CANMessageSend,f,c
  4462  000E0C                     u2330:
  4463  000E0C  FFFF               	dw	65535	; assembler added errata NOP
  4464  000E0E  2EE8               	decfsz	wreg,f,c
  4465  000E10  D7F7               	goto	u2335
  4466  000E12  0EE0               	movlw	224
  4467  000E14  1613               	andwf	??_CANMessageSend,f,c
  4468  000E16  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4469  000E1A  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4470  000E1E  50DF               	movf	indf2,w,c
  4471  000E20  0B1F               	andlw	31
  4472  000E22  1013               	iorwf	??_CANMessageSend,w,c
  4473  000E24  C02F  FFD9         	movff	CANMessageSend@TXBSIDL_PTR,fsr2l
  4474  000E28  C030  FFDA         	movff	CANMessageSend@TXBSIDL_PTR+1,fsr2h
  4475  000E2C  6EDF               	movwf	indf2,c
  4476                           
  4477                           ;CAN.c: 412: *(TXBSIDH_PTR) = (*(TXBSIDH_PTR) & ~(0xFF)) | (0xFF & ((psMsgObject->ui32Ms
      +                          gID))>>21);
  4478  000E2E  C010  FFD9         	movff	CANMessageSend@psMsgObject,fsr2l
  4479  000E32  C011  FFDA         	movff	CANMessageSend@psMsgObject+1,fsr2h
  4480  000E36  CFDE F013          	movff	postinc2,??_CANMessageSend
  4481  000E3A  CFDE F014          	movff	postinc2,??_CANMessageSend+1
  4482  000E3E  CFDE F015          	movff	postinc2,??_CANMessageSend+2
  4483  000E42  CFDE F016          	movff	postinc2,??_CANMessageSend+3
  4484  000E46  0E16               	movlw	22
  4485  000E48  D006               	goto	u2340
  4486  000E4A                     u2345:
  4487  000E4A  FFFF               	dw	65535	; assembler added errata NOP
  4488  000E4C  90D8               	bcf	status,0,c
  4489  000E4E  3216               	rrcf	??_CANMessageSend+3,f,c
  4490  000E50  3215               	rrcf	??_CANMessageSend+2,f,c
  4491  000E52  3214               	rrcf	??_CANMessageSend+1,f,c
  4492  000E54  3213               	rrcf	??_CANMessageSend,f,c
  4493  000E56                     u2340:
  4494  000E56  FFFF               	dw	65535	; assembler added errata NOP
  4495  000E58  2EE8               	decfsz	wreg,f,c
  4496  000E5A  D7F7               	goto	u2345
  4497  000E5C  5013               	movf	??_CANMessageSend,w,c
  4498  000E5E  C029  FFD9         	movff	CANMessageSend@TXBSIDH_PTR,fsr2l
  4499  000E62  C02A  FFDA         	movff	CANMessageSend@TXBSIDH_PTR+1,fsr2h
  4500  000E66                     L10:
  4501  000E66  FFFF               	dw	65535	; assembler added errata NOP
  4502  000E68  6EDF               	movwf	indf2,c
  4503                           
  4504                           ;CAN.c: 413: }
  4505                           ;CAN.c: 418: if( FrameType == 1<<2 )
  4506  000E6A  0E04               	movlw	4
  4507  000E6C  1812               	xorwf	CANMessageSend@FrameType,w,c
  4508  000E6E  A4D8               	btfss	status,2,c
  4509  000E70  D060               	goto	l2677
  4510                           
  4511                           ;CAN.c: 419: {
  4512                           ;CAN.c: 421: *(TXBDLC_PTR) = (*(TXBDLC_PTR) & ~(0x0F)) | (0x0F & psMsgObject->ui32MsgLen
      +                          );
  4513  000E72  EE20 F00C          	lfsr	2,12
  4514  000E76  5010               	movf	CANMessageSend@psMsgObject,w,c
  4515  000E78  26D9               	addwf	fsr2l,f,c
  4516  000E7A  5011               	movf	CANMessageSend@psMsgObject+1,w,c
  4517  000E7C  22DA               	addwfc	fsr2h,f,c
  4518  000E7E  50DF               	movf	indf2,w,c
  4519  000E80  6E13               	movwf	??_CANMessageSend& (0+255),c
  4520  000E82  0E0F               	movlw	15
  4521  000E84  1613               	andwf	??_CANMessageSend,f,c
  4522  000E86  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4523  000E8A  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4524  000E8E  50DF               	movf	indf2,w,c
  4525  000E90  0BF0               	andlw	240
  4526  000E92  1013               	iorwf	??_CANMessageSend,w,c
  4527  000E94  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4528  000E98  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4529  000E9C  6EDF               	movwf	indf2,c
  4530                           
  4531                           ;CAN.c: 423: *(TXBDLC_PTR) = (*(TXBDLC_PTR) & ~(1<<6)) | (1<<6 & 0x00);
  4532  000E9E  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4533  000EA2  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4534  000EA6  50DF               	movf	indf2,w,c
  4535  000EA8  0BBF               	andlw	191
  4536  000EAA  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4537  000EAE  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4538  000EB2  6EDF               	movwf	indf2,c
  4539                           
  4540                           ;CAN.c: 425: int i;
  4541                           ;CAN.c: 426: volatile uint8_t * data_reg_ptr = TXBD0_PTR;
  4542  000EB4  C01F  F023         	movff	CANMessageSend@TXBD0_PTR,CANMessageSend@data_reg_ptr
  4543  000EB8  C020  F024         	movff	CANMessageSend@TXBD0_PTR+1,CANMessageSend@data_reg_ptr+1
  4544                           
  4545                           ;CAN.c: 427: volatile uint8_t * data_ptr = psMsgObject->pui8MsgData;
  4546  000EBC  EE20 F010          	lfsr	2,16
  4547  000EC0  5010               	movf	CANMessageSend@psMsgObject,w,c
  4548  000EC2  26D9               	addwf	fsr2l,f,c
  4549  000EC4  5011               	movf	CANMessageSend@psMsgObject+1,w,c
  4550  000EC6  22DA               	addwfc	fsr2h,f,c
  4551  000EC8  CFDE F025          	movff	postinc2,CANMessageSend@data_ptr
  4552  000ECC  CFDD F026          	movff	postdec2,CANMessageSend@data_ptr+1
  4553                           
  4554                           ;CAN.c: 429: for(i=0; i<(psMsgObject->ui32MsgLen); i++)
  4555  000ED0  0E00               	movlw	0
  4556  000ED2  6E22               	movwf	CANMessageSend@i+1,c
  4557  000ED4  0E00               	movlw	0
  4558  000ED6  6E21               	movwf	CANMessageSend@i,c
  4559  000ED8  D011               	goto	l2675
  4560  000EDA                     l2667:
  4561  000EDA  FFFF               	dw	65535	; assembler added errata NOP
  4562                           
  4563                           ;CAN.c: 430: {
  4564                           ;CAN.c: 431: *data_reg_ptr = *(data_ptr);
  4565  000EDC  C025  FFD9         	movff	CANMessageSend@data_ptr,fsr2l
  4566  000EE0  C026  FFDA         	movff	CANMessageSend@data_ptr+1,fsr2h
  4567  000EE4  C023  FFE1         	movff	CANMessageSend@data_reg_ptr,fsr1l
  4568  000EE8  C024  FFE2         	movff	CANMessageSend@data_reg_ptr+1,fsr1h
  4569  000EEC  CFDF FFE7          	movff	indf2,indf1
  4570                           
  4571                           ;CAN.c: 432: data_reg_ptr++;
  4572  000EF0  4A23               	infsnz	CANMessageSend@data_reg_ptr,f,c
  4573  000EF2  2A24               	incf	CANMessageSend@data_reg_ptr+1,f,c
  4574                           
  4575                           ;CAN.c: 433: data_ptr++;
  4576  000EF4  4A25               	infsnz	CANMessageSend@data_ptr,f,c
  4577  000EF6  2A26               	incf	CANMessageSend@data_ptr+1,f,c
  4578  000EF8  4A21               	infsnz	CANMessageSend@i,f,c
  4579  000EFA  2A22               	incf	CANMessageSend@i+1,f,c
  4580  000EFC                     l2675:
  4581  000EFC  FFFF               	dw	65535	; assembler added errata NOP
  4582  000EFE  EE20 F00C          	lfsr	2,12
  4583  000F02  5010               	movf	CANMessageSend@psMsgObject,w,c
  4584  000F04  26D9               	addwf	fsr2l,f,c
  4585  000F06  5011               	movf	CANMessageSend@psMsgObject+1,w,c
  4586  000F08  22DA               	addwfc	fsr2h,f,c
  4587  000F0A  C021  F017         	movff	CANMessageSend@i,??_CANMessageSend+4
  4588  000F0E  C022  F018         	movff	CANMessageSend@i+1,??_CANMessageSend+5
  4589  000F12  0E00               	movlw	0
  4590  000F14  BE18               	btfsc	(??_CANMessageSend+5)& (0+255),7,c
  4591  000F16  0EFF               	movlw	255
  4592  000F18  6E19               	movwf	(??_CANMessageSend+6)& (0+255),c
  4593  000F1A  6E1A               	movwf	(??_CANMessageSend+7)& (0+255),c
  4594  000F1C  50DE               	movf	postinc2,w,c
  4595  000F1E  5C17               	subwf	??_CANMessageSend+4,w,c
  4596  000F20  50DE               	movf	postinc2,w,c
  4597  000F22  5818               	subwfb	??_CANMessageSend+5,w,c
  4598  000F24  50DE               	movf	postinc2,w,c
  4599  000F26  5819               	subwfb	??_CANMessageSend+6,w,c
  4600  000F28  50DE               	movf	postinc2,w,c
  4601  000F2A  581A               	subwfb	??_CANMessageSend+7,w,c
  4602  000F2C  B0D8               	btfsc	status,0,c
  4603  000F2E  D00E               	goto	l423
  4604  000F30  D7D4               	goto	l2667
  4605  000F32                     l2677:
  4606  000F32  FFFF               	dw	65535	; assembler added errata NOP
  4607                           
  4608                           ;CAN.c: 436: else
  4609                           ;CAN.c: 437: {
  4610                           ;CAN.c: 438: *(TXBDLC_PTR) = (*(TXBDLC_PTR) & ~(1<<6)) | (1<<6 & 0xFF);
  4611  000F34  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4612  000F38  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4613  000F3C  50DF               	movf	indf2,w,c
  4614  000F3E  0BBF               	andlw	191
  4615  000F40  0940               	iorlw	64
  4616  000F42  C02B  FFD9         	movff	CANMessageSend@TXBDLC_PTR,fsr2l
  4617  000F46  C02C  FFDA         	movff	CANMessageSend@TXBDLC_PTR+1,fsr2h
  4618  000F4A  6EDF               	movwf	indf2,c
  4619  000F4C                     l423:
  4620  000F4C  FFFF               	dw	65535	; assembler added errata NOP
  4621                           
  4622                           ;CAN.c: 439: }
  4623                           ;CAN.c: 442: *TXBCON_PTR = (*TXBCON_PTR & ~(1<<3)) | (1<<3 & 0xFF);
  4624  000F4E  C027  FFD9         	movff	CANMessageSend@TXBCON_PTR,fsr2l
  4625  000F52  C028  FFDA         	movff	CANMessageSend@TXBCON_PTR+1,fsr2h
  4626  000F56  50DF               	movf	indf2,w,c
  4627  000F58  0BF7               	andlw	247
  4628  000F5A  0908               	iorlw	8
  4629  000F5C  C027  FFD9         	movff	CANMessageSend@TXBCON_PTR,fsr2l
  4630  000F60  C028  FFDA         	movff	CANMessageSend@TXBCON_PTR+1,fsr2h
  4631  000F64  6EDF               	movwf	indf2,c
  4632  000F66  0012               	return		;funcret
  4633  000F68  FFFF               	dw	65535	; errata NOP
  4634  000F6A                     __end_of_CANMessageSend:
  4635                           	opt stack 0
  4636                           tblptru	equ	0xFF8
  4637                           tblptrh	equ	0xFF7
  4638                           tblptrl	equ	0xFF6
  4639                           tablat	equ	0xFF5
  4640                           intcon	equ	0xFF2
  4641                           indf0	equ	0xFEF
  4642                           postinc0	equ	0xFEE
  4643                           fsr0h	equ	0xFEA
  4644                           fsr0l	equ	0xFE9
  4645                           wreg	equ	0xFE8
  4646                           indf1	equ	0xFE7
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           indf2	equ	0xFDF
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           plusw2	equ	0xFDB
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function _CANMessageGet *****************
  4658 ;; Defined at:
  4659 ;;		line 218 in file "CAN.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  psMsgObject     2   15[COMRAM] PTR struct .
  4662 ;;		 -> rxCANMessage(18), 
  4663 ;;  bClrPendingI    1   17[COMRAM] unsigned char 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  data_ptr        2   28[COMRAM] PTR volatile unsigned ch
  4666 ;;		 -> main@sync_period(2), main@ui16ReplyData(2), 
  4667 ;;  rxBuffer_ptr    2   26[COMRAM] PTR volatile unsigned ch
  4668 ;;		 -> RXB1D0(1), 
  4669 ;;  i               2   24[COMRAM] int 
  4670 ;;  data_ptr        2   22[COMRAM] PTR volatile unsigned ch
  4671 ;;		 -> main@sync_period(2), main@ui16ReplyData(2), 
  4672 ;;  rxBuffer_ptr    2   20[COMRAM] PTR volatile unsigned ch
  4673 ;;		 -> RXB0D0(1), 
  4674 ;;  i               2   18[COMRAM] int 
  4675 ;;  RXMsgFlag       1   30[COMRAM] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      unsigned char 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4685 ;;      Params:         3       0       0       0       0       0       0
  4686 ;;      Locals:        13       0       0       0       0       0       0
  4687 ;;      Temps:          0      37       0       0       0       0       0
  4688 ;;      Totals:        16      37       0       0       0       0       0
  4689 ;;Total ram usage:       53 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    2
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_main
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text23
  4700  000618                     __ptext23:
  4701                           	opt stack 0
  4702  000618                     _CANMessageGet:
  4703                           	opt stack 0
  4704  000618  FFFF               	dw	65535	; assembler added errata NOP
  4705                           
  4706                           ;CAN.c: 220: uint8_t RXMsgFlag;
  4707                           ;CAN.c: 221: RXMsgFlag = 0x00;
  4708                           
  4709                           ;incstack = 0
  4710  00061A  0E00               	movlw	0
  4711  00061C  6E1F               	movwf	CANMessageGet@RXMsgFlag,c
  4712                           
  4713                           ;CAN.c: 224: psMsgObject->ui32Flags = 0;
  4714  00061E  EE20 F008          	lfsr	2,8
  4715  000622  5010               	movf	CANMessageGet@psMsgObject,w,c
  4716  000624  26D9               	addwf	fsr2l,f,c
  4717  000626  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  4718  000628  22DA               	addwfc	fsr2h,f,c
  4719  00062A  6ADE               	clrf	postinc2,c
  4720  00062C  6ADE               	clrf	postinc2,c
  4721  00062E  6ADE               	clrf	postinc2,c
  4722  000630  6ADD               	clrf	postdec2,c
  4723                           
  4724                           ;CAN.c: 227: if( PIR3 & 1<<5)
  4725  000632  AAA4               	btfss	4004,5,c	;volatile
  4726  000634  D00C               	goto	l3029
  4727                           
  4728                           ;CAN.c: 228: {
  4729                           ;CAN.c: 229: psMsgObject->ui32Flags |= 1<<1;
  4730  000636  EE20 F008          	lfsr	2,8
  4731  00063A  5010               	movf	CANMessageGet@psMsgObject,w,c
  4732  00063C  26D9               	addwf	fsr2l,f,c
  4733  00063E  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  4734  000640  22DA               	addwfc	fsr2h,f,c
  4735  000642  0E02               	movlw	2
  4736  000644  12DE               	iorwf	postinc2,f,c
  4737  000646  0E00               	movlw	0
  4738  000648  12DE               	iorwf	postinc2,f,c
  4739  00064A  12DE               	iorwf	postinc2,f,c
  4740  00064C  12DE               	iorwf	postinc2,f,c
  4741  00064E                     l3029:
  4742  00064E  FFFF               	dw	65535	; assembler added errata NOP
  4743                           
  4744                           ;CAN.c: 231: }
  4745                           ;CAN.c: 235: if ( RXB0CONbits.RXFUL == 1 )
  4746  000650  AE60               	btfss	3936,7,c	;volatile
  4747  000652  D156               	goto	l3061
  4748                           
  4749                           ;CAN.c: 238: {
  4750                           ;CAN.c: 240: if( RXB0SIDLbits.EXID == 0x00 )
  4751  000654  B662               	btfsc	3938,3,c	;volatile
  4752  000656  D03C               	goto	l3035
  4753                           
  4754                           ;CAN.c: 241: {
  4755                           ;CAN.c: 242: psMsgObject->ui32MsgID = ( RXB0SIDH<<3 ) | ( RXB0SIDL>>5 );
  4756  000658  CF62 F060          	movff	3938,??_CANMessageGet	;volatile
  4757  00065C  0E05               	movlw	5
  4758  00065E  0100               	movlb	0	; () banked
  4759  000660  6F61               	movwf	(??_CANMessageGet+1)& (0+255),b
  4760  000662                     u2845:
  4761  000662  FFFF               	dw	65535	; assembler added errata NOP
  4762  000664  0100               	movlb	0	; () banked
  4763  000666  90D8               	bcf	status,0,c
  4764  000668  3360               	rrcf	??_CANMessageGet& (0+255),f,b
  4765  00066A  0100               	movlb	0	; () banked
  4766  00066C  2F61               	decfsz	(??_CANMessageGet+1)& (0+255),f,b
  4767  00066E  D7F9               	goto	u2845
  4768  000670  0100               	movlb	0	; () banked
  4769  000672  5160               	movf	??_CANMessageGet& (0+255),w,b
  4770  000674  CF61 F062          	movff	3937,??_CANMessageGet+2	;volatile
  4771  000678  0100               	movlb	0	; () banked
  4772  00067A  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  4773  00067C  0100               	movlb	0	; () banked
  4774  00067E  90D8               	bcf	status,0,c
  4775  000680  3762               	rlcf	(??_CANMessageGet+2)& (0+255),f,b
  4776  000682  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  4777  000684  0100               	movlb	0	; () banked
  4778  000686  90D8               	bcf	status,0,c
  4779  000688  3762               	rlcf	(??_CANMessageGet+2)& (0+255),f,b
  4780  00068A  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  4781  00068C  0100               	movlb	0	; () banked
  4782  00068E  90D8               	bcf	status,0,c
  4783  000690  3762               	rlcf	(??_CANMessageGet+2)& (0+255),f,b
  4784  000692  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  4785  000694  0100               	movlb	0	; () banked
  4786  000696  1162               	iorwf	(??_CANMessageGet+2)& (0+255),w,b
  4787  000698  0100               	movlb	0	; () banked
  4788  00069A  6F64               	movwf	(??_CANMessageGet+4)& (0+255),b
  4789  00069C  0100               	movlb	0	; () banked
  4790  00069E  5163               	movf	(??_CANMessageGet+3)& (0+255),w,b
  4791  0006A0  0100               	movlb	0	; () banked
  4792  0006A2  6F65               	movwf	(??_CANMessageGet+5)& (0+255),b
  4793  0006A4  0100               	movlb	0	; () banked
  4794  0006A6  6B66               	clrf	(??_CANMessageGet+6)& (0+255),b
  4795  0006A8  0100               	movlb	0	; () banked
  4796  0006AA  BF65               	btfsc	(??_CANMessageGet+5)& (0+255),7,b
  4797  0006AC  0766               	decf	(??_CANMessageGet+6)& (0+255),f,b
  4798  0006AE  0100               	movlb	0	; () banked
  4799  0006B0  5166               	movf	(??_CANMessageGet+6)& (0+255),w,b
  4800  0006B2  0100               	movlb	0	; () banked
  4801  0006B4  6F67               	movwf	(??_CANMessageGet+7)& (0+255),b
  4802  0006B6  C010  FFD9         	movff	CANMessageGet@psMsgObject,fsr2l
  4803  0006BA  C011  FFDA         	movff	CANMessageGet@psMsgObject+1,fsr2h
  4804  0006BE  C064  FFDE         	movff	??_CANMessageGet+4,postinc2
  4805  0006C2  C065  FFDE         	movff	??_CANMessageGet+5,postinc2
  4806  0006C6  C066  FFDE         	movff	??_CANMessageGet+6,postinc2
  4807  0006CA  C067  FFDE         	movff	??_CANMessageGet+7,postinc2
  4808                           
  4809                           ;CAN.c: 243: }
  4810  0006CE  D0AB               	goto	l390
  4811  0006D0                     l3035:
  4812  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  4813                           
  4814                           ;CAN.c: 245: else
  4815                           ;CAN.c: 246: {
  4816                           ;CAN.c: 247: psMsgObject->ui32MsgID = ( ( ((uint32_t)RXB0SIDH)<<21 ) | ( (((uint32_t)RXB
      +                          0SIDL) & 0x00E0)<<18 ) | ( (((uint32_t)RXB0SIDL) & 0x0003)<<16 ) | ( (uint32_t)RXB0EIDH<
      +                          <8 ) | (uint32_t)( RXB0EIDL ) ) ;
  4817  0006D2  CF63 F060          	movff	3939,??_CANMessageGet	;volatile
  4818  0006D6  0100               	movlb	0	; () banked
  4819  0006D8  6B61               	clrf	(??_CANMessageGet+1)& (0+255),b
  4820  0006DA  6B62               	clrf	(??_CANMessageGet+2)& (0+255),b
  4821  0006DC  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  4822  0006DE  C062  F063         	movff	??_CANMessageGet+2,??_CANMessageGet+3
  4823  0006E2  C061  F062         	movff	??_CANMessageGet+1,??_CANMessageGet+2
  4824  0006E6  C060  F061         	movff	??_CANMessageGet,??_CANMessageGet+1
  4825  0006EA  0100               	movlb	0	; () banked
  4826  0006EC  6B60               	clrf	??_CANMessageGet& (0+255),b
  4827  0006EE  CF62 F064          	movff	3938,??_CANMessageGet+4	;volatile
  4828  0006F2  0E03               	movlw	3
  4829  0006F4  0100               	movlb	0	; () banked
  4830  0006F6  1764               	andwf	(??_CANMessageGet+4)& (0+255),f,b
  4831  0006F8  C064  F065         	movff	??_CANMessageGet+4,??_CANMessageGet+5
  4832  0006FC  0100               	movlb	0	; () banked
  4833  0006FE  6B66               	clrf	(??_CANMessageGet+6)& (0+255),b
  4834  000700  6B67               	clrf	(??_CANMessageGet+7)& (0+255),b
  4835  000702  6B68               	clrf	(??_CANMessageGet+8)& (0+255),b
  4836  000704  C066  F068         	movff	??_CANMessageGet+6,??_CANMessageGet+8
  4837  000708  C065  F067         	movff	??_CANMessageGet+5,??_CANMessageGet+7
  4838  00070C  0100               	movlb	0	; () banked
  4839  00070E  6B66               	clrf	(??_CANMessageGet+6)& (0+255),b
  4840  000710  6B65               	clrf	(??_CANMessageGet+5)& (0+255),b
  4841  000712  CF62 F069          	movff	3938,??_CANMessageGet+9	;volatile
  4842  000716  0EE0               	movlw	224
  4843  000718  0100               	movlb	0	; () banked
  4844  00071A  1769               	andwf	(??_CANMessageGet+9)& (0+255),f,b
  4845  00071C  C069  F06A         	movff	??_CANMessageGet+9,??_CANMessageGet+10
  4846  000720  0100               	movlb	0	; () banked
  4847  000722  6B6B               	clrf	(??_CANMessageGet+11)& (0+255),b
  4848  000724  6B6C               	clrf	(??_CANMessageGet+12)& (0+255),b
  4849  000726  6B6D               	clrf	(??_CANMessageGet+13)& (0+255),b
  4850  000728  0E12               	movlw	18
  4851  00072A                     u2855:
  4852  00072A  FFFF               	dw	65535	; assembler added errata NOP
  4853  00072C  90D8               	bcf	status,0,c
  4854  00072E  0100               	movlb	0	; () banked
  4855  000730  376A               	rlcf	(??_CANMessageGet+10)& (0+255),f,b
  4856  000732  376B               	rlcf	(??_CANMessageGet+11)& (0+255),f,b
  4857  000734  376C               	rlcf	(??_CANMessageGet+12)& (0+255),f,b
  4858  000736  376D               	rlcf	(??_CANMessageGet+13)& (0+255),f,b
  4859  000738  2EE8               	decfsz	wreg,f,c
  4860  00073A  D7F7               	goto	u2855
  4861  00073C  CF61 F06E          	movff	3937,??_CANMessageGet+14	;volatile
  4862  000740  0100               	movlb	0	; () banked
  4863  000742  6B6F               	clrf	(??_CANMessageGet+15)& (0+255),b
  4864  000744  6B70               	clrf	(??_CANMessageGet+16)& (0+255),b
  4865  000746  6B71               	clrf	(??_CANMessageGet+17)& (0+255),b
  4866  000748  0E15               	movlw	21
  4867  00074A                     u2865:
  4868  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4869  00074C  90D8               	bcf	status,0,c
  4870  00074E  0100               	movlb	0	; () banked
  4871  000750  376E               	rlcf	(??_CANMessageGet+14)& (0+255),f,b
  4872  000752  376F               	rlcf	(??_CANMessageGet+15)& (0+255),f,b
  4873  000754  3770               	rlcf	(??_CANMessageGet+16)& (0+255),f,b
  4874  000756  3771               	rlcf	(??_CANMessageGet+17)& (0+255),f,b
  4875  000758  2EE8               	decfsz	wreg,f,c
  4876  00075A  D7F7               	goto	u2865
  4877  00075C  0100               	movlb	0	; () banked
  4878  00075E  516A               	movf	(??_CANMessageGet+10)& (0+255),w,b
  4879  000760  0100               	movlb	0	; () banked
  4880  000762  116E               	iorwf	(??_CANMessageGet+14)& (0+255),w,b
  4881  000764  0100               	movlb	0	; () banked
  4882  000766  6F72               	movwf	(??_CANMessageGet+18)& (0+255),b
  4883  000768  0100               	movlb	0	; () banked
  4884  00076A  516B               	movf	(??_CANMessageGet+11)& (0+255),w,b
  4885  00076C  0100               	movlb	0	; () banked
  4886  00076E  116F               	iorwf	(??_CANMessageGet+15)& (0+255),w,b
  4887  000770  0100               	movlb	0	; () banked
  4888  000772  6F73               	movwf	(??_CANMessageGet+19)& (0+255),b
  4889  000774  0100               	movlb	0	; () banked
  4890  000776  516C               	movf	(??_CANMessageGet+12)& (0+255),w,b
  4891  000778  0100               	movlb	0	; () banked
  4892  00077A  1170               	iorwf	(??_CANMessageGet+16)& (0+255),w,b
  4893  00077C  0100               	movlb	0	; () banked
  4894  00077E  6F74               	movwf	(??_CANMessageGet+20)& (0+255),b
  4895  000780  0100               	movlb	0	; () banked
  4896  000782  516D               	movf	(??_CANMessageGet+13)& (0+255),w,b
  4897  000784  0100               	movlb	0	; () banked
  4898  000786  1171               	iorwf	(??_CANMessageGet+17)& (0+255),w,b
  4899  000788  0100               	movlb	0	; () banked
  4900  00078A  6F75               	movwf	(??_CANMessageGet+21)& (0+255),b
  4901  00078C  0100               	movlb	0	; () banked
  4902  00078E  5165               	movf	(??_CANMessageGet+5)& (0+255),w,b
  4903  000790  0100               	movlb	0	; () banked
  4904  000792  1172               	iorwf	(??_CANMessageGet+18)& (0+255),w,b
  4905  000794  0100               	movlb	0	; () banked
  4906  000796  6F76               	movwf	(??_CANMessageGet+22)& (0+255),b
  4907  000798  0100               	movlb	0	; () banked
  4908  00079A  5166               	movf	(??_CANMessageGet+6)& (0+255),w,b
  4909  00079C  0100               	movlb	0	; () banked
  4910  00079E  1173               	iorwf	(??_CANMessageGet+19)& (0+255),w,b
  4911  0007A0  0100               	movlb	0	; () banked
  4912  0007A2  6F77               	movwf	(??_CANMessageGet+23)& (0+255),b
  4913  0007A4  0100               	movlb	0	; () banked
  4914  0007A6  5167               	movf	(??_CANMessageGet+7)& (0+255),w,b
  4915  0007A8  0100               	movlb	0	; () banked
  4916  0007AA  1174               	iorwf	(??_CANMessageGet+20)& (0+255),w,b
  4917  0007AC  0100               	movlb	0	; () banked
  4918  0007AE  6F78               	movwf	(??_CANMessageGet+24)& (0+255),b
  4919  0007B0  0100               	movlb	0	; () banked
  4920  0007B2  5168               	movf	(??_CANMessageGet+8)& (0+255),w,b
  4921  0007B4  0100               	movlb	0	; () banked
  4922  0007B6  1175               	iorwf	(??_CANMessageGet+21)& (0+255),w,b
  4923  0007B8  0100               	movlb	0	; () banked
  4924  0007BA  6F79               	movwf	(??_CANMessageGet+25)& (0+255),b
  4925  0007BC  0100               	movlb	0	; () banked
  4926  0007BE  5160               	movf	??_CANMessageGet& (0+255),w,b
  4927  0007C0  0100               	movlb	0	; () banked
  4928  0007C2  1176               	iorwf	(??_CANMessageGet+22)& (0+255),w,b
  4929  0007C4  0100               	movlb	0	; () banked
  4930  0007C6  6F7A               	movwf	(??_CANMessageGet+26)& (0+255),b
  4931  0007C8  0100               	movlb	0	; () banked
  4932  0007CA  5161               	movf	(??_CANMessageGet+1)& (0+255),w,b
  4933  0007CC  0100               	movlb	0	; () banked
  4934  0007CE  1177               	iorwf	(??_CANMessageGet+23)& (0+255),w,b
  4935  0007D0  0100               	movlb	0	; () banked
  4936  0007D2  6F7B               	movwf	(??_CANMessageGet+27)& (0+255),b
  4937  0007D4  0100               	movlb	0	; () banked
  4938  0007D6  5162               	movf	(??_CANMessageGet+2)& (0+255),w,b
  4939  0007D8  0100               	movlb	0	; () banked
  4940  0007DA  1178               	iorwf	(??_CANMessageGet+24)& (0+255),w,b
  4941  0007DC  0100               	movlb	0	; () banked
  4942  0007DE  6F7C               	movwf	(??_CANMessageGet+28)& (0+255),b
  4943  0007E0  0100               	movlb	0	; () banked
  4944  0007E2  5163               	movf	(??_CANMessageGet+3)& (0+255),w,b
  4945  0007E4  0100               	movlb	0	; () banked
  4946  0007E6  1179               	iorwf	(??_CANMessageGet+25)& (0+255),w,b
  4947  0007E8  0100               	movlb	0	; () banked
  4948  0007EA  6F7D               	movwf	(??_CANMessageGet+29)& (0+255),b
  4949  0007EC  5064               	movf	3940,w,c	;volatile
  4950  0007EE  0100               	movlb	0	; () banked
  4951  0007F0  117A               	iorwf	(??_CANMessageGet+26)& (0+255),w,b
  4952  0007F2  0100               	movlb	0	; () banked
  4953  0007F4  6F7E               	movwf	(??_CANMessageGet+30)& (0+255),b
  4954  0007F6  0100               	movlb	0	; () banked
  4955  0007F8  517B               	movf	(??_CANMessageGet+27)& (0+255),w,b
  4956  0007FA  0100               	movlb	0	; () banked
  4957  0007FC  6F7F               	movwf	(??_CANMessageGet+31)& (0+255),b
  4958  0007FE  0100               	movlb	0	; () banked
  4959  000800  517C               	movf	(??_CANMessageGet+28)& (0+255),w,b
  4960  000802  0100               	movlb	0	; () banked
  4961  000804  6F80               	movwf	(??_CANMessageGet+32)& (0+255),b
  4962  000806  0100               	movlb	0	; () banked
  4963  000808  517D               	movf	(??_CANMessageGet+29)& (0+255),w,b
  4964  00080A  0100               	movlb	0	; () banked
  4965  00080C  6F81               	movwf	(??_CANMessageGet+33)& (0+255),b
  4966  00080E  C010  FFD9         	movff	CANMessageGet@psMsgObject,fsr2l
  4967  000812  C011  FFDA         	movff	CANMessageGet@psMsgObject+1,fsr2h
  4968  000816  C07E  FFDE         	movff	??_CANMessageGet+30,postinc2
  4969  00081A  C07F  FFDE         	movff	??_CANMessageGet+31,postinc2
  4970  00081E  C080  FFDE         	movff	??_CANMessageGet+32,postinc2
  4971  000822  C081  FFDE         	movff	??_CANMessageGet+33,postinc2
  4972  000826                     l390:
  4973  000826  FFFF               	dw	65535	; assembler added errata NOP
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;CAN.c: 248: }
  4977                           ;CAN.c: 251: psMsgObject->ui32MsgLen = RXB0DLC;
  4978  000828  CF65 F060          	movff	3941,??_CANMessageGet	;volatile
  4979  00082C  0100               	movlb	0	; () banked
  4980  00082E  6B61               	clrf	(??_CANMessageGet+1)& (0+255),b
  4981  000830  6B62               	clrf	(??_CANMessageGet+2)& (0+255),b
  4982  000832  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  4983  000834  EE20 F00C          	lfsr	2,12
  4984  000838  5010               	movf	CANMessageGet@psMsgObject,w,c
  4985  00083A  26D9               	addwf	fsr2l,f,c
  4986  00083C  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  4987  00083E  22DA               	addwfc	fsr2h,f,c
  4988  000840  C060  FFDE         	movff	??_CANMessageGet,postinc2
  4989  000844  C061  FFDE         	movff	??_CANMessageGet+1,postinc2
  4990  000848  C062  FFDE         	movff	??_CANMessageGet+2,postinc2
  4991  00084C  C063  FFDE         	movff	??_CANMessageGet+3,postinc2
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;CAN.c: 254: if( RXB0DLC & 1<<6 )
  4995  000850  AC65               	btfss	3941,6,c	;volatile
  4996  000852  D00D               	goto	l3041
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;CAN.c: 255: {
  5000                           ;CAN.c: 256: psMsgObject->ui32Flags |= 1<<6;
  5001  000854  EE20 F008          	lfsr	2,8
  5002  000858  5010               	movf	CANMessageGet@psMsgObject,w,c
  5003  00085A  26D9               	addwf	fsr2l,f,c
  5004  00085C  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5005  00085E  22DA               	addwfc	fsr2h,f,c
  5006  000860  0E40               	movlw	64
  5007  000862  12DE               	iorwf	postinc2,f,c
  5008  000864  0E00               	movlw	0
  5009  000866  12DE               	iorwf	postinc2,f,c
  5010  000868  12DE               	iorwf	postinc2,f,c
  5011  00086A  12DE               	iorwf	postinc2,f,c
  5012                           
  5013                           ;CAN.c: 257: }
  5014  00086C  D044               	goto	l3057
  5015  00086E                     l3041:
  5016  00086E  FFFF               	dw	65535	; assembler added errata NOP
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;CAN.c: 259: else
  5020                           ;CAN.c: 260: {
  5021                           ;CAN.c: 262: int i;
  5022                           ;CAN.c: 263: volatile uint8_t * rxBuffer_ptr = &RXB0D0;
  5023  000870  0E66               	movlw	102
  5024  000872  6E15               	movwf	CANMessageGet@rxBuffer_ptr,c
  5025  000874  0E0F               	movlw	15
  5026  000876  6E16               	movwf	CANMessageGet@rxBuffer_ptr+1,c
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;CAN.c: 264: volatile uint8_t * data_ptr = psMsgObject->pui8MsgData;
  5030  000878  EE20 F010          	lfsr	2,16
  5031  00087C  5010               	movf	CANMessageGet@psMsgObject,w,c
  5032  00087E  26D9               	addwf	fsr2l,f,c
  5033  000880  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5034  000882  22DA               	addwfc	fsr2h,f,c
  5035  000884  CFDE F017          	movff	postinc2,CANMessageGet@data_ptr
  5036  000888  CFDD F018          	movff	postdec2,CANMessageGet@data_ptr+1
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;CAN.c: 265: for( i=0; i<(psMsgObject->ui32MsgLen); i++ )
  5040  00088C  0E00               	movlw	0
  5041  00088E  6E14               	movwf	CANMessageGet@i+1,c
  5042  000890  0E00               	movlw	0
  5043  000892  6E13               	movwf	CANMessageGet@i,c
  5044  000894  D011               	goto	l3055
  5045  000896                     l3047:
  5046  000896  FFFF               	dw	65535	; assembler added errata NOP
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;CAN.c: 266: {
  5050                           ;CAN.c: 268: *(data_ptr) = *(rxBuffer_ptr);
  5051  000898  C015  FFD9         	movff	CANMessageGet@rxBuffer_ptr,fsr2l
  5052  00089C  C016  FFDA         	movff	CANMessageGet@rxBuffer_ptr+1,fsr2h
  5053  0008A0  C017  FFE1         	movff	CANMessageGet@data_ptr,fsr1l
  5054  0008A4  C018  FFE2         	movff	CANMessageGet@data_ptr+1,fsr1h
  5055  0008A8  CFDF FFE7          	movff	indf2,indf1
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;CAN.c: 269: data_ptr++;
  5059  0008AC  4A17               	infsnz	CANMessageGet@data_ptr,f,c
  5060  0008AE  2A18               	incf	CANMessageGet@data_ptr+1,f,c
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;CAN.c: 270: rxBuffer_ptr++;
  5064  0008B0  4A15               	infsnz	CANMessageGet@rxBuffer_ptr,f,c
  5065  0008B2  2A16               	incf	CANMessageGet@rxBuffer_ptr+1,f,c
  5066                           
  5067                           ; BSR set to: 0
  5068  0008B4  4A13               	infsnz	CANMessageGet@i,f,c
  5069  0008B6  2A14               	incf	CANMessageGet@i+1,f,c
  5070  0008B8                     l3055:
  5071  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  5072                           
  5073                           ; BSR set to: 0
  5074  0008BA  EE20 F00C          	lfsr	2,12
  5075  0008BE  5010               	movf	CANMessageGet@psMsgObject,w,c
  5076  0008C0  26D9               	addwf	fsr2l,f,c
  5077  0008C2  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5078  0008C4  22DA               	addwfc	fsr2h,f,c
  5079  0008C6  C013  F064         	movff	CANMessageGet@i,??_CANMessageGet+4
  5080  0008CA  C014  F065         	movff	CANMessageGet@i+1,??_CANMessageGet+5
  5081  0008CE  0E00               	movlw	0
  5082  0008D0  0100               	movlb	0	; () banked
  5083  0008D2  BF65               	btfsc	(??_CANMessageGet+5)& (0+255),7,b
  5084  0008D4  0EFF               	movlw	255
  5085  0008D6  6F66               	movwf	(??_CANMessageGet+6)& (0+255),b
  5086  0008D8  6F67               	movwf	(??_CANMessageGet+7)& (0+255),b
  5087  0008DA  50DE               	movf	postinc2,w,c
  5088  0008DC  0100               	movlb	0	; () banked
  5089  0008DE  5D64               	subwf	(??_CANMessageGet+4)& (0+255),w,b
  5090  0008E0  50DE               	movf	postinc2,w,c
  5091  0008E2  0100               	movlb	0	; () banked
  5092  0008E4  5965               	subwfb	(??_CANMessageGet+5)& (0+255),w,b
  5093  0008E6  50DE               	movf	postinc2,w,c
  5094  0008E8  0100               	movlb	0	; () banked
  5095  0008EA  5966               	subwfb	(??_CANMessageGet+6)& (0+255),w,b
  5096  0008EC  50DE               	movf	postinc2,w,c
  5097  0008EE  0100               	movlb	0	; () banked
  5098  0008F0  5967               	subwfb	(??_CANMessageGet+7)& (0+255),w,b
  5099  0008F2  A0D8               	btfss	status,0,c
  5100  0008F4  D7D0               	goto	l3047
  5101  0008F6                     l3057:
  5102  0008F6  FFFF               	dw	65535	; assembler added errata NOP
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;CAN.c: 271: }
  5106                           ;CAN.c: 272: }
  5107                           ;CAN.c: 274: RXB0CON = (RXB0CON & ~(0x80)) | (0x80 & 0);
  5108  0008F8  5060               	movf	3936,w,c	;volatile
  5109  0008FA  0B7F               	andlw	127
  5110  0008FC  6E60               	movwf	3936,c	;volatile
  5111  0008FE  D170               	goto	l3091
  5112  000900                     l3061:
  5113  000900  FFFF               	dw	65535	; assembler added errata NOP
  5114                           
  5115                           ;CAN.c: 280: else if ( RXB1CONbits.RXFUL == 1 )
  5116  000902  EE2F F050          	lfsr	2,3920
  5117  000906  010F               	movlb	15	; () banked
  5118  000908  AEDF               	btfss	indf2,7,c
  5119  00090A  D16D               	goto	l3093
  5120                           
  5121                           ; BSR set to: 15
  5122                           ;CAN.c: 283: {
  5123                           ;CAN.c: 286: if( RXB1SIDLbits.EXID == 0x00 )
  5124  00090C  EE2F F052          	lfsr	2,3922
  5125  000910  010F               	movlb	15	; () banked
  5126  000912  B6DF               	btfsc	indf2,3,c
  5127  000914  D03E               	goto	l3067
  5128                           
  5129                           ; BSR set to: 15
  5130                           ;CAN.c: 287: {
  5131                           ;CAN.c: 288: psMsgObject->ui32MsgID = ( RXB1SIDH<<3 ) | ( RXB1SIDL>>5 );
  5132  000916  CF52 F060          	movff	3922,??_CANMessageGet
  5133  00091A  0E05               	movlw	5
  5134  00091C  0100               	movlb	0	; () banked
  5135  00091E  6F61               	movwf	(??_CANMessageGet+1)& (0+255),b
  5136  000920                     u2915:
  5137  000920  FFFF               	dw	65535	; assembler added errata NOP
  5138  000922  0100               	movlb	0	; () banked
  5139  000924  90D8               	bcf	status,0,c
  5140  000926  3360               	rrcf	??_CANMessageGet& (0+255),f,b
  5141  000928  0100               	movlb	0	; () banked
  5142  00092A  2F61               	decfsz	(??_CANMessageGet+1)& (0+255),f,b
  5143  00092C  D7F9               	goto	u2915
  5144  00092E  0100               	movlb	0	; () banked
  5145  000930  5160               	movf	??_CANMessageGet& (0+255),w,b
  5146  000932  CF51 F062          	movff	3921,??_CANMessageGet+2
  5147  000936  C062  F063         	movff	??_CANMessageGet+2,??_CANMessageGet+3
  5148  00093A  0100               	movlb	0	; () banked
  5149  00093C  6B64               	clrf	(??_CANMessageGet+4)& (0+255),b
  5150  00093E  0100               	movlb	0	; () banked
  5151  000940  90D8               	bcf	status,0,c
  5152  000942  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  5153  000944  3764               	rlcf	(??_CANMessageGet+4)& (0+255),f,b
  5154  000946  0100               	movlb	0	; () banked
  5155  000948  90D8               	bcf	status,0,c
  5156  00094A  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  5157  00094C  3764               	rlcf	(??_CANMessageGet+4)& (0+255),f,b
  5158  00094E  0100               	movlb	0	; () banked
  5159  000950  90D8               	bcf	status,0,c
  5160  000952  3763               	rlcf	(??_CANMessageGet+3)& (0+255),f,b
  5161  000954  3764               	rlcf	(??_CANMessageGet+4)& (0+255),f,b
  5162  000956  0100               	movlb	0	; () banked
  5163  000958  1163               	iorwf	(??_CANMessageGet+3)& (0+255),w,b
  5164  00095A  0100               	movlb	0	; () banked
  5165  00095C  6F65               	movwf	(??_CANMessageGet+5)& (0+255),b
  5166  00095E  0100               	movlb	0	; () banked
  5167  000960  5164               	movf	(??_CANMessageGet+4)& (0+255),w,b
  5168  000962  0100               	movlb	0	; () banked
  5169  000964  6F66               	movwf	(??_CANMessageGet+6)& (0+255),b
  5170  000966  0100               	movlb	0	; () banked
  5171  000968  6B67               	clrf	(??_CANMessageGet+7)& (0+255),b
  5172  00096A  0100               	movlb	0	; () banked
  5173  00096C  BF66               	btfsc	(??_CANMessageGet+6)& (0+255),7,b
  5174  00096E  0767               	decf	(??_CANMessageGet+7)& (0+255),f,b
  5175  000970  0100               	movlb	0	; () banked
  5176  000972  5167               	movf	(??_CANMessageGet+7)& (0+255),w,b
  5177  000974  0100               	movlb	0	; () banked
  5178  000976  6F68               	movwf	(??_CANMessageGet+8)& (0+255),b
  5179  000978  C010  FFD9         	movff	CANMessageGet@psMsgObject,fsr2l
  5180  00097C  C011  FFDA         	movff	CANMessageGet@psMsgObject+1,fsr2h
  5181  000980  C065  FFDE         	movff	??_CANMessageGet+5,postinc2
  5182  000984  C066  FFDE         	movff	??_CANMessageGet+6,postinc2
  5183  000988  C067  FFDE         	movff	??_CANMessageGet+7,postinc2
  5184  00098C  C068  FFDE         	movff	??_CANMessageGet+8,postinc2
  5185                           
  5186                           ;CAN.c: 289: }
  5187  000990  D0B2               	goto	l399
  5188  000992                     l3067:
  5189  000992  FFFF               	dw	65535	; assembler added errata NOP
  5190                           
  5191                           ;CAN.c: 292: else
  5192                           ;CAN.c: 293: {
  5193                           ;CAN.c: 294: psMsgObject->ui32MsgID = ( ((uint32_t)RXB1SIDH<<21) | (((uint32_t)RXB1SIDL 
      +                          & 0xE0)<<18) | (((uint32_t)RXB1SIDL & 0x03)<<16) | ((uint32_t)RXB1EIDH<<8) | (uint32_t)(
      +                          RXB1EIDL) ) ;
  5194  000994  CF53 F060          	movff	3923,??_CANMessageGet
  5195  000998  C060  F061         	movff	??_CANMessageGet,??_CANMessageGet+1
  5196  00099C  0100               	movlb	0	; () banked
  5197  00099E  6B62               	clrf	(??_CANMessageGet+2)& (0+255),b
  5198  0009A0  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  5199  0009A2  6B64               	clrf	(??_CANMessageGet+4)& (0+255),b
  5200  0009A4  C063  F064         	movff	??_CANMessageGet+3,??_CANMessageGet+4
  5201  0009A8  C062  F063         	movff	??_CANMessageGet+2,??_CANMessageGet+3
  5202  0009AC  C061  F062         	movff	??_CANMessageGet+1,??_CANMessageGet+2
  5203  0009B0  0100               	movlb	0	; () banked
  5204  0009B2  6B61               	clrf	(??_CANMessageGet+1)& (0+255),b
  5205  0009B4  CF52 F065          	movff	3922,??_CANMessageGet+5
  5206  0009B8  0E03               	movlw	3
  5207  0009BA  0100               	movlb	0	; () banked
  5208  0009BC  1765               	andwf	(??_CANMessageGet+5)& (0+255),f,b
  5209  0009BE  C065  F066         	movff	??_CANMessageGet+5,??_CANMessageGet+6
  5210  0009C2  0100               	movlb	0	; () banked
  5211  0009C4  6B67               	clrf	(??_CANMessageGet+7)& (0+255),b
  5212  0009C6  6B68               	clrf	(??_CANMessageGet+8)& (0+255),b
  5213  0009C8  6B69               	clrf	(??_CANMessageGet+9)& (0+255),b
  5214  0009CA  C067  F069         	movff	??_CANMessageGet+7,??_CANMessageGet+9
  5215  0009CE  C066  F068         	movff	??_CANMessageGet+6,??_CANMessageGet+8
  5216  0009D2  0100               	movlb	0	; () banked
  5217  0009D4  6B67               	clrf	(??_CANMessageGet+7)& (0+255),b
  5218  0009D6  6B66               	clrf	(??_CANMessageGet+6)& (0+255),b
  5219  0009D8  CF52 F06A          	movff	3922,??_CANMessageGet+10
  5220  0009DC  0EE0               	movlw	224
  5221  0009DE  0100               	movlb	0	; () banked
  5222  0009E0  176A               	andwf	(??_CANMessageGet+10)& (0+255),f,b
  5223  0009E2  C06A  F06B         	movff	??_CANMessageGet+10,??_CANMessageGet+11
  5224  0009E6  0100               	movlb	0	; () banked
  5225  0009E8  6B6C               	clrf	(??_CANMessageGet+12)& (0+255),b
  5226  0009EA  6B6D               	clrf	(??_CANMessageGet+13)& (0+255),b
  5227  0009EC  6B6E               	clrf	(??_CANMessageGet+14)& (0+255),b
  5228  0009EE  0E12               	movlw	18
  5229  0009F0                     u2925:
  5230  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  5231  0009F2  90D8               	bcf	status,0,c
  5232  0009F4  0100               	movlb	0	; () banked
  5233  0009F6  376B               	rlcf	(??_CANMessageGet+11)& (0+255),f,b
  5234  0009F8  376C               	rlcf	(??_CANMessageGet+12)& (0+255),f,b
  5235  0009FA  376D               	rlcf	(??_CANMessageGet+13)& (0+255),f,b
  5236  0009FC  376E               	rlcf	(??_CANMessageGet+14)& (0+255),f,b
  5237  0009FE  2EE8               	decfsz	wreg,f,c
  5238  000A00  D7F7               	goto	u2925
  5239  000A02  CF51 F06F          	movff	3921,??_CANMessageGet+15
  5240  000A06  C06F  F070         	movff	??_CANMessageGet+15,??_CANMessageGet+16
  5241  000A0A  0100               	movlb	0	; () banked
  5242  000A0C  6B71               	clrf	(??_CANMessageGet+17)& (0+255),b
  5243  000A0E  6B72               	clrf	(??_CANMessageGet+18)& (0+255),b
  5244  000A10  6B73               	clrf	(??_CANMessageGet+19)& (0+255),b
  5245  000A12  0E15               	movlw	21
  5246  000A14                     u2935:
  5247  000A14  FFFF               	dw	65535	; assembler added errata NOP
  5248  000A16  90D8               	bcf	status,0,c
  5249  000A18  0100               	movlb	0	; () banked
  5250  000A1A  3770               	rlcf	(??_CANMessageGet+16)& (0+255),f,b
  5251  000A1C  3771               	rlcf	(??_CANMessageGet+17)& (0+255),f,b
  5252  000A1E  3772               	rlcf	(??_CANMessageGet+18)& (0+255),f,b
  5253  000A20  3773               	rlcf	(??_CANMessageGet+19)& (0+255),f,b
  5254  000A22  2EE8               	decfsz	wreg,f,c
  5255  000A24  D7F7               	goto	u2935
  5256  000A26  0100               	movlb	0	; () banked
  5257  000A28  516B               	movf	(??_CANMessageGet+11)& (0+255),w,b
  5258  000A2A  0100               	movlb	0	; () banked
  5259  000A2C  1170               	iorwf	(??_CANMessageGet+16)& (0+255),w,b
  5260  000A2E  0100               	movlb	0	; () banked
  5261  000A30  6F74               	movwf	(??_CANMessageGet+20)& (0+255),b
  5262  000A32  0100               	movlb	0	; () banked
  5263  000A34  516C               	movf	(??_CANMessageGet+12)& (0+255),w,b
  5264  000A36  0100               	movlb	0	; () banked
  5265  000A38  1171               	iorwf	(??_CANMessageGet+17)& (0+255),w,b
  5266  000A3A  0100               	movlb	0	; () banked
  5267  000A3C  6F75               	movwf	(??_CANMessageGet+21)& (0+255),b
  5268  000A3E  0100               	movlb	0	; () banked
  5269  000A40  516D               	movf	(??_CANMessageGet+13)& (0+255),w,b
  5270  000A42  0100               	movlb	0	; () banked
  5271  000A44  1172               	iorwf	(??_CANMessageGet+18)& (0+255),w,b
  5272  000A46  0100               	movlb	0	; () banked
  5273  000A48  6F76               	movwf	(??_CANMessageGet+22)& (0+255),b
  5274  000A4A  0100               	movlb	0	; () banked
  5275  000A4C  516E               	movf	(??_CANMessageGet+14)& (0+255),w,b
  5276  000A4E  0100               	movlb	0	; () banked
  5277  000A50  1173               	iorwf	(??_CANMessageGet+19)& (0+255),w,b
  5278  000A52  0100               	movlb	0	; () banked
  5279  000A54  6F77               	movwf	(??_CANMessageGet+23)& (0+255),b
  5280  000A56  0100               	movlb	0	; () banked
  5281  000A58  5166               	movf	(??_CANMessageGet+6)& (0+255),w,b
  5282  000A5A  0100               	movlb	0	; () banked
  5283  000A5C  1174               	iorwf	(??_CANMessageGet+20)& (0+255),w,b
  5284  000A5E  0100               	movlb	0	; () banked
  5285  000A60  6F78               	movwf	(??_CANMessageGet+24)& (0+255),b
  5286  000A62  0100               	movlb	0	; () banked
  5287  000A64  5167               	movf	(??_CANMessageGet+7)& (0+255),w,b
  5288  000A66  0100               	movlb	0	; () banked
  5289  000A68  1175               	iorwf	(??_CANMessageGet+21)& (0+255),w,b
  5290  000A6A  0100               	movlb	0	; () banked
  5291  000A6C  6F79               	movwf	(??_CANMessageGet+25)& (0+255),b
  5292  000A6E  0100               	movlb	0	; () banked
  5293  000A70  5168               	movf	(??_CANMessageGet+8)& (0+255),w,b
  5294  000A72  0100               	movlb	0	; () banked
  5295  000A74  1176               	iorwf	(??_CANMessageGet+22)& (0+255),w,b
  5296  000A76  0100               	movlb	0	; () banked
  5297  000A78  6F7A               	movwf	(??_CANMessageGet+26)& (0+255),b
  5298  000A7A  0100               	movlb	0	; () banked
  5299  000A7C  5169               	movf	(??_CANMessageGet+9)& (0+255),w,b
  5300  000A7E  0100               	movlb	0	; () banked
  5301  000A80  1177               	iorwf	(??_CANMessageGet+23)& (0+255),w,b
  5302  000A82  0100               	movlb	0	; () banked
  5303  000A84  6F7B               	movwf	(??_CANMessageGet+27)& (0+255),b
  5304  000A86  0100               	movlb	0	; () banked
  5305  000A88  5161               	movf	(??_CANMessageGet+1)& (0+255),w,b
  5306  000A8A  0100               	movlb	0	; () banked
  5307  000A8C  1178               	iorwf	(??_CANMessageGet+24)& (0+255),w,b
  5308  000A8E  0100               	movlb	0	; () banked
  5309  000A90  6F7C               	movwf	(??_CANMessageGet+28)& (0+255),b
  5310  000A92  0100               	movlb	0	; () banked
  5311  000A94  5162               	movf	(??_CANMessageGet+2)& (0+255),w,b
  5312  000A96  0100               	movlb	0	; () banked
  5313  000A98  1179               	iorwf	(??_CANMessageGet+25)& (0+255),w,b
  5314  000A9A  0100               	movlb	0	; () banked
  5315  000A9C  6F7D               	movwf	(??_CANMessageGet+29)& (0+255),b
  5316  000A9E  0100               	movlb	0	; () banked
  5317  000AA0  5163               	movf	(??_CANMessageGet+3)& (0+255),w,b
  5318  000AA2  0100               	movlb	0	; () banked
  5319  000AA4  117A               	iorwf	(??_CANMessageGet+26)& (0+255),w,b
  5320  000AA6  0100               	movlb	0	; () banked
  5321  000AA8  6F7E               	movwf	(??_CANMessageGet+30)& (0+255),b
  5322  000AAA  0100               	movlb	0	; () banked
  5323  000AAC  5164               	movf	(??_CANMessageGet+4)& (0+255),w,b
  5324  000AAE  0100               	movlb	0	; () banked
  5325  000AB0  117B               	iorwf	(??_CANMessageGet+27)& (0+255),w,b
  5326  000AB2  0100               	movlb	0	; () banked
  5327  000AB4  6F7F               	movwf	(??_CANMessageGet+31)& (0+255),b
  5328  000AB6  CF54 F080          	movff	3924,??_CANMessageGet+32
  5329  000ABA  0100               	movlb	0	; () banked
  5330  000ABC  5180               	movf	(??_CANMessageGet+32)& (0+255),w,b
  5331  000ABE  0100               	movlb	0	; () banked
  5332  000AC0  117C               	iorwf	(??_CANMessageGet+28)& (0+255),w,b
  5333  000AC2  0100               	movlb	0	; () banked
  5334  000AC4  6F81               	movwf	(??_CANMessageGet+33)& (0+255),b
  5335  000AC6  0100               	movlb	0	; () banked
  5336  000AC8  517D               	movf	(??_CANMessageGet+29)& (0+255),w,b
  5337  000ACA  0100               	movlb	0	; () banked
  5338  000ACC  6F82               	movwf	(??_CANMessageGet+34)& (0+255),b
  5339  000ACE  0100               	movlb	0	; () banked
  5340  000AD0  517E               	movf	(??_CANMessageGet+30)& (0+255),w,b
  5341  000AD2  0100               	movlb	0	; () banked
  5342  000AD4  6F83               	movwf	(??_CANMessageGet+35)& (0+255),b
  5343  000AD6  0100               	movlb	0	; () banked
  5344  000AD8  517F               	movf	(??_CANMessageGet+31)& (0+255),w,b
  5345  000ADA  0100               	movlb	0	; () banked
  5346  000ADC  6F84               	movwf	(??_CANMessageGet+36)& (0+255),b
  5347  000ADE  C010  FFD9         	movff	CANMessageGet@psMsgObject,fsr2l
  5348  000AE2  C011  FFDA         	movff	CANMessageGet@psMsgObject+1,fsr2h
  5349  000AE6  C081  FFDE         	movff	??_CANMessageGet+33,postinc2
  5350  000AEA  C082  FFDE         	movff	??_CANMessageGet+34,postinc2
  5351  000AEE  C083  FFDE         	movff	??_CANMessageGet+35,postinc2
  5352  000AF2  C084  FFDE         	movff	??_CANMessageGet+36,postinc2
  5353  000AF6                     l399:
  5354  000AF6  FFFF               	dw	65535	; assembler added errata NOP
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;CAN.c: 295: }
  5358                           ;CAN.c: 297: psMsgObject->ui32MsgLen = RXB1DLC;
  5359  000AF8  CF55 F060          	movff	3925,??_CANMessageGet
  5360  000AFC  C060  F061         	movff	??_CANMessageGet,??_CANMessageGet+1
  5361  000B00  0100               	movlb	0	; () banked
  5362  000B02  6B62               	clrf	(??_CANMessageGet+2)& (0+255),b
  5363  000B04  6B63               	clrf	(??_CANMessageGet+3)& (0+255),b
  5364  000B06  6B64               	clrf	(??_CANMessageGet+4)& (0+255),b
  5365  000B08  EE20 F00C          	lfsr	2,12
  5366  000B0C  5010               	movf	CANMessageGet@psMsgObject,w,c
  5367  000B0E  26D9               	addwf	fsr2l,f,c
  5368  000B10  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5369  000B12  22DA               	addwfc	fsr2h,f,c
  5370  000B14  C061  FFDE         	movff	??_CANMessageGet+1,postinc2
  5371  000B18  C062  FFDE         	movff	??_CANMessageGet+2,postinc2
  5372  000B1C  C063  FFDE         	movff	??_CANMessageGet+3,postinc2
  5373  000B20  C064  FFDE         	movff	??_CANMessageGet+4,postinc2
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;CAN.c: 300: if( RXB1DLC & 1<<6 )
  5377  000B24  EE2F F055          	lfsr	2,3925
  5378  000B28  010F               	movlb	15	; () banked
  5379  000B2A  ACDF               	btfss	indf2,6,c
  5380  000B2C  D00D               	goto	l3073
  5381                           
  5382                           ; BSR set to: 15
  5383                           ;CAN.c: 301: {
  5384                           ;CAN.c: 302: psMsgObject->ui32Flags |= 1<<6;
  5385  000B2E  EE20 F008          	lfsr	2,8
  5386  000B32  5010               	movf	CANMessageGet@psMsgObject,w,c
  5387  000B34  26D9               	addwf	fsr2l,f,c
  5388  000B36  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5389  000B38  22DA               	addwfc	fsr2h,f,c
  5390  000B3A  0E40               	movlw	64
  5391  000B3C  12DE               	iorwf	postinc2,f,c
  5392  000B3E  0E00               	movlw	0
  5393  000B40  12DE               	iorwf	postinc2,f,c
  5394  000B42  12DE               	iorwf	postinc2,f,c
  5395  000B44  12DE               	iorwf	postinc2,f,c
  5396                           
  5397                           ;CAN.c: 303: }
  5398  000B46  D044               	goto	l3089
  5399  000B48                     l3073:
  5400  000B48  FFFF               	dw	65535	; assembler added errata NOP
  5401                           
  5402                           ; BSR set to: 15
  5403                           ;CAN.c: 305: else
  5404                           ;CAN.c: 306: {
  5405                           ;CAN.c: 308: int i;
  5406                           ;CAN.c: 309: volatile uint8_t * rxBuffer_ptr = &RXB1D0;
  5407  000B4A  0E56               	movlw	86
  5408  000B4C  6E1B               	movwf	CANMessageGet@rxBuffer_ptr_976,c
  5409  000B4E  0E0F               	movlw	15
  5410  000B50  6E1C               	movwf	CANMessageGet@rxBuffer_ptr_976+1,c
  5411                           
  5412                           ; BSR set to: 15
  5413                           ;CAN.c: 310: volatile uint8_t * data_ptr = psMsgObject->pui8MsgData;
  5414  000B52  EE20 F010          	lfsr	2,16
  5415  000B56  5010               	movf	CANMessageGet@psMsgObject,w,c
  5416  000B58  26D9               	addwf	fsr2l,f,c
  5417  000B5A  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5418  000B5C  22DA               	addwfc	fsr2h,f,c
  5419  000B5E  CFDE F01D          	movff	postinc2,CANMessageGet@data_ptr_977
  5420  000B62  CFDD F01E          	movff	postdec2,CANMessageGet@data_ptr_977+1
  5421                           
  5422                           ; BSR set to: 15
  5423                           ;CAN.c: 311: for(i=0; i< ( psMsgObject->ui32MsgLen ); i++ )
  5424  000B66  0E00               	movlw	0
  5425  000B68  6E1A               	movwf	CANMessageGet@i_975+1,c
  5426  000B6A  0E00               	movlw	0
  5427  000B6C  6E19               	movwf	CANMessageGet@i_975,c
  5428  000B6E  D011               	goto	l3087
  5429  000B70                     l3079:
  5430  000B70  FFFF               	dw	65535	; assembler added errata NOP
  5431                           
  5432                           ;CAN.c: 312: {
  5433                           ;CAN.c: 314: *(data_ptr) = *(rxBuffer_ptr);
  5434  000B72  C01B  FFD9         	movff	CANMessageGet@rxBuffer_ptr_976,fsr2l
  5435  000B76  C01C  FFDA         	movff	CANMessageGet@rxBuffer_ptr_976+1,fsr2h
  5436  000B7A  C01D  FFE1         	movff	CANMessageGet@data_ptr_977,fsr1l
  5437  000B7E  C01E  FFE2         	movff	CANMessageGet@data_ptr_977+1,fsr1h
  5438  000B82  CFDF FFE7          	movff	indf2,indf1
  5439                           
  5440                           ;CAN.c: 315: data_ptr ++;
  5441  000B86  4A1D               	infsnz	CANMessageGet@data_ptr_977,f,c
  5442  000B88  2A1E               	incf	CANMessageGet@data_ptr_977+1,f,c
  5443                           
  5444                           ;CAN.c: 316: rxBuffer_ptr ++;
  5445  000B8A  4A1B               	infsnz	CANMessageGet@rxBuffer_ptr_976,f,c
  5446  000B8C  2A1C               	incf	CANMessageGet@rxBuffer_ptr_976+1,f,c
  5447  000B8E  4A19               	infsnz	CANMessageGet@i_975,f,c
  5448  000B90  2A1A               	incf	CANMessageGet@i_975+1,f,c
  5449  000B92                     l3087:
  5450  000B92  FFFF               	dw	65535	; assembler added errata NOP
  5451  000B94  EE20 F00C          	lfsr	2,12
  5452  000B98  5010               	movf	CANMessageGet@psMsgObject,w,c
  5453  000B9A  26D9               	addwf	fsr2l,f,c
  5454  000B9C  5011               	movf	CANMessageGet@psMsgObject+1,w,c
  5455  000B9E  22DA               	addwfc	fsr2h,f,c
  5456  000BA0  C019  F064         	movff	CANMessageGet@i_975,??_CANMessageGet+4
  5457  000BA4  C01A  F065         	movff	CANMessageGet@i_975+1,??_CANMessageGet+5
  5458  000BA8  0E00               	movlw	0
  5459  000BAA  0100               	movlb	0	; () banked
  5460  000BAC  BF65               	btfsc	(??_CANMessageGet+5)& (0+255),7,b
  5461  000BAE  0EFF               	movlw	255
  5462  000BB0  6F66               	movwf	(??_CANMessageGet+6)& (0+255),b
  5463  000BB2  6F67               	movwf	(??_CANMessageGet+7)& (0+255),b
  5464  000BB4  50DE               	movf	postinc2,w,c
  5465  000BB6  0100               	movlb	0	; () banked
  5466  000BB8  5D64               	subwf	(??_CANMessageGet+4)& (0+255),w,b
  5467  000BBA  50DE               	movf	postinc2,w,c
  5468  000BBC  0100               	movlb	0	; () banked
  5469  000BBE  5965               	subwfb	(??_CANMessageGet+5)& (0+255),w,b
  5470  000BC0  50DE               	movf	postinc2,w,c
  5471  000BC2  0100               	movlb	0	; () banked
  5472  000BC4  5966               	subwfb	(??_CANMessageGet+6)& (0+255),w,b
  5473  000BC6  50DE               	movf	postinc2,w,c
  5474  000BC8  0100               	movlb	0	; () banked
  5475  000BCA  5967               	subwfb	(??_CANMessageGet+7)& (0+255),w,b
  5476  000BCC  A0D8               	btfss	status,0,c
  5477  000BCE  D7D0               	goto	l3079
  5478  000BD0                     l3089:
  5479  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  5480                           
  5481                           ;CAN.c: 317: }
  5482                           ;CAN.c: 318: }
  5483                           ;CAN.c: 320: RXB1CON = (RXB1CON & ~(0x80)) | (0x80 & 0);
  5484  000BD2  CF50 F060          	movff	3920,??_CANMessageGet
  5485  000BD6  0E7F               	movlw	127
  5486  000BD8  0100               	movlb	0	; () banked
  5487  000BDA  1760               	andwf	??_CANMessageGet& (0+255),f,b
  5488  000BDC  C060  FF50         	movff	??_CANMessageGet,3920
  5489  000BE0                     l3091:
  5490  000BE0  FFFF               	dw	65535	; assembler added errata NOP
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;CAN.c: 321: RXMsgFlag = 0x01;
  5494  000BE2  0E01               	movlw	1
  5495  000BE4  6E1F               	movwf	CANMessageGet@RXMsgFlag,c
  5496  000BE6                     l3093:
  5497  000BE6  FFFF               	dw	65535	; assembler added errata NOP
  5498                           
  5499                           ;CAN.c: 322: }
  5500                           ;CAN.c: 328: if (RXMsgFlag == 0x01)
  5501  000BE8  041F               	decf	CANMessageGet@RXMsgFlag,w,c
  5502  000BEA  A4D8               	btfss	status,2,c
  5503  000BEC  D00B               	goto	l408
  5504                           
  5505                           ;CAN.c: 330: {
  5506                           ;CAN.c: 331: RXMsgFlag = 0x00;
  5507  000BEE  0E00               	movlw	0
  5508  000BF0  6E1F               	movwf	CANMessageGet@RXMsgFlag,c
  5509                           
  5510                           ;CAN.c: 333: if(bClrPendingInt)
  5511  000BF2  5012               	movf	CANMessageGet@bClrPendingInt,w,c
  5512  000BF4  B4D8               	btfsc	status,2,c
  5513  000BF6  D006               	goto	l408
  5514                           
  5515                           ;CAN.c: 334: {
  5516                           ;CAN.c: 335: PIR3 = (PIR3 & ~(1<<1)) | (1<<1 & 0);
  5517  000BF8  50A4               	movf	4004,w,c	;volatile
  5518  000BFA  0BFD               	andlw	253
  5519  000BFC  6EA4               	movwf	4004,c	;volatile
  5520                           
  5521                           ;CAN.c: 336: PIR3 = (PIR3 & ~(1<<0)) | (1<<0 & 0);
  5522  000BFE  50A4               	movf	4004,w,c	;volatile
  5523  000C00  0BFE               	andlw	254
  5524  000C02  6EA4               	movwf	4004,c	;volatile
  5525  000C04                     l408:
  5526  000C04  FFFF               	dw	65535	; assembler added errata NOP
  5527  000C06  0012               	return		;funcret
  5528  000C08  FFFF               	dw	65535	; errata NOP
  5529  000C0A                     __end_of_CANMessageGet:
  5530                           	opt stack 0
  5531                           tblptru	equ	0xFF8
  5532                           tblptrh	equ	0xFF7
  5533                           tblptrl	equ	0xFF6
  5534                           tablat	equ	0xFF5
  5535                           intcon	equ	0xFF2
  5536                           indf0	equ	0xFEF
  5537                           postinc0	equ	0xFEE
  5538                           fsr0h	equ	0xFEA
  5539                           fsr0l	equ	0xFE9
  5540                           wreg	equ	0xFE8
  5541                           indf1	equ	0xFE7
  5542                           fsr1h	equ	0xFE2
  5543                           fsr1l	equ	0xFE1
  5544                           indf2	equ	0xFDF
  5545                           postinc2	equ	0xFDE
  5546                           postdec2	equ	0xFDD
  5547                           plusw2	equ	0xFDB
  5548                           fsr2h	equ	0xFDA
  5549                           fsr2l	equ	0xFD9
  5550                           status	equ	0xFD8
  5551                           
  5552 ;; *************** function _AvgMeasure *****************
  5553 ;; Defined at:
  5554 ;;		line 34 in file "measure.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;		None
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  average_dist    2    7[BANK0 ] unsigned int 
  5559 ;;  counter         1    6[BANK0 ] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  2   50[COMRAM] unsigned int 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2, status,0, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5569 ;;      Params:         2       0       0       0       0       0       0
  5570 ;;      Locals:         0       3       0       0       0       0       0
  5571 ;;      Temps:          1       0       0       0       0       0       0
  5572 ;;      Totals:         3       3       0       0       0       0       0
  5573 ;;Total ram usage:        6 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; Hardware stack levels required when called:    4
  5576 ;; This function calls:
  5577 ;;		_Hcsr04_Trigger
  5578 ;;		___ftdiv
  5579 ;;		___fttol
  5580 ;;		___lwdiv
  5581 ;;		___lwtoft
  5582 ;; This function is called by:
  5583 ;;		_main
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text24
  5588  001924                     __ptext24:
  5589                           	opt stack 0
  5590  001924                     _AvgMeasure:
  5591                           	opt stack 0
  5592  001924  FFFF               	dw	65535	; assembler added errata NOP
  5593                           
  5594                           ;measure.c: 36: uint16_t average_dist = 0;
  5595                           
  5596                           ;incstack = 0
  5597  001926  0E00               	movlw	0
  5598  001928  0100               	movlb	0	; () banked
  5599  00192A  6F68               	movwf	(AvgMeasure@average_dist+1)& (0+255),b
  5600  00192C  0E00               	movlw	0
  5601  00192E  6F67               	movwf	AvgMeasure@average_dist& (0+255),b
  5602                           
  5603                           ;measure.c: 37: uint8_t counter = 0;
  5604  001930  0E00               	movlw	0
  5605  001932  0100               	movlb	0	; () banked
  5606  001934  6F66               	movwf	AvgMeasure@counter& (0+255),b
  5607                           
  5608                           ;measure.c: 39: while(counter<10)
  5609  001936  D03A               	goto	l3013
  5610  001938                     l2999:
  5611  001938  FFFF               	dw	65535	; assembler added errata NOP
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;measure.c: 40: {
  5615                           ;measure.c: 43: Hcsr04_Trigger();
  5616  00193A  EC29  F011         	call	_Hcsr04_Trigger	;wreg free
  5617                           
  5618                           ;measure.c: 46: _delay((unsigned long)((20)*(32000000/4000.0)));
  5619  00193E  0E9C               	movlw	156
  5620  001940  6E35               	movwf	??_AvgMeasure& (0+255),c
  5621  001942  0EF1               	movlw	241
  5622  001944                     u3147:
  5623  001944  FFFF               	dw	65535	; errata NOP
  5624  001946  2EE8               	decfsz	wreg,f,c
  5625  001948  D7FD               	bra	u3147
  5626  00194A  2E35               	decfsz	??_AvgMeasure& (0+255),f,c
  5627  00194C  D7FB               	bra	u3147
  5628  00194E  D000               	nop2	
  5629                           
  5630                           ;measure.c: 48: GIE= 0 ;
  5631  001950  9EF2               	bcf	intcon,7,c	;volatile
  5632                           
  5633                           ;measure.c: 49: distance = TMR1;
  5634  001952  CFCE F048          	movff	4046,_distance	;volatile
  5635  001956  CFCF F049          	movff	4047,_distance+1	;volatile
  5636                           
  5637                           ;measure.c: 50: GIE = 1;
  5638  00195A  8EF2               	bsf	intcon,7,c	;volatile
  5639                           
  5640                           ;measure.c: 52: distance = distance/58.82;
  5641  00195C  0E48               	movlw	72
  5642  00195E  6E1E               	movwf	___ftdiv@f2,c
  5643  001960  0E6B               	movlw	107
  5644  001962  6E1F               	movwf	___ftdiv@f2+1,c
  5645  001964  0E42               	movlw	66
  5646  001966  6E20               	movwf	___ftdiv@f2+2,c
  5647  001968  C048  F018         	movff	_distance,___lwtoft@c
  5648  00196C  C049  F019         	movff	_distance+1,___lwtoft@c+1
  5649  001970  ECF6  F010         	call	___lwtoft	;wreg free
  5650  001974  C018  F01B         	movff	?___lwtoft,___ftdiv@f1
  5651  001978  C019  F01C         	movff	?___lwtoft+1,___ftdiv@f1+1
  5652  00197C  C01A  F01D         	movff	?___lwtoft+2,___ftdiv@f1+2
  5653  001980  ECBD  F00B         	call	___ftdiv	;wreg free
  5654  001984  C01B  F02A         	movff	?___ftdiv,___fttol@f1
  5655  001988  C01C  F02B         	movff	?___ftdiv+1,___fttol@f1+1
  5656  00198C  C01D  F02C         	movff	?___ftdiv+2,___fttol@f1+2
  5657  001990  EC35  F00B         	call	___fttol	;wreg free
  5658  001994  C02A  F048         	movff	?___fttol,_distance
  5659  001998  C02B  F049         	movff	?___fttol+1,_distance+1
  5660                           
  5661                           ;measure.c: 53: average_dist += distance;
  5662  00199C  5048               	movf	_distance,w,c
  5663  00199E  0100               	movlb	0	; () banked
  5664  0019A0  2767               	addwf	AvgMeasure@average_dist& (0+255),f,b
  5665  0019A2  5049               	movf	_distance+1,w,c
  5666  0019A4  0100               	movlb	0	; () banked
  5667  0019A6  2368               	addwfc	(AvgMeasure@average_dist+1)& (0+255),f,b
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;measure.c: 54: counter++;
  5671  0019A8  0100               	movlb	0	; () banked
  5672  0019AA  2B66               	incf	AvgMeasure@counter& (0+255),f,b
  5673  0019AC                     l3013:
  5674  0019AC  FFFF               	dw	65535	; assembler added errata NOP
  5675                           
  5676                           ; BSR set to: 0
  5677  0019AE  0E09               	movlw	9
  5678  0019B0  0100               	movlb	0	; () banked
  5679  0019B2  6566               	cpfsgt	AvgMeasure@counter& (0+255),b
  5680  0019B4  D7C1               	goto	l2999
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;measure.c: 58: }
  5684                           ;measure.c: 60: average_dist /= counter ;
  5685                           
  5686                           ; BSR set to: 0
  5687  0019B6  C067  F010         	movff	AvgMeasure@average_dist,___lwdiv@dividend
  5688  0019BA  C068  F011         	movff	AvgMeasure@average_dist+1,___lwdiv@dividend+1
  5689  0019BE  C066  F012         	movff	AvgMeasure@counter,___lwdiv@divisor
  5690  0019C2  6A13               	clrf	___lwdiv@divisor+1,c
  5691  0019C4  ECE1  F00F         	call	___lwdiv	;wreg free
  5692  0019C8  C010  F067         	movff	?___lwdiv,AvgMeasure@average_dist
  5693  0019CC  C011  F068         	movff	?___lwdiv+1,AvgMeasure@average_dist+1
  5694                           
  5695                           ;measure.c: 62: return average_dist;
  5696  0019D0  C067  F033         	movff	AvgMeasure@average_dist,?_AvgMeasure
  5697  0019D4  C068  F034         	movff	AvgMeasure@average_dist+1,?_AvgMeasure+1
  5698  0019D8  0012               	return		;funcret
  5699  0019DA  FFFF               	dw	65535	; errata NOP
  5700  0019DC                     __end_of_AvgMeasure:
  5701                           	opt stack 0
  5702                           tblptru	equ	0xFF8
  5703                           tblptrh	equ	0xFF7
  5704                           tblptrl	equ	0xFF6
  5705                           tablat	equ	0xFF5
  5706                           intcon	equ	0xFF2
  5707                           indf0	equ	0xFEF
  5708                           postinc0	equ	0xFEE
  5709                           fsr0h	equ	0xFEA
  5710                           fsr0l	equ	0xFE9
  5711                           wreg	equ	0xFE8
  5712                           indf1	equ	0xFE7
  5713                           fsr1h	equ	0xFE2
  5714                           fsr1l	equ	0xFE1
  5715                           indf2	equ	0xFDF
  5716                           postinc2	equ	0xFDE
  5717                           postdec2	equ	0xFDD
  5718                           plusw2	equ	0xFDB
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function ___lwtoft *****************
  5724 ;; Defined at:
  5725 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  c               2   23[COMRAM] unsigned int 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  3   23[COMRAM] float 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5739 ;;      Params:         3       0       0       0       0       0       0
  5740 ;;      Locals:         0       0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0
  5742 ;;      Totals:         3       0       0       0       0       0       0
  5743 ;;Total ram usage:        3 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    3
  5746 ;; This function calls:
  5747 ;;		___ftpack
  5748 ;; This function is called by:
  5749 ;;		_AvgMeasure
  5750 ;;		_measure
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text25
  5755  0021EC                     __ptext25:
  5756                           	opt stack 0
  5757  0021EC                     ___lwtoft:
  5758                           	opt stack 0
  5759  0021EC  FFFF               	dw	65535	; assembler added errata NOP
  5760                           
  5761                           ;incstack = 0
  5762  0021EE  C018  F010         	movff	___lwtoft@c,___ftpack@arg
  5763  0021F2  C019  F011         	movff	___lwtoft@c+1,___ftpack@arg+1
  5764  0021F6  6A12               	clrf	___ftpack@arg+2,c
  5765  0021F8  0E8E               	movlw	142
  5766  0021FA  6E13               	movwf	___ftpack@exp,c
  5767  0021FC  0E00               	movlw	0
  5768  0021FE  6E14               	movwf	___ftpack@sign,c
  5769  002200  EC30  F00C         	call	___ftpack	;wreg free
  5770  002204  C010  F018         	movff	?___ftpack,?___lwtoft
  5771  002208  C011  F019         	movff	?___ftpack+1,?___lwtoft+1
  5772  00220C  C012  F01A         	movff	?___ftpack+2,?___lwtoft+2
  5773  002210  0012               	return		;funcret
  5774  002212  FFFF               	dw	65535	; errata NOP
  5775  002214                     __end_of___lwtoft:
  5776                           	opt stack 0
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           intcon	equ	0xFF2
  5782                           indf0	equ	0xFEF
  5783                           postinc0	equ	0xFEE
  5784                           fsr0h	equ	0xFEA
  5785                           fsr0l	equ	0xFE9
  5786                           wreg	equ	0xFE8
  5787                           indf1	equ	0xFE7
  5788                           fsr1h	equ	0xFE2
  5789                           fsr1l	equ	0xFE1
  5790                           indf2	equ	0xFDF
  5791                           postinc2	equ	0xFDE
  5792                           postdec2	equ	0xFDD
  5793                           plusw2	equ	0xFDB
  5794                           fsr2h	equ	0xFDA
  5795                           fsr2l	equ	0xFD9
  5796                           status	equ	0xFD8
  5797                           
  5798 ;; *************** function ___lwdiv *****************
  5799 ;; Defined at:
  5800 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  dividend        2   15[COMRAM] unsigned int 
  5803 ;;  divisor         2   17[COMRAM] unsigned int 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  quotient        2   20[COMRAM] unsigned int 
  5806 ;;  counter         1   19[COMRAM] unsigned char 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  2   15[COMRAM] unsigned int 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5816 ;;      Params:         4       0       0       0       0       0       0
  5817 ;;      Locals:         3       0       0       0       0       0       0
  5818 ;;      Temps:          0       0       0       0       0       0       0
  5819 ;;      Totals:         7       0       0       0       0       0       0
  5820 ;;Total ram usage:        7 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    2
  5823 ;; This function calls:
  5824 ;;		Nothing
  5825 ;; This function is called by:
  5826 ;;		_itoa_new
  5827 ;;		_AvgMeasure
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text26
  5832  001FC2                     __ptext26:
  5833                           	opt stack 0
  5834  001FC2                     ___lwdiv:
  5835                           	opt stack 0
  5836  001FC2  FFFF               	dw	65535	; assembler added errata NOP
  5837                           
  5838                           ;incstack = 0
  5839  001FC4  0E00               	movlw	0
  5840  001FC6  6E16               	movwf	___lwdiv@quotient+1,c
  5841  001FC8  0E00               	movlw	0
  5842  001FCA  6E15               	movwf	___lwdiv@quotient,c
  5843  001FCC  5012               	movf	___lwdiv@divisor,w,c
  5844  001FCE  1013               	iorwf	___lwdiv@divisor+1,w,c
  5845  001FD0  B4D8               	btfsc	status,2,c
  5846  001FD2  D020               	goto	l944
  5847  001FD4  0E01               	movlw	1
  5848  001FD6  6E14               	movwf	___lwdiv@counter,c
  5849  001FD8  D005               	goto	l2967
  5850  001FDA                     l2965:
  5851  001FDA  FFFF               	dw	65535	; assembler added errata NOP
  5852  001FDC  90D8               	bcf	status,0,c
  5853  001FDE  3612               	rlcf	___lwdiv@divisor,f,c
  5854  001FE0  3613               	rlcf	___lwdiv@divisor+1,f,c
  5855  001FE2  2A14               	incf	___lwdiv@counter,f,c
  5856  001FE4                     l2967:
  5857  001FE4  FFFF               	dw	65535	; assembler added errata NOP
  5858  001FE6  AE13               	btfss	___lwdiv@divisor+1,7,c
  5859  001FE8  D7F8               	goto	l2965
  5860  001FEA                     l2969:
  5861  001FEA  FFFF               	dw	65535	; assembler added errata NOP
  5862  001FEC  90D8               	bcf	status,0,c
  5863  001FEE  3615               	rlcf	___lwdiv@quotient,f,c
  5864  001FF0  3616               	rlcf	___lwdiv@quotient+1,f,c
  5865  001FF2  5012               	movf	___lwdiv@divisor,w,c
  5866  001FF4  5C10               	subwf	___lwdiv@dividend,w,c
  5867  001FF6  5013               	movf	___lwdiv@divisor+1,w,c
  5868  001FF8  5811               	subwfb	___lwdiv@dividend+1,w,c
  5869  001FFA  A0D8               	btfss	status,0,c
  5870  001FFC  D005               	goto	l2977
  5871  001FFE  5012               	movf	___lwdiv@divisor,w,c
  5872  002000  5E10               	subwf	___lwdiv@dividend,f,c
  5873  002002  5013               	movf	___lwdiv@divisor+1,w,c
  5874  002004  5A11               	subwfb	___lwdiv@dividend+1,f,c
  5875  002006  8015               	bsf	___lwdiv@quotient,0,c
  5876  002008                     l2977:
  5877  002008  FFFF               	dw	65535	; assembler added errata NOP
  5878  00200A  90D8               	bcf	status,0,c
  5879  00200C  3213               	rrcf	___lwdiv@divisor+1,f,c
  5880  00200E  3212               	rrcf	___lwdiv@divisor,f,c
  5881  002010  2E14               	decfsz	___lwdiv@counter,f,c
  5882  002012  D7EB               	goto	l2969
  5883  002014                     l944:
  5884  002014  FFFF               	dw	65535	; assembler added errata NOP
  5885  002016  C015  F010         	movff	___lwdiv@quotient,?___lwdiv
  5886  00201A  C016  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5887  00201E  0012               	return		;funcret
  5888  002020  FFFF               	dw	65535	; errata NOP
  5889  002022                     __end_of___lwdiv:
  5890                           	opt stack 0
  5891                           tblptru	equ	0xFF8
  5892                           tblptrh	equ	0xFF7
  5893                           tblptrl	equ	0xFF6
  5894                           tablat	equ	0xFF5
  5895                           intcon	equ	0xFF2
  5896                           indf0	equ	0xFEF
  5897                           postinc0	equ	0xFEE
  5898                           fsr0h	equ	0xFEA
  5899                           fsr0l	equ	0xFE9
  5900                           wreg	equ	0xFE8
  5901                           indf1	equ	0xFE7
  5902                           fsr1h	equ	0xFE2
  5903                           fsr1l	equ	0xFE1
  5904                           indf2	equ	0xFDF
  5905                           postinc2	equ	0xFDE
  5906                           postdec2	equ	0xFDD
  5907                           plusw2	equ	0xFDB
  5908                           fsr2h	equ	0xFDA
  5909                           fsr2l	equ	0xFD9
  5910                           status	equ	0xFD8
  5911                           
  5912 ;; *************** function ___fttol *****************
  5913 ;; Defined at:
  5914 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  f1              3   41[COMRAM] float 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  lval            4    1[BANK0 ] unsigned long 
  5919 ;;  exp1            1    5[BANK0 ] unsigned char 
  5920 ;;  sign1           1    0[BANK0 ] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  4   41[COMRAM] long 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5930 ;;      Params:         4       0       0       0       0       0       0
  5931 ;;      Locals:         0       6       0       0       0       0       0
  5932 ;;      Temps:          5       0       0       0       0       0       0
  5933 ;;      Totals:         9       6       0       0       0       0       0
  5934 ;;Total ram usage:       15 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    2
  5937 ;; This function calls:
  5938 ;;		Nothing
  5939 ;; This function is called by:
  5940 ;;		_AvgMeasure
  5941 ;;		_measure
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text27
  5946  00166A                     __ptext27:
  5947                           	opt stack 0
  5948  00166A                     ___fttol:
  5949                           	opt stack 0
  5950  00166A  FFFF               	dw	65535	; assembler added errata NOP
  5951                           
  5952                           ;incstack = 0
  5953  00166C  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  5954  001670  6A2F               	clrf	(??___fttol+1)& (0+255),c
  5955  001672  6A30               	clrf	(??___fttol+2)& (0+255),c
  5956  001674  342B               	rlcf	___fttol@f1+1,w,c
  5957  001676  362E               	rlcf	??___fttol& (0+255),f,c
  5958  001678  E301               	bnc	u2691
  5959  00167A  802F               	bsf	(??___fttol+1)& (0+255),0,c
  5960  00167C                     u2691:
  5961  00167C  502E               	movf	??___fttol,w,c
  5962  00167E  0100               	movlb	0	; () banked
  5963  001680  6F65               	movwf	___fttol@exp1& (0+255),b
  5964  001682  0100               	movlb	0	; () banked
  5965  001684  5165               	movf	___fttol@exp1& (0+255),w,b
  5966  001686  B4D8               	btfsc	status,2,c
  5967  001688  D044               	goto	l2943
  5968                           
  5969                           ; BSR set to: 0
  5970                           
  5971                           ; BSR set to: 0
  5972                           
  5973                           ; BSR set to: 0
  5974                           
  5975                           ; BSR set to: 0
  5976  00168A  0E17               	movlw	23
  5977  00168C  6E2E               	movwf	??___fttol& (0+255),c
  5978  00168E  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  5979  001692  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  5980  001696  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  5981  00169A  282E               	incf	??___fttol,w,c
  5982  00169C  6E32               	movwf	(??___fttol+4)& (0+255),c
  5983  00169E  D005               	goto	u2710
  5984  0016A0                     u2715:
  5985  0016A0  FFFF               	dw	65535	; assembler added errata NOP
  5986  0016A2  90D8               	bcf	status,0,c
  5987  0016A4  3231               	rrcf	??___fttol+3,f,c
  5988  0016A6  3230               	rrcf	??___fttol+2,f,c
  5989  0016A8  322F               	rrcf	??___fttol+1,f,c
  5990  0016AA                     u2710:
  5991  0016AA  FFFF               	dw	65535	; assembler added errata NOP
  5992  0016AC  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
  5993  0016AE  D7F8               	goto	u2715
  5994  0016B0  502F               	movf	??___fttol+1,w,c
  5995  0016B2  0100               	movlb	0	; () banked
  5996  0016B4  6F60               	movwf	___fttol@sign1& (0+255),b
  5997                           
  5998                           ; BSR set to: 0
  5999  0016B6  8E2B               	bsf	___fttol@f1+1,7,c
  6000                           
  6001                           ; BSR set to: 0
  6002  0016B8  0EFF               	movlw	255
  6003  0016BA  162A               	andwf	___fttol@f1,f,c
  6004  0016BC  0EFF               	movlw	255
  6005  0016BE  162B               	andwf	___fttol@f1+1,f,c
  6006  0016C0  0E00               	movlw	0
  6007  0016C2  162C               	andwf	___fttol@f1+2,f,c
  6008                           
  6009                           ; BSR set to: 0
  6010  0016C4  502A               	movf	___fttol@f1,w,c
  6011  0016C6  0100               	movlb	0	; () banked
  6012  0016C8  6F61               	movwf	___fttol@lval& (0+255),b
  6013  0016CA  502B               	movf	___fttol@f1+1,w,c
  6014  0016CC  0100               	movlb	0	; () banked
  6015  0016CE  6F62               	movwf	(___fttol@lval+1)& (0+255),b
  6016  0016D0  502C               	movf	___fttol@f1+2,w,c
  6017  0016D2  0100               	movlb	0	; () banked
  6018  0016D4  6F63               	movwf	(___fttol@lval+2)& (0+255),b
  6019  0016D6  0100               	movlb	0	; () banked
  6020  0016D8  6B64               	clrf	(___fttol@lval+3)& (0+255),b
  6021                           
  6022                           ; BSR set to: 0
  6023  0016DA  0E8E               	movlw	142
  6024  0016DC  0100               	movlb	0	; () banked
  6025  0016DE  5F65               	subwf	___fttol@exp1& (0+255),f,b
  6026                           
  6027                           ; BSR set to: 0
  6028  0016E0  0100               	movlb	0	; () banked
  6029  0016E2  AF65               	btfss	___fttol@exp1& (0+255),7,b
  6030  0016E4  D011               	goto	l2941
  6031                           
  6032                           ; BSR set to: 0
  6033  0016E6  0100               	movlb	0	; () banked
  6034  0016E8  5165               	movf	___fttol@exp1& (0+255),w,b
  6035  0016EA  0A80               	xorlw	128
  6036  0016EC  0F8F               	addlw	143
  6037  0016EE  A0D8               	btfss	status,0,c
  6038  0016F0  D010               	goto	l2943
  6039  0016F2                     l2937:
  6040  0016F2  FFFF               	dw	65535	; assembler added errata NOP
  6041                           
  6042                           ; BSR set to: 0
  6043  0016F4  0100               	movlb	0	; () banked
  6044  0016F6  90D8               	bcf	status,0,c
  6045  0016F8  3364               	rrcf	(___fttol@lval+3)& (0+255),f,b
  6046  0016FA  3363               	rrcf	(___fttol@lval+2)& (0+255),f,b
  6047  0016FC  3362               	rrcf	(___fttol@lval+1)& (0+255),f,b
  6048  0016FE  3361               	rrcf	___fttol@lval& (0+255),f,b
  6049                           
  6050                           ; BSR set to: 0
  6051  001700  0100               	movlb	0	; () banked
  6052  001702  3F65               	incfsz	___fttol@exp1& (0+255),f,b
  6053  001704  D7F6               	goto	l2937
  6054                           
  6055                           ; BSR set to: 0
  6056  001706  D01E               	goto	l2951
  6057  001708                     l2941:
  6058  001708  FFFF               	dw	65535	; assembler added errata NOP
  6059                           
  6060                           ; BSR set to: 0
  6061  00170A  0E17               	movlw	23
  6062  00170C  0100               	movlb	0	; () banked
  6063  00170E  6565               	cpfsgt	___fttol@exp1& (0+255),b
  6064  001710  D013               	goto	l2949
  6065  001712                     l2943:
  6066  001712  FFFF               	dw	65535	; assembler added errata NOP
  6067                           
  6068                           ; BSR set to: 0
  6069  001714  0E00               	movlw	0
  6070  001716  6E2A               	movwf	?___fttol,c
  6071  001718  0E00               	movlw	0
  6072  00171A  6E2B               	movwf	?___fttol+1,c
  6073  00171C  0E00               	movlw	0
  6074  00171E  6E2C               	movwf	?___fttol+2,c
  6075  001720  0E00               	movlw	0
  6076  001722  6E2D               	movwf	?___fttol+3,c
  6077                           
  6078                           ; BSR set to: 0
  6079  001724  D027               	goto	l857
  6080  001726                     l2947:
  6081  001726  FFFF               	dw	65535	; assembler added errata NOP
  6082                           
  6083                           ; BSR set to: 0
  6084  001728  0100               	movlb	0	; () banked
  6085  00172A  90D8               	bcf	status,0,c
  6086  00172C  3761               	rlcf	___fttol@lval& (0+255),f,b
  6087  00172E  3762               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6088  001730  3763               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6089  001732  3764               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6090  001734  0100               	movlb	0	; () banked
  6091  001736  0765               	decf	___fttol@exp1& (0+255),f,b
  6092  001738                     l2949:
  6093  001738  FFFF               	dw	65535	; assembler added errata NOP
  6094                           
  6095                           ; BSR set to: 0
  6096  00173A  0100               	movlb	0	; () banked
  6097  00173C  5165               	movf	___fttol@exp1& (0+255),w,b
  6098  00173E  0100               	movlb	0	; () banked
  6099  001740  A4D8               	btfss	status,2,c
  6100  001742  D7F1               	goto	l2947
  6101  001744                     l2951:
  6102  001744  FFFF               	dw	65535	; assembler added errata NOP
  6103                           
  6104                           ; BSR set to: 0
  6105  001746  0100               	movlb	0	; () banked
  6106  001748  5160               	movf	___fttol@sign1& (0+255),w,b
  6107  00174A  0100               	movlb	0	; () banked
  6108  00174C  B4D8               	btfsc	status,2,c
  6109  00174E  D009               	goto	l2955
  6110                           
  6111                           ; BSR set to: 0
  6112  001750  0100               	movlb	0	; () banked
  6113  001752  1F64               	comf	(___fttol@lval+3)& (0+255),f,b
  6114  001754  1F63               	comf	(___fttol@lval+2)& (0+255),f,b
  6115  001756  1F62               	comf	(___fttol@lval+1)& (0+255),f,b
  6116  001758  6D61               	negf	___fttol@lval& (0+255),b
  6117  00175A  0E00               	movlw	0
  6118  00175C  2362               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6119  00175E  2363               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6120  001760  2364               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6121  001762                     l2955:
  6122  001762  FFFF               	dw	65535	; assembler added errata NOP
  6123                           
  6124                           ; BSR set to: 0
  6125  001764  C061  F02A         	movff	___fttol@lval,?___fttol
  6126  001768  C062  F02B         	movff	___fttol@lval+1,?___fttol+1
  6127  00176C  C063  F02C         	movff	___fttol@lval+2,?___fttol+2
  6128  001770  C064  F02D         	movff	___fttol@lval+3,?___fttol+3
  6129  001774                     l857:
  6130  001774  FFFF               	dw	65535	; assembler added errata NOP
  6131                           
  6132                           ; BSR set to: 0
  6133  001776  0012               	return		;funcret
  6134  001778  FFFF               	dw	65535	; errata NOP
  6135  00177A                     __end_of___fttol:
  6136                           	opt stack 0
  6137                           tblptru	equ	0xFF8
  6138                           tblptrh	equ	0xFF7
  6139                           tblptrl	equ	0xFF6
  6140                           tablat	equ	0xFF5
  6141                           intcon	equ	0xFF2
  6142                           indf0	equ	0xFEF
  6143                           postinc0	equ	0xFEE
  6144                           fsr0h	equ	0xFEA
  6145                           fsr0l	equ	0xFE9
  6146                           wreg	equ	0xFE8
  6147                           indf1	equ	0xFE7
  6148                           fsr1h	equ	0xFE2
  6149                           fsr1l	equ	0xFE1
  6150                           indf2	equ	0xFDF
  6151                           postinc2	equ	0xFDE
  6152                           postdec2	equ	0xFDD
  6153                           plusw2	equ	0xFDB
  6154                           fsr2h	equ	0xFDA
  6155                           fsr2l	equ	0xFD9
  6156                           status	equ	0xFD8
  6157                           
  6158 ;; *************** function ___ftdiv *****************
  6159 ;; Defined at:
  6160 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  f1              3   26[COMRAM] float 
  6163 ;;  f2              3   29[COMRAM] float 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;  f3              3   36[COMRAM] float 
  6166 ;;  sign            1   40[COMRAM] unsigned char 
  6167 ;;  exp             1   39[COMRAM] unsigned char 
  6168 ;;  cntr            1   35[COMRAM] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  3   26[COMRAM] float 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6178 ;;      Params:         6       0       0       0       0       0       0
  6179 ;;      Locals:         6       0       0       0       0       0       0
  6180 ;;      Temps:          3       0       0       0       0       0       0
  6181 ;;      Totals:        15       0       0       0       0       0       0
  6182 ;;Total ram usage:       15 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    3
  6185 ;; This function calls:
  6186 ;;		___ftpack
  6187 ;; This function is called by:
  6188 ;;		_AvgMeasure
  6189 ;;		_measure
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text28
  6194  00177A                     __ptext28:
  6195                           	opt stack 0
  6196  00177A                     ___ftdiv:
  6197                           	opt stack 0
  6198  00177A  FFFF               	dw	65535	; assembler added errata NOP
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;incstack = 0
  6202  00177C  C01D  F021         	movff	___ftdiv@f1+2,??___ftdiv
  6203  001780  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  6204  001782  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  6205  001784  341C               	rlcf	___ftdiv@f1+1,w,c
  6206  001786  3621               	rlcf	??___ftdiv& (0+255),f,c
  6207  001788  E301               	bnc	u2641
  6208  00178A  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  6209  00178C                     u2641:
  6210  00178C  5021               	movf	??___ftdiv,w,c
  6211  00178E  6E28               	movwf	___ftdiv@exp,c
  6212  001790  5028               	movf	___ftdiv@exp,w,c
  6213  001792  B4D8               	btfsc	status,2,c
  6214  001794  D00D               	goto	l2875
  6215  001796  C020  F021         	movff	___ftdiv@f2+2,??___ftdiv
  6216  00179A  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  6217  00179C  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  6218  00179E  341F               	rlcf	___ftdiv@f2+1,w,c
  6219  0017A0  3621               	rlcf	??___ftdiv& (0+255),f,c
  6220  0017A2  E301               	bnc	u2661
  6221  0017A4  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  6222  0017A6                     u2661:
  6223  0017A6  5021               	movf	??___ftdiv,w,c
  6224  0017A8  6E29               	movwf	___ftdiv@sign,c
  6225  0017AA  5029               	movf	___ftdiv@sign,w,c
  6226  0017AC  A4D8               	btfss	status,2,c
  6227  0017AE  D008               	goto	l2879
  6228  0017B0                     l2875:
  6229  0017B0  FFFF               	dw	65535	; assembler added errata NOP
  6230  0017B2  0E00               	movlw	0
  6231  0017B4  6E1B               	movwf	?___ftdiv,c
  6232  0017B6  0E00               	movlw	0
  6233  0017B8  6E1C               	movwf	?___ftdiv+1,c
  6234  0017BA  0E00               	movlw	0
  6235  0017BC  6E1D               	movwf	?___ftdiv+2,c
  6236  0017BE  D04D               	goto	l821
  6237  0017C0                     l2879:
  6238  0017C0  FFFF               	dw	65535	; assembler added errata NOP
  6239  0017C2  0E00               	movlw	0
  6240  0017C4  6E25               	movwf	___ftdiv@f3,c
  6241  0017C6  0E00               	movlw	0
  6242  0017C8  6E26               	movwf	___ftdiv@f3+1,c
  6243  0017CA  0E00               	movlw	0
  6244  0017CC  6E27               	movwf	___ftdiv@f3+2,c
  6245  0017CE  5029               	movf	___ftdiv@sign,w,c
  6246  0017D0  0F89               	addlw	137
  6247  0017D2  5E28               	subwf	___ftdiv@exp,f,c
  6248  0017D4  C01D  F029         	movff	___ftdiv@f1+2,___ftdiv@sign
  6249  0017D8  5020               	movf	___ftdiv@f2+2,w,c
  6250  0017DA  1A29               	xorwf	___ftdiv@sign,f,c
  6251  0017DC  0E80               	movlw	128
  6252  0017DE  1629               	andwf	___ftdiv@sign,f,c
  6253  0017E0  8E1C               	bsf	___ftdiv@f1+1,7,c
  6254  0017E2  0EFF               	movlw	255
  6255  0017E4  161B               	andwf	___ftdiv@f1,f,c
  6256  0017E6  0EFF               	movlw	255
  6257  0017E8  161C               	andwf	___ftdiv@f1+1,f,c
  6258  0017EA  0E00               	movlw	0
  6259  0017EC  161D               	andwf	___ftdiv@f1+2,f,c
  6260  0017EE  8E1F               	bsf	___ftdiv@f2+1,7,c
  6261  0017F0  0EFF               	movlw	255
  6262  0017F2  161E               	andwf	___ftdiv@f2,f,c
  6263  0017F4  0EFF               	movlw	255
  6264  0017F6  161F               	andwf	___ftdiv@f2+1,f,c
  6265  0017F8  0E00               	movlw	0
  6266  0017FA  1620               	andwf	___ftdiv@f2+2,f,c
  6267  0017FC  0E18               	movlw	24
  6268  0017FE  6E24               	movwf	___ftdiv@cntr,c
  6269  001800                     l2899:
  6270  001800  FFFF               	dw	65535	; assembler added errata NOP
  6271  001802  90D8               	bcf	status,0,c
  6272  001804  3625               	rlcf	___ftdiv@f3,f,c
  6273  001806  3626               	rlcf	___ftdiv@f3+1,f,c
  6274  001808  3627               	rlcf	___ftdiv@f3+2,f,c
  6275  00180A  501E               	movf	___ftdiv@f2,w,c
  6276  00180C  5C1B               	subwf	___ftdiv@f1,w,c
  6277  00180E  501F               	movf	___ftdiv@f2+1,w,c
  6278  001810  581C               	subwfb	___ftdiv@f1+1,w,c
  6279  001812  5020               	movf	___ftdiv@f2+2,w,c
  6280  001814  581D               	subwfb	___ftdiv@f1+2,w,c
  6281  001816  A0D8               	btfss	status,0,c
  6282  001818  D007               	goto	l824
  6283  00181A  501E               	movf	___ftdiv@f2,w,c
  6284  00181C  5E1B               	subwf	___ftdiv@f1,f,c
  6285  00181E  501F               	movf	___ftdiv@f2+1,w,c
  6286  001820  5A1C               	subwfb	___ftdiv@f1+1,f,c
  6287  001822  5020               	movf	___ftdiv@f2+2,w,c
  6288  001824  5A1D               	subwfb	___ftdiv@f1+2,f,c
  6289  001826  8025               	bsf	___ftdiv@f3,0,c
  6290  001828                     l824:
  6291  001828  FFFF               	dw	65535	; assembler added errata NOP
  6292  00182A  90D8               	bcf	status,0,c
  6293  00182C  361B               	rlcf	___ftdiv@f1,f,c
  6294  00182E  361C               	rlcf	___ftdiv@f1+1,f,c
  6295  001830  361D               	rlcf	___ftdiv@f1+2,f,c
  6296  001832  2E24               	decfsz	___ftdiv@cntr,f,c
  6297  001834  D7E5               	goto	l2899
  6298  001836  C025  F010         	movff	___ftdiv@f3,___ftpack@arg
  6299  00183A  C026  F011         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6300  00183E  C027  F012         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6301  001842  C028  F013         	movff	___ftdiv@exp,___ftpack@exp
  6302  001846  C029  F014         	movff	___ftdiv@sign,___ftpack@sign
  6303  00184A  EC30  F00C         	call	___ftpack	;wreg free
  6304  00184E  C010  F01B         	movff	?___ftpack,?___ftdiv
  6305  001852  C011  F01C         	movff	?___ftpack+1,?___ftdiv+1
  6306  001856  C012  F01D         	movff	?___ftpack+2,?___ftdiv+2
  6307  00185A                     l821:
  6308  00185A  FFFF               	dw	65535	; assembler added errata NOP
  6309  00185C  0012               	return		;funcret
  6310  00185E  FFFF               	dw	65535	; errata NOP
  6311  001860                     __end_of___ftdiv:
  6312                           	opt stack 0
  6313                           tblptru	equ	0xFF8
  6314                           tblptrh	equ	0xFF7
  6315                           tblptrl	equ	0xFF6
  6316                           tablat	equ	0xFF5
  6317                           intcon	equ	0xFF2
  6318                           indf0	equ	0xFEF
  6319                           postinc0	equ	0xFEE
  6320                           fsr0h	equ	0xFEA
  6321                           fsr0l	equ	0xFE9
  6322                           wreg	equ	0xFE8
  6323                           indf1	equ	0xFE7
  6324                           fsr1h	equ	0xFE2
  6325                           fsr1l	equ	0xFE1
  6326                           indf2	equ	0xFDF
  6327                           postinc2	equ	0xFDE
  6328                           postdec2	equ	0xFDD
  6329                           plusw2	equ	0xFDB
  6330                           fsr2h	equ	0xFDA
  6331                           fsr2l	equ	0xFD9
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function ___ftpack *****************
  6335 ;; Defined at:
  6336 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  arg             3   15[COMRAM] unsigned um
  6339 ;;  exp             1   18[COMRAM] unsigned char 
  6340 ;;  sign            1   19[COMRAM] unsigned char 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  3   15[COMRAM] float 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6352 ;;      Params:         5       0       0       0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0       0       0
  6354 ;;      Temps:          3       0       0       0       0       0       0
  6355 ;;      Totals:         8       0       0       0       0       0       0
  6356 ;;Total ram usage:        8 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    2
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		___ftdiv
  6363 ;;		___lwtoft
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text29
  6368  001860                     __ptext29:
  6369                           	opt stack 0
  6370  001860                     ___ftpack:
  6371                           	opt stack 0
  6372  001860  FFFF               	dw	65535	; assembler added errata NOP
  6373                           
  6374                           ;incstack = 0
  6375  001862  5013               	movf	___ftpack@exp,w,c
  6376  001864  B4D8               	btfsc	status,2,c
  6377  001866  D005               	goto	l2829
  6378  001868  5010               	movf	___ftpack@arg,w,c
  6379  00186A  1011               	iorwf	___ftpack@arg+1,w,c
  6380  00186C  1012               	iorwf	___ftpack@arg+2,w,c
  6381  00186E  A4D8               	btfss	status,2,c
  6382  001870  D00E               	goto	l2835
  6383  001872                     l2829:
  6384  001872  FFFF               	dw	65535	; assembler added errata NOP
  6385  001874  0E00               	movlw	0
  6386  001876  6E10               	movwf	?___ftpack,c
  6387  001878  0E00               	movlw	0
  6388  00187A  6E11               	movwf	?___ftpack+1,c
  6389  00187C  0E00               	movlw	0
  6390  00187E  6E12               	movwf	?___ftpack+2,c
  6391  001880  D04E               	goto	l755
  6392  001882                     l2833:
  6393  001882  FFFF               	dw	65535	; assembler added errata NOP
  6394  001884  2A13               	incf	___ftpack@exp,f,c
  6395  001886  90D8               	bcf	status,0,c
  6396  001888  3212               	rrcf	___ftpack@arg+2,f,c
  6397  00188A  3211               	rrcf	___ftpack@arg+1,f,c
  6398  00188C  3210               	rrcf	___ftpack@arg,f,c
  6399  00188E                     l2835:
  6400  00188E  FFFF               	dw	65535	; assembler added errata NOP
  6401  001890  0E00               	movlw	0
  6402  001892  1410               	andwf	___ftpack@arg,w,c
  6403  001894  6E15               	movwf	??___ftpack& (0+255),c
  6404  001896  0E00               	movlw	0
  6405  001898  1411               	andwf	___ftpack@arg+1,w,c
  6406  00189A  6E16               	movwf	(??___ftpack+1)& (0+255),c
  6407  00189C  0EFE               	movlw	254
  6408  00189E  1412               	andwf	___ftpack@arg+2,w,c
  6409  0018A0  6E17               	movwf	(??___ftpack+2)& (0+255),c
  6410  0018A2  5015               	movf	??___ftpack,w,c
  6411  0018A4  1016               	iorwf	??___ftpack+1,w,c
  6412  0018A6  1017               	iorwf	??___ftpack+2,w,c
  6413  0018A8  B4D8               	btfsc	status,2,c
  6414  0018AA  D00D               	goto	l2841
  6415  0018AC  D7EA               	goto	l2833
  6416  0018AE                     l2837:
  6417  0018AE  FFFF               	dw	65535	; assembler added errata NOP
  6418  0018B0  2A13               	incf	___ftpack@exp,f,c
  6419  0018B2  0E01               	movlw	1
  6420  0018B4  2610               	addwf	___ftpack@arg,f,c
  6421  0018B6  0E00               	movlw	0
  6422  0018B8  2211               	addwfc	___ftpack@arg+1,f,c
  6423  0018BA  0E00               	movlw	0
  6424  0018BC  2212               	addwfc	___ftpack@arg+2,f,c
  6425  0018BE  90D8               	bcf	status,0,c
  6426  0018C0  3212               	rrcf	___ftpack@arg+2,f,c
  6427  0018C2  3211               	rrcf	___ftpack@arg+1,f,c
  6428  0018C4  3210               	rrcf	___ftpack@arg,f,c
  6429  0018C6                     l2841:
  6430  0018C6  FFFF               	dw	65535	; assembler added errata NOP
  6431  0018C8  0E00               	movlw	0
  6432  0018CA  1410               	andwf	___ftpack@arg,w,c
  6433  0018CC  6E15               	movwf	??___ftpack& (0+255),c
  6434  0018CE  0E00               	movlw	0
  6435  0018D0  1411               	andwf	___ftpack@arg+1,w,c
  6436  0018D2  6E16               	movwf	(??___ftpack+1)& (0+255),c
  6437  0018D4  0EFF               	movlw	255
  6438  0018D6  1412               	andwf	___ftpack@arg+2,w,c
  6439  0018D8  6E17               	movwf	(??___ftpack+2)& (0+255),c
  6440  0018DA  5015               	movf	??___ftpack,w,c
  6441  0018DC  1016               	iorwf	??___ftpack+1,w,c
  6442  0018DE  1017               	iorwf	??___ftpack+2,w,c
  6443  0018E0  B4D8               	btfsc	status,2,c
  6444  0018E2  D007               	goto	l2845
  6445  0018E4  D7E4               	goto	l2837
  6446  0018E6                     l2843:
  6447  0018E6  FFFF               	dw	65535	; assembler added errata NOP
  6448  0018E8  0613               	decf	___ftpack@exp,f,c
  6449  0018EA  90D8               	bcf	status,0,c
  6450  0018EC  3610               	rlcf	___ftpack@arg,f,c
  6451  0018EE  3611               	rlcf	___ftpack@arg+1,f,c
  6452  0018F0  3612               	rlcf	___ftpack@arg+2,f,c
  6453  0018F2                     l2845:
  6454  0018F2  FFFF               	dw	65535	; assembler added errata NOP
  6455  0018F4  BE11               	btfsc	___ftpack@arg+1,7,c
  6456  0018F6  D003               	goto	l766
  6457  0018F8  0E02               	movlw	2
  6458  0018FA  6013               	cpfslt	___ftpack@exp,c
  6459  0018FC  D7F4               	goto	l2843
  6460  0018FE                     l766:
  6461  0018FE  FFFF               	dw	65535	; assembler added errata NOP
  6462  001900  A013               	btfss	___ftpack@exp,0,c
  6463  001902  9E11               	bcf	___ftpack@arg+1,7,c
  6464  001904  90D8               	bcf	status,0,c
  6465  001906  3213               	rrcf	___ftpack@exp,f,c
  6466  001908  5013               	movf	___ftpack@exp,w,c
  6467  00190A  1212               	iorwf	___ftpack@arg+2,f,c
  6468  00190C  5014               	movf	___ftpack@sign,w,c
  6469  00190E  A4D8               	btfss	status,2,c
  6470  001910  8E12               	bsf	___ftpack@arg+2,7,c
  6471  001912  C010  F010         	movff	___ftpack@arg,?___ftpack
  6472  001916  C011  F011         	movff	___ftpack@arg+1,?___ftpack+1
  6473  00191A  C012  F012         	movff	___ftpack@arg+2,?___ftpack+2
  6474  00191E                     l755:
  6475  00191E  FFFF               	dw	65535	; assembler added errata NOP
  6476  001920  0012               	return		;funcret
  6477  001922  FFFF               	dw	65535	; errata NOP
  6478  001924                     __end_of___ftpack:
  6479                           	opt stack 0
  6480                           tblptru	equ	0xFF8
  6481                           tblptrh	equ	0xFF7
  6482                           tblptrl	equ	0xFF6
  6483                           tablat	equ	0xFF5
  6484                           intcon	equ	0xFF2
  6485                           indf0	equ	0xFEF
  6486                           postinc0	equ	0xFEE
  6487                           fsr0h	equ	0xFEA
  6488                           fsr0l	equ	0xFE9
  6489                           wreg	equ	0xFE8
  6490                           indf1	equ	0xFE7
  6491                           fsr1h	equ	0xFE2
  6492                           fsr1l	equ	0xFE1
  6493                           indf2	equ	0xFDF
  6494                           postinc2	equ	0xFDE
  6495                           postdec2	equ	0xFDD
  6496                           plusw2	equ	0xFDB
  6497                           fsr2h	equ	0xFDA
  6498                           fsr2l	equ	0xFD9
  6499                           status	equ	0xFD8
  6500                           
  6501 ;; *************** function _Hcsr04_Trigger *****************
  6502 ;; Defined at:
  6503 ;;		line 28 in file "hcsr04.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;		None
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      void 
  6510 ;; Registers used:
  6511 ;;		wreg
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6517 ;;      Params:         0       0       0       0       0       0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0
  6520 ;;      Totals:         0       0       0       0       0       0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    2
  6524 ;; This function calls:
  6525 ;;		Nothing
  6526 ;; This function is called by:
  6527 ;;		_AvgMeasure
  6528 ;;		_measure
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text30
  6533  002252                     __ptext30:
  6534                           	opt stack 0
  6535  002252                     _Hcsr04_Trigger:
  6536                           	opt stack 0
  6537  002252  FFFF               	dw	65535	; assembler added errata NOP
  6538                           
  6539                           ;hcsr04.c: 30: LATDbits.LD0 = 1;
  6540                           
  6541                           ;incstack = 0
  6542  002254  808C               	bsf	3980,0,c	;volatile
  6543                           
  6544                           ;hcsr04.c: 31: _delay((unsigned long)((10)*(32000000/4000000.0)));
  6545  002256  0E14               	movlw	20
  6546  002258                     u3157:
  6547  002258  FFFF               	dw	65535	; errata NOP
  6548  00225A  2EE8               	decfsz	wreg,f,c
  6549  00225C  D7FD               	bra	u3157
  6550                           
  6551                           ;hcsr04.c: 32: LATDbits.LD0 = 0;
  6552  00225E  908C               	bcf	3980,0,c	;volatile
  6553  002260  0012               	return		;funcret
  6554  002262  FFFF               	dw	65535	; errata NOP
  6555  002264                     __end_of_Hcsr04_Trigger:
  6556                           	opt stack 0
  6557                           tblptru	equ	0xFF8
  6558                           tblptrh	equ	0xFF7
  6559                           tblptrl	equ	0xFF6
  6560                           tablat	equ	0xFF5
  6561                           intcon	equ	0xFF2
  6562                           indf0	equ	0xFEF
  6563                           postinc0	equ	0xFEE
  6564                           fsr0h	equ	0xFEA
  6565                           fsr0l	equ	0xFE9
  6566                           wreg	equ	0xFE8
  6567                           indf1	equ	0xFE7
  6568                           fsr1h	equ	0xFE2
  6569                           fsr1l	equ	0xFE1
  6570                           indf2	equ	0xFDF
  6571                           postinc2	equ	0xFDE
  6572                           postdec2	equ	0xFDD
  6573                           plusw2	equ	0xFDB
  6574                           fsr2h	equ	0xFDA
  6575                           fsr2l	equ	0xFD9
  6576                           status	equ	0xFD8
  6577                           
  6578 ;; *************** function _ISR *****************
  6579 ;; Defined at:
  6580 ;;		line 250 in file "main.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6594 ;;      Params:         0       0       0       0       0       0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0
  6596 ;;      Temps:         14       0       0       0       0       0       0
  6597 ;;      Totals:        14       0       0       0       0       0       0
  6598 ;;Total ram usage:       14 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    1
  6601 ;; This function calls:
  6602 ;;		_CANIntStatus
  6603 ;;		i2_CANIntClear
  6604 ;; This function is called by:
  6605 ;;		Interrupt level 2
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	intcode
  6610  000008                     __pintcode:
  6611                           	opt stack 0
  6612  000008                     _ISR:
  6613                           	opt stack 0
  6614  000008  FFFF               	dw	65535	; assembler added errata NOP
  6615                           
  6616                           ;incstack = 0
  6617  00000A  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6618  00000C  CFFA F002          	movff	pclath,??_ISR
  6619  000010  CFFB F003          	movff	pclatu,??_ISR+1
  6620  000014  CFE9 F004          	movff	fsr0l,??_ISR+2
  6621  000018  CFEA F005          	movff	fsr0h,??_ISR+3
  6622  00001C  CFE1 F006          	movff	fsr1l,??_ISR+4
  6623  000020  CFE2 F007          	movff	fsr1h,??_ISR+5
  6624  000024  CFD9 F008          	movff	fsr2l,??_ISR+6
  6625  000028  CFDA F009          	movff	fsr2h,??_ISR+7
  6626  00002C  CFF3 F00A          	movff	prodl,??_ISR+8
  6627  000030  CFF4 F00B          	movff	prodh,??_ISR+9
  6628  000034  CFF6 F00C          	movff	tblptrl,??_ISR+10
  6629  000038  CFF7 F00D          	movff	tblptrh,??_ISR+11
  6630  00003C  CFF8 F00E          	movff	tblptru,??_ISR+12
  6631  000040  CFF5 F00F          	movff	tablat,??_ISR+13
  6632                           
  6633                           ;main.c: 254: ui8Status = CANIntStatus();
  6634  000044  ECC3  F010         	call	_CANIntStatus	;wreg free
  6635  000048  6E4E               	movwf	_ui8Status,c	;volatile
  6636                           
  6637                           ;main.c: 257: if( ((ui8Status & 1<<0) == 1<<0) || ((ui8Status & 1<<1) == 1<<1) )
  6638  00004A  A04E               	btfss	_ui8Status,0,c	;volatile
  6639  00004C  B24E               	btfsc	_ui8Status,1,c	;volatile
  6640  00004E  D001               	goto	i2l2799
  6641  000050  D007               	goto	i2l84
  6642  000052                     i2l2799:
  6643  000052  FFFF               	dw	65535	; assembler added errata NOP
  6644                           
  6645                           ;main.c: 258: {
  6646                           ;main.c: 259: bRxMsgFlag = 1;
  6647  000054  0E01               	movlw	1
  6648  000056  0100               	movlb	0	; () banked
  6649  000058  6FB4               	movwf	_bRxMsgFlag& (0+255),b	;volatile
  6650                           
  6651                           ; BSR set to: 0
  6652                           ;main.c: 260: CANIntClear(ui8Status);
  6653  00005A  504E               	movf	_ui8Status,w,c	;volatile
  6654  00005C  ECBB  F00E         	call	i2_CANIntClear
  6655  000060                     i2l84:
  6656  000060  FFFF               	dw	65535	; assembler added errata NOP
  6657                           
  6658                           ;main.c: 267: if( INTCONbits.RBIF == 1 )
  6659  000062  A0F2               	btfss	intcon,0,c	;volatile
  6660  000064  D00C               	goto	i2l88
  6661                           
  6662                           ;main.c: 268: {
  6663                           ;main.c: 270: if( PORTBbits.RB4 == 1 )
  6664  000066  A881               	btfss	3969,4,c	;volatile
  6665  000068  D006               	goto	i2l86
  6666                           
  6667                           ;main.c: 271: {
  6668                           ;main.c: 273: TMR1 = 0;
  6669  00006A  0E00               	movlw	0
  6670  00006C  6ECF               	movwf	4047,c	;volatile
  6671  00006E  0E00               	movlw	0
  6672  000070  6ECE               	movwf	4046,c	;volatile
  6673                           
  6674                           ;main.c: 274: TMR1ON = 1;
  6675  000072  80CD               	bsf	4045,0,c	;volatile
  6676                           
  6677                           ;main.c: 275: }
  6678  000074  D002               	goto	i2l87
  6679  000076                     i2l86:
  6680  000076  FFFF               	dw	65535	; assembler added errata NOP
  6681                           
  6682                           ;main.c: 276: else
  6683                           ;main.c: 277: {
  6684                           ;main.c: 279: TMR1ON = 0;
  6685  000078  90CD               	bcf	4045,0,c	;volatile
  6686  00007A                     i2l87:
  6687  00007A  FFFF               	dw	65535	; assembler added errata NOP
  6688                           
  6689                           ;main.c: 280: }
  6690                           ;main.c: 283: INTCONbits.RBIF = 0;
  6691  00007C  90F2               	bcf	intcon,0,c	;volatile
  6692  00007E                     i2l88:
  6693  00007E  FFFF               	dw	65535	; assembler added errata NOP
  6694                           
  6695                           ;main.c: 289: if( PIR1bits.CCP1IF == 1 )
  6696  000080  A49E               	btfss	3998,2,c	;volatile
  6697  000082  D008               	goto	i2l91
  6698                           
  6699                           ;main.c: 290: {
  6700                           ;main.c: 293: tickcntr++;
  6701  000084  0E01               	movlw	1
  6702  000086  0100               	movlb	0	; () banked
  6703  000088  27AD               	addwf	_tickcntr& (0+255),f,b	;volatile
  6704  00008A  0E00               	movlw	0
  6705  00008C  23AE               	addwfc	(_tickcntr+1)& (0+255),f,b	;volatile
  6706  00008E  23AF               	addwfc	(_tickcntr+2)& (0+255),f,b	;volatile
  6707  000090  23B0               	addwfc	(_tickcntr+3)& (0+255),f,b	;volatile
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;main.c: 296: PIR1bits.CCP1IF = 0;
  6711  000092  949E               	bcf	3998,2,c	;volatile
  6712  000094                     i2l91:
  6713  000094  FFFF               	dw	65535	; assembler added errata NOP
  6714  000096  C00F  FFF5         	movff	??_ISR+13,tablat
  6715  00009A  C00E  FFF8         	movff	??_ISR+12,tblptru
  6716  00009E  C00D  FFF7         	movff	??_ISR+11,tblptrh
  6717  0000A2  C00C  FFF6         	movff	??_ISR+10,tblptrl
  6718  0000A6  C00B  FFF4         	movff	??_ISR+9,prodh
  6719  0000AA  C00A  FFF3         	movff	??_ISR+8,prodl
  6720  0000AE  C009  FFDA         	movff	??_ISR+7,fsr2h
  6721  0000B2  C008  FFD9         	movff	??_ISR+6,fsr2l
  6722  0000B6  C007  FFE2         	movff	??_ISR+5,fsr1h
  6723  0000BA  C006  FFE1         	movff	??_ISR+4,fsr1l
  6724  0000BE  C005  FFEA         	movff	??_ISR+3,fsr0h
  6725  0000C2  C004  FFE9         	movff	??_ISR+2,fsr0l
  6726  0000C6  C003  FFFB         	movff	??_ISR+1,pclatu
  6727  0000CA  C002  FFFA         	movff	??_ISR,pclath
  6728  0000CE  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6729  0000D0  0011               	retfie		f
  6730  0000D2  FFFF               	dw	65535	; errata NOP
  6731  0000D4                     __end_of_ISR:
  6732                           	opt stack 0
  6733                           pclatu	equ	0xFFB
  6734                           pclath	equ	0xFFA
  6735                           tblptru	equ	0xFF8
  6736                           tblptrh	equ	0xFF7
  6737                           tblptrl	equ	0xFF6
  6738                           tablat	equ	0xFF5
  6739                           prodh	equ	0xFF4
  6740                           prodl	equ	0xFF3
  6741                           intcon	equ	0xFF2
  6742                           indf0	equ	0xFEF
  6743                           postinc0	equ	0xFEE
  6744                           fsr0h	equ	0xFEA
  6745                           fsr0l	equ	0xFE9
  6746                           wreg	equ	0xFE8
  6747                           indf1	equ	0xFE7
  6748                           fsr1h	equ	0xFE2
  6749                           fsr1l	equ	0xFE1
  6750                           indf2	equ	0xFDF
  6751                           postinc2	equ	0xFDE
  6752                           postdec2	equ	0xFDD
  6753                           plusw2	equ	0xFDB
  6754                           fsr2h	equ	0xFDA
  6755                           fsr2l	equ	0xFD9
  6756                           status	equ	0xFD8
  6757                           
  6758 ;; *************** function i2_CANIntClear *****************
  6759 ;; Defined at:
  6760 ;;		line 554 in file "CAN.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;  type            1    wreg     unsigned char 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  type            1    0[COMRAM] unsigned char 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2, status,0
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6774 ;;      Params:         0       0       0       0       0       0       0
  6775 ;;      Locals:         1       0       0       0       0       0       0
  6776 ;;      Temps:          0       0       0       0       0       0       0
  6777 ;;      Totals:         1       0       0       0       0       0       0
  6778 ;;Total ram usage:        1 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_ISR
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text32
  6788  001D76                     __ptext32:
  6789                           	opt stack 0
  6790  001D76                     i2_CANIntClear:
  6791                           	opt stack 0
  6792  001D76  FFFF               	dw	65535	; assembler added errata NOP
  6793                           
  6794                           ;incstack = 0
  6795                           ;i2CANIntClear@type stored from wreg
  6796  001D78  6E01               	movwf	i2CANIntClear@type,c
  6797                           
  6798                           ;CAN.c: 556: if( (type & 1<<0) == 1 )
  6799  001D7A  A001               	btfss	i2CANIntClear@type,0,c
  6800  001D7C  D003               	goto	i2l466
  6801                           
  6802                           ;CAN.c: 557: {
  6803                           ;CAN.c: 558: PIR3 = (PIR3 & ~(1<<0)) | (1<<0 & 0);
  6804  001D7E  50A4               	movf	4004,w,c	;volatile
  6805  001D80  0BFE               	andlw	254
  6806  001D82  6EA4               	movwf	4004,c	;volatile
  6807  001D84                     i2l466:
  6808  001D84  FFFF               	dw	65535	; assembler added errata NOP
  6809                           
  6810                           ;CAN.c: 562: if( (type & 1<<1) == 2 )
  6811  001D86  A201               	btfss	i2CANIntClear@type,1,c
  6812  001D88  D003               	goto	i2l2705
  6813                           
  6814                           ;CAN.c: 563: {
  6815                           ;CAN.c: 564: PIR3 = (PIR3 & ~(1<<1)) | (1<<1 & 0);
  6816  001D8A  50A4               	movf	4004,w,c	;volatile
  6817  001D8C  0BFD               	andlw	253
  6818  001D8E  6EA4               	movwf	4004,c	;volatile
  6819  001D90                     i2l2705:
  6820  001D90  FFFF               	dw	65535	; assembler added errata NOP
  6821                           
  6822                           ;CAN.c: 568: if( (type & 1<<2) == 3 )
  6823  001D92  5001               	movf	i2CANIntClear@type,w,c
  6824  001D94  0B04               	andlw	4
  6825  001D96  0A03               	xorlw	3
  6826  001D98  A4D8               	btfss	status,2,c
  6827  001D9A  D003               	goto	i2l2709
  6828                           
  6829                           ;CAN.c: 569: {
  6830                           ;CAN.c: 570: PIR3 = (PIR3 & ~(1<<2)) | (1<<2 & 0);
  6831  001D9C  50A4               	movf	4004,w,c	;volatile
  6832  001D9E  0BFB               	andlw	251
  6833  001DA0  6EA4               	movwf	4004,c	;volatile
  6834  001DA2                     i2l2709:
  6835  001DA2  FFFF               	dw	65535	; assembler added errata NOP
  6836                           
  6837                           ;CAN.c: 574: if( (type & 1<<3) == 4 )
  6838  001DA4  5001               	movf	i2CANIntClear@type,w,c
  6839  001DA6  0B08               	andlw	8
  6840  001DA8  0A04               	xorlw	4
  6841  001DAA  A4D8               	btfss	status,2,c
  6842  001DAC  D003               	goto	i2l2713
  6843                           
  6844                           ;CAN.c: 575: {
  6845                           ;CAN.c: 576: PIR3 = (PIR3 & ~(1<<3)) | (1<<3 & 0);
  6846  001DAE  50A4               	movf	4004,w,c	;volatile
  6847  001DB0  0BF7               	andlw	247
  6848  001DB2  6EA4               	movwf	4004,c	;volatile
  6849  001DB4                     i2l2713:
  6850  001DB4  FFFF               	dw	65535	; assembler added errata NOP
  6851                           
  6852                           ;CAN.c: 580: if( (type & 1<<4) == 5 )
  6853  001DB6  5001               	movf	i2CANIntClear@type,w,c
  6854  001DB8  0B10               	andlw	16
  6855  001DBA  0A05               	xorlw	5
  6856  001DBC  A4D8               	btfss	status,2,c
  6857  001DBE  D003               	goto	i2l2717
  6858                           
  6859                           ;CAN.c: 581: {
  6860                           ;CAN.c: 582: PIR3 = (PIR3 & ~(1<<4)) | (1<<4 & 0);
  6861  001DC0  50A4               	movf	4004,w,c	;volatile
  6862  001DC2  0BEF               	andlw	239
  6863  001DC4  6EA4               	movwf	4004,c	;volatile
  6864  001DC6                     i2l2717:
  6865  001DC6  FFFF               	dw	65535	; assembler added errata NOP
  6866                           
  6867                           ;CAN.c: 586: if( (type & 1<<5) == 6 )
  6868  001DC8  5001               	movf	i2CANIntClear@type,w,c
  6869  001DCA  0B20               	andlw	32
  6870  001DCC  0A06               	xorlw	6
  6871  001DCE  A4D8               	btfss	status,2,c
  6872  001DD0  D003               	goto	i2l2721
  6873                           
  6874                           ;CAN.c: 587: {
  6875                           ;CAN.c: 588: PIR3 = (PIR3 & ~(1<<5)) | (1<<5 & 0);
  6876  001DD2  50A4               	movf	4004,w,c	;volatile
  6877  001DD4  0BDF               	andlw	223
  6878  001DD6  6EA4               	movwf	4004,c	;volatile
  6879  001DD8                     i2l2721:
  6880  001DD8  FFFF               	dw	65535	; assembler added errata NOP
  6881                           
  6882                           ;CAN.c: 592: if( (type & 1<<6) == 7 )
  6883  001DDA  5001               	movf	i2CANIntClear@type,w,c
  6884  001DDC  0B40               	andlw	64
  6885  001DDE  0A07               	xorlw	7
  6886  001DE0  A4D8               	btfss	status,2,c
  6887  001DE2  D003               	goto	i2l2725
  6888                           
  6889                           ;CAN.c: 593: {
  6890                           ;CAN.c: 594: PIR3 = (PIR3 & ~(1<<6)) | (1<<6 & 0);
  6891  001DE4  50A4               	movf	4004,w,c	;volatile
  6892  001DE6  0BBF               	andlw	191
  6893  001DE8  6EA4               	movwf	4004,c	;volatile
  6894  001DEA                     i2l2725:
  6895  001DEA  FFFF               	dw	65535	; assembler added errata NOP
  6896                           
  6897                           ;CAN.c: 598: if( (type & 1<<7) == 8 )
  6898  001DEC  5001               	movf	i2CANIntClear@type,w,c
  6899  001DEE  0B80               	andlw	128
  6900  001DF0  0A08               	xorlw	8
  6901  001DF2  A4D8               	btfss	status,2,c
  6902  001DF4  D003               	goto	i2l481
  6903                           
  6904                           ;CAN.c: 599: {
  6905                           ;CAN.c: 600: PIR3 = (PIR3 & ~(1<<7)) | (1<<7 & 0);
  6906  001DF6  50A4               	movf	4004,w,c	;volatile
  6907  001DF8  0B7F               	andlw	127
  6908  001DFA  6EA4               	movwf	4004,c	;volatile
  6909  001DFC                     i2l481:
  6910  001DFC  FFFF               	dw	65535	; assembler added errata NOP
  6911  001DFE  0012               	return		;funcret
  6912  001E00  FFFF               	dw	65535	; errata NOP
  6913  001E02                     __end_ofi2_CANIntClear:
  6914                           	opt stack 0
  6915                           pclatu	equ	0xFFB
  6916                           pclath	equ	0xFFA
  6917                           tblptru	equ	0xFF8
  6918                           tblptrh	equ	0xFF7
  6919                           tblptrl	equ	0xFF6
  6920                           tablat	equ	0xFF5
  6921                           prodh	equ	0xFF4
  6922                           prodl	equ	0xFF3
  6923                           intcon	equ	0xFF2
  6924                           indf0	equ	0xFEF
  6925                           postinc0	equ	0xFEE
  6926                           fsr0h	equ	0xFEA
  6927                           fsr0l	equ	0xFE9
  6928                           wreg	equ	0xFE8
  6929                           indf1	equ	0xFE7
  6930                           fsr1h	equ	0xFE2
  6931                           fsr1l	equ	0xFE1
  6932                           indf2	equ	0xFDF
  6933                           postinc2	equ	0xFDE
  6934                           postdec2	equ	0xFDD
  6935                           plusw2	equ	0xFDB
  6936                           fsr2h	equ	0xFDA
  6937                           fsr2l	equ	0xFD9
  6938                           status	equ	0xFD8
  6939                           
  6940 ;; *************** function _CANIntStatus *****************
  6941 ;; Defined at:
  6942 ;;		line 607 in file "CAN.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;		None
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  status          1    0[COMRAM] unsigned char 
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      unsigned char 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6956 ;;      Params:         0       0       0       0       0       0       0
  6957 ;;      Locals:         1       0       0       0       0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0       0
  6959 ;;      Totals:         1       0       0       0       0       0       0
  6960 ;;Total ram usage:        1 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_ISR
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text33
  6970  002186                     __ptext33:
  6971                           	opt stack 0
  6972  002186                     _CANIntStatus:
  6973                           	opt stack 0
  6974  002186  FFFF               	dw	65535	; assembler added errata NOP
  6975                           
  6976                           ;CAN.c: 609: uint8_t status = 0;
  6977                           
  6978                           ;incstack = 0
  6979  002188  0E00               	movlw	0
  6980  00218A  6E01               	movwf	CANIntStatus@status,c
  6981                           
  6982                           ;CAN.c: 611: status |= PIR3 & 1<<0;
  6983  00218C  50A4               	movf	4004,w,c	;volatile
  6984  00218E  0B01               	andlw	1
  6985  002190  1201               	iorwf	CANIntStatus@status,f,c
  6986                           
  6987                           ;CAN.c: 612: status |= PIR3 & 1<<1;
  6988  002192  50A4               	movf	4004,w,c	;volatile
  6989  002194  0B02               	andlw	2
  6990  002196  1201               	iorwf	CANIntStatus@status,f,c
  6991                           
  6992                           ;CAN.c: 613: status |= PIR3 & 1<<2;
  6993  002198  50A4               	movf	4004,w,c	;volatile
  6994  00219A  0B04               	andlw	4
  6995  00219C  1201               	iorwf	CANIntStatus@status,f,c
  6996                           
  6997                           ;CAN.c: 614: status |= PIR3 & 1<<3;
  6998  00219E  50A4               	movf	4004,w,c	;volatile
  6999  0021A0  0B08               	andlw	8
  7000  0021A2  1201               	iorwf	CANIntStatus@status,f,c
  7001                           
  7002                           ;CAN.c: 615: status |= PIR3 & 1<<4;
  7003  0021A4  50A4               	movf	4004,w,c	;volatile
  7004  0021A6  0B10               	andlw	16
  7005  0021A8  1201               	iorwf	CANIntStatus@status,f,c
  7006                           
  7007                           ;CAN.c: 616: status |= PIR3 & 1<<5;
  7008  0021AA  50A4               	movf	4004,w,c	;volatile
  7009  0021AC  0B20               	andlw	32
  7010  0021AE  1201               	iorwf	CANIntStatus@status,f,c
  7011                           
  7012                           ;CAN.c: 617: status |= PIR3 & 1<<6;
  7013  0021B0  50A4               	movf	4004,w,c	;volatile
  7014  0021B2  0B40               	andlw	64
  7015  0021B4  1201               	iorwf	CANIntStatus@status,f,c
  7016                           
  7017                           ;CAN.c: 618: status |= PIR3 & 1<<7;
  7018  0021B6  50A4               	movf	4004,w,c	;volatile
  7019  0021B8  0B80               	andlw	128
  7020  0021BA  1201               	iorwf	CANIntStatus@status,f,c
  7021                           
  7022                           ;CAN.c: 620: return status;
  7023  0021BC  5001               	movf	CANIntStatus@status,w,c
  7024  0021BE  0012               	return		;funcret
  7025  0021C0  FFFF               	dw	65535	; errata NOP
  7026  0021C2                     __end_of_CANIntStatus:
  7027                           	opt stack 0
  7028                           pclatu	equ	0xFFB
  7029                           pclath	equ	0xFFA
  7030                           tblptru	equ	0xFF8
  7031                           tblptrh	equ	0xFF7
  7032                           tblptrl	equ	0xFF6
  7033                           tablat	equ	0xFF5
  7034                           prodh	equ	0xFF4
  7035                           prodl	equ	0xFF3
  7036                           intcon	equ	0xFF2
  7037                           indf0	equ	0xFEF
  7038                           postinc0	equ	0xFEE
  7039                           fsr0h	equ	0xFEA
  7040                           fsr0l	equ	0xFE9
  7041                           wreg	equ	0xFE8
  7042                           indf1	equ	0xFE7
  7043                           fsr1h	equ	0xFE2
  7044                           fsr1l	equ	0xFE1
  7045                           indf2	equ	0xFDF
  7046                           postinc2	equ	0xFDE
  7047                           postdec2	equ	0xFDD
  7048                           plusw2	equ	0xFDB
  7049                           fsr2h	equ	0xFDA
  7050                           fsr2l	equ	0xFD9
  7051                           status	equ	0xFD8
  7052                           pclatu	equ	0xFFB
  7053                           pclath	equ	0xFFA
  7054                           tblptru	equ	0xFF8
  7055                           tblptrh	equ	0xFF7
  7056                           tblptrl	equ	0xFF6
  7057                           tablat	equ	0xFF5
  7058                           prodh	equ	0xFF4
  7059                           prodl	equ	0xFF3
  7060                           intcon	equ	0xFF2
  7061                           indf0	equ	0xFEF
  7062                           postinc0	equ	0xFEE
  7063                           fsr0h	equ	0xFEA
  7064                           fsr0l	equ	0xFE9
  7065                           wreg	equ	0xFE8
  7066                           indf1	equ	0xFE7
  7067                           fsr1h	equ	0xFE2
  7068                           fsr1l	equ	0xFE1
  7069                           indf2	equ	0xFDF
  7070                           postinc2	equ	0xFDE
  7071                           postdec2	equ	0xFDD
  7072                           plusw2	equ	0xFDB
  7073                           fsr2h	equ	0xFDA
  7074                           fsr2l	equ	0xFD9
  7075                           status	equ	0xFD8
  7076                           
  7077                           	psect	rparam
  7078  0000                     pclatu	equ	0xFFB
  7079                           pclath	equ	0xFFA
  7080                           tblptru	equ	0xFF8
  7081                           tblptrh	equ	0xFF7
  7082                           tblptrl	equ	0xFF6
  7083                           tablat	equ	0xFF5
  7084                           prodh	equ	0xFF4
  7085                           prodl	equ	0xFF3
  7086                           intcon	equ	0xFF2
  7087                           indf0	equ	0xFEF
  7088                           postinc0	equ	0xFEE
  7089                           fsr0h	equ	0xFEA
  7090                           fsr0l	equ	0xFE9
  7091                           wreg	equ	0xFE8
  7092                           indf1	equ	0xFE7
  7093                           fsr1h	equ	0xFE2
  7094                           fsr1l	equ	0xFE1
  7095                           indf2	equ	0xFDF
  7096                           postinc2	equ	0xFDE
  7097                           postdec2	equ	0xFDD
  7098                           plusw2	equ	0xFDB
  7099                           fsr2h	equ	0xFDA
  7100                           fsr2l	equ	0xFD9
  7101                           status	equ	0xFD8
  7102                           
  7103                           	psect	temp
  7104  000050                     btemp:
  7105                           	opt stack 0
  7106  000050                     	ds	1
  7107  0000                     int$flags	set	btemp
  7108                           pclatu	equ	0xFFB
  7109                           pclath	equ	0xFFA
  7110                           tblptru	equ	0xFF8
  7111                           tblptrh	equ	0xFF7
  7112                           tblptrl	equ	0xFF6
  7113                           tablat	equ	0xFF5
  7114                           prodh	equ	0xFF4
  7115                           prodl	equ	0xFF3
  7116                           intcon	equ	0xFF2
  7117                           indf0	equ	0xFEF
  7118                           postinc0	equ	0xFEE
  7119                           fsr0h	equ	0xFEA
  7120                           fsr0l	equ	0xFE9
  7121                           wreg	equ	0xFE8
  7122                           indf1	equ	0xFE7
  7123                           fsr1h	equ	0xFE2
  7124                           fsr1l	equ	0xFE1
  7125                           indf2	equ	0xFDF
  7126                           postinc2	equ	0xFDE
  7127                           postdec2	equ	0xFDD
  7128                           plusw2	equ	0xFDB
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    2
    Data        0
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      79
    BANK0           160     73     107
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Reply.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageSend@data_ptr	PTR volatile unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageSend@data_reg_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@psMsgObject.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageSend@psMsgObject	PTR struct . size(2) Largest target is 19
		 -> main@Reply(BANK0[18]), 

    CANMessageSend@TXBD0_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBDLC_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBEIDL_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBEIDH_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBSIDL_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBSIDH_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXBCON_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageSend@TXB_BASE_ADDRESS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TXB0CON(SFR[1]), 

    CANMessageGet@data_ptr_977	PTR volatile unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageGet@rxBuffer_ptr_976	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXB1D0(SFR[1]), 

    CANMessageGet@data_ptr	PTR volatile unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageGet@rxBuffer_ptr	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXB0D0(SFR_1[1]), 

    CANMessageGet@psMsgObject.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANMessageGet@psMsgObject	PTR struct . size(2) Largest target is 19
		 -> rxCANMessage(BANK0[18]), 

    CANSetFilter@pObject.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANSetFilter@pObject	PTR struct . size(2) Largest target is 19
		 -> rxCANMessage(BANK0[18]), 

    CANSetFilter@RXFEIDL_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetFilter@RXFEIDH_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetFilter@RXFSIDL_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetFilter@RXFSIDH_PTR	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetFilter@FILTER_BASE_ADDRESS	PTR volatile unsigned char  size(2) Largest target is 1
		 -> RXF5SIDH(SFR[1]), RXF4SIDH(SFR[1]), RXF3SIDH(SFR[1]), RXF2SIDH(SFR[1]), 
		 -> RXF1SIDH(SFR[1]), RXF0SIDH(SFR[1]), NULL(NULL[0]), 

    CANSetMask@pObject.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    CANSetMask@pObject	PTR struct . size(2) Largest target is 19
		 -> rxCANMessage(BANK0[18]), 

    LCD_DispString@StrPtr	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[4]), str_dist(BANK0[4]), STR_1(CODE[16]), 

    Reply.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    itoa_new@str	PTR unsigned char  size(2) Largest target is 4
		 -> str_dist(BANK0[4]), 

    S21$pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 

    rxCANMessage.pui8MsgData	PTR unsigned char  size(2) Largest target is 2
		 -> main@sync_period(BANK0[2]), main@ui16ReplyData(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_AvgMeasure
    _itoa_new->___lwdiv
    _LCD_Init->_LCD_GoToXy
    _LCD_GoToXy->_SendCommand
    _SendCommand->_GPIOPinWrite
    _LCD_DispString->_SendData
    _SendData->_GPIOPinWrite
    _ComInit->_CANSetFilter
    _AvgMeasure->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft

Critical Paths under _ISR in COMRAM

    _ISR->_CANIntStatus
    _ISR->i2_CANIntClear

Critical Paths under _main in BANK0

    _main->_CANMessageGet
    _AvgMeasure->___fttol

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   26608
                                             37 BANK0     36    36      0
                         _AvgMeasure
                      _CANMessageGet
                     _CANMessageSend
                         _Clock_Init
                            _ComInit
                        _Hcsr04_Init
                     _LCD_DispString
                         _LCD_GoToXy
                           _LCD_Init
                           _LedsInit
                           _itoa_new
 ---------------------------------------------------------------------------------
 (1) _itoa_new                                             6     2      4    1557
                                             22 COMRAM     6     2      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     415
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _LedsInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    8148
                                             22 COMRAM     2     2      0
              _GPIOPinTypeGPIOOutput
                       _GPIOPinWrite
                         _LCD_GoToXy
                        _SendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_GoToXy                                           2     1      1    2852
                                             20 COMRAM     2     1      1
                        _SendCommand
 ---------------------------------------------------------------------------------
 (2) _SendCommand                                          1     1      0    2572
                                             19 COMRAM     1     1      0
                       _GPIOPinWrite
 ---------------------------------------------------------------------------------
 (2) _GPIOPinTypeGPIOOutput                                2     1      1     196
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _LCD_DispString                                       2     0      2    2809
                                             20 COMRAM     2     0      2
                           _SendData
 ---------------------------------------------------------------------------------
 (2) _SendData                                             1     1      0    2572
                                             19 COMRAM     1     1      0
                       _GPIOPinWrite
 ---------------------------------------------------------------------------------
 (3) _GPIOPinWrite                                         4     2      2    2528
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Hcsr04_Init                                          0     0      0       0
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (2) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ComInit                                              0     0      0    1673
                            _CANInit
                        _CANIntClear
                       _CANIntEnable
                     _CANSetBaudRate
                       _CANSetFilter
                         _CANSetMask
                         _CANSetMode
 ---------------------------------------------------------------------------------
 (2) _CANSetMode                                           3     3      0      44
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _CANSetMask                                          10     6      4     610
                                             15 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) _CANSetFilter                                        17    15      2     515
                                             15 COMRAM    17    15      2
 ---------------------------------------------------------------------------------
 (2) _CANSetBaudRate                                       4     0      4     152
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _CANIntEnable                                         1     1      0     176
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANIntClear                                          1     1      0     176
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     8      0      69
                                             15 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _CANMessageSend                                      33    30      3    1178
                                             15 COMRAM    33    30      3
 ---------------------------------------------------------------------------------
 (1) _CANMessageGet                                       53    50      3     884
                                             15 COMRAM    16    13      3
                                              0 BANK0     37    37      0
 ---------------------------------------------------------------------------------
 (1) _AvgMeasure                                           6     4      2    7159
                                             50 COMRAM     3     1      2
                                              6 BANK0      3     3      0
                     _Hcsr04_Trigger
                            ___ftdiv
                            ___fttol
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2606
                                             23 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     703
                                             15 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     525
                                             41 COMRAM     9     5      4
                                              0 BANK0      6     6      0
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3186
                                             26 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             15 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _Hcsr04_Trigger                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0     207
                                              1 COMRAM    14    14      0
                       _CANIntStatus
                      i2_CANIntClear
 ---------------------------------------------------------------------------------
 (6) i2_CANIntClear                                        1     1      0     176
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _CANIntStatus                                         1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AvgMeasure
     _Hcsr04_Trigger
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwdiv
     ___lwtoft
       ___ftpack
   _CANMessageGet
   _CANMessageSend
   _Clock_Init
   _ComInit
     _CANInit
     _CANIntClear
     _CANIntEnable
     _CANSetBaudRate
     _CANSetFilter
     _CANSetMask
     _CANSetMode
   _Hcsr04_Init
     _Timer1_Init
   _LCD_DispString
     _SendData
       _GPIOPinWrite
   _LCD_GoToXy
     _SendCommand
       _GPIOPinWrite
   _LCD_Init
     _GPIOPinTypeGPIOOutput
     _GPIOPinWrite
     _LCD_GoToXy
       _SendCommand
         _GPIOPinWrite
     _SendCommand
       _GPIOPinWrite
   _LedsInit
   _itoa_new
     ___lwdiv
     ___lwmod

 _ISR (ROOT)
   _CANIntStatus
   i2_CANIntClear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     49      6B       4       66.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      4F       1       84.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA       9        0.0%
DATA                 0      0      BA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Aug 10 17:33:32 2017

                                                                        ?_LCD_GoToXy 0015  
                                                               __end_of_CANSetFilter 166A  
                                                             __end_of_CANSetBaudRate 1EF8  
                                                                    main@sync_period 0093  
                                                                __end_of_Hcsr04_Init 2252  
                                                                                 l73 1462  
                                                                                 l74 1470  
                                                             __end_of_LCD_DispString 1FC2  
                                                                        __CFG_BOR$ON 000000  
                                                                       __CFG_CP0$OFF 000000  
                                                                       __CFG_CP1$OFF 000000  
                                                                       __CFG_CP2$OFF 000000  
                                                                       __CFG_CP3$OFF 000000  
                                                                                l141 1F5C  
                                                                                l151 1CE4  
                                                                                l423 0F4C  
                                                                                l408 0C04  
                                                                                l443 1C52  
                                                                                l371 124A  
                                                                                l428 1BCC  
                                                                                l188 21E6  
                                                                                l390 0826  
                                                                                l384 1664  
                                                                                l376 14DA  
                                                                                l481 1D70  
                                                                                l466 1CF8  
                                                                                l821 185A  
                                                                                l399 0AF6  
                                                                                l824 1828  
                                                                                l755 191E  
                                                                                l766 18FE  
                                                                                l944 2014  
                                                                                l857 1774  
                                                                                l954 2178  
                                                                                _GIE 007F97  
                                                                       __CFG_CPB$OFF 000000  
                                                                       __CFG_CPD$OFF 000000  
                                                                                _ISR 0008  
                                                                       __CFG_BORV$25 000000  
                                                                                wreg 000FE8  
                                                                    __end_of_CANInit 228E  
                                                          CANMessageSend@TXBEIDH_PTR 001B  
                                                          CANMessageSend@TXBEIDL_PTR 001D  
                                                                     _Hcsr04_Trigger 2252  
                                                                       __CFG_LVP$OFF 000000  
                                                                               ?_ISR 0001  
                                                                       ___ftdiv@cntr 0024  
                                                                       ___ftdiv@sign 0029  
                                                                       __CFG_WDT$OFF 000000  
                                                                               l2101 21D6  
                                                                               l2111 1D04  
                                                                               l2031 1C5E  
                                                                               l2201 1EE4  
                                                                               l2033 1C72  
                                                                               l2131 1D5E  
                                                                               l2123 1D3A  
                                                                               l2115 1D16  
                                                                               l2211 101C  
                                                                               l2035 1C86  
                                                                               l2043 1CC2  
                                                                               l3013 19AC  
                                                                               l2221 118C  
                                                                               l2213 10DA  
                                                                               l2037 1C9A  
                                                                               l2141 1F16  
                                                                               l2127 1D4C  
                                                                               l2119 1D28  
                                                                               l2231 1498  
                                                                               l2039 1CAE  
                                                                               l2143 1F22  
                                                                               l3041 086E  
                                                                               l2233 149E  
                                                                               l2225 1486  
                                                                               l2145 1F2E  
                                                                               l2137 1EFE  
                                                                               l2401 2146  
                                                                               l3035 06D0  
                                                                               l2235 14A4  
                                                                               l2227 148C  
                                                                               l2139 1F0A  
                                                                               l2403 2150  
                                                                               l3123 12F0  
                                                                               l3061 0900  
                                                                               l3029 064E  
                                                                               l2229 1492  
                                                                               l2149 1F3A  
                                                                               l2405 2156  
                                                                               l3133 133A  
                                                                               l3047 0896  
                                                                               l3055 08B8  
                                                                               l2271 1C16  
                                                                               l2263 1BEE  
                                                                               l2247 1598  
                                                                               l2239 14B2  
                                                                               l2183 20FE  
                                                                               l3073 0B48  
                                                                               l3057 08F6  
                                                                               l2193 1EAC  
                                                                               l2409 216C  
                                                                               l3137 1352  
                                                                               l3091 0BE0  
                                                                               l3067 0992  
                                                                               l2275 1C2A  
                                                                               l2267 1C02  
                                                                               l2259 1BDA  
                                                                               l2523 1F92  
                                                                               l3155 13B2  
                                                                               l3093 0BE6  
                                                                               l2197 1EC8  
                                                                               l2189 1E94  
                                                                               l3079 0B70  
                                                                               l3087 0B92  
                                                                               l2631 0C0E  
                                                                               l2279 1C3E  
                                                                               l2519 1F66  
                                                                               l3089 0BD0  
                                                                               l2635 0C28  
                                                                               l2645 0D3A  
                                                                               l2637 0C32  
                                                                               l2841 18C6  
                                                                               l2833 1882  
                                                                               l2843 18E6  
                                                                               l2835 188E  
                                                                               l2667 0EDA  
                                                                               l2675 0EFC  
                                                                               l2845 18F2  
                                                                               l2837 18AE  
                                                                               l2829 1872  
                                                                               l2941 1708  
                                                                               l2677 0F32  
                                                                               l2943 1712  
                                                                               l2951 1744  
                                                                               l2937 16F2  
                                                                               l2875 17B0  
                                                                               l2955 1762  
                                                                               l2947 1726  
                                                                               l2949 1738  
                                                                               l2965 1FDA  
                                                                               l2879 17C0  
                                                                               l2967 1FE4  
                                                                               l2977 2008  
                                                                               l2969 1FEA  
                                                                               l2899 1800  
                                                                               l2999 1938  
                                                                               STR_1 0603  
                                                                               STR_2 0613  
                                                                               u2300 0CF2  
                                                                               u2060 1F8A  
                                                                               _LATA 000F89  
                                                                               u2070 1FB6  
                                                                               _LATB 000F8A  
                                                                               _LATC 000F8B  
                                                                               u2320 0DC2  
                                                                               _LATD 000F8C  
                                                                               u2305 0CE6  
                                                                               _LATE 000F8D  
                                                                               u2330 0E0C  
                                                                               u2315 0D14  
                                                                               u3107 1B50  
                                                                               u2067 1F80  
                                                                               u2340 0E56  
                                                                               u1700 1150  
                                                                               u1540 2122  
                                                                               u2325 0DB6  
                                                                               u1525 20E8  
                                                                               u3117 1B66  
                                                                               u2077 1FAC  
                                                                               u1630 0FE0  
                                                                               u1550 2126  
                                                                               u2335 0E00  
                                                                               u1535 2108  
                                                                               u3127 1B9A  
                                                                               u3047 1E26  
                                                                               u1720 11BA  
                                                                               u2345 0E4A  
                                                                               u1705 1144  
                                                                               u3137 1BB0  
                                                                               u3057 1E5C  
                                                                               u1730 11F0  
                                                                               u1650 104A  
                                                                               u3147 1944  
                                                                               u2275 0C1A  
                                                                               u1715 116E  
                                                                               u1635 0FD4  
                                                                               u3067 1AB4  
                                                                               u1660 1080  
                                                                               u3157 2258  
                                                                               u1725 11AE  
                                                                               u1645 0FFE  
                                                                               u3077 1ACA  
                                                                               u2710 16AA  
                                                                               u1750 154E  
                                                                               u1735 11E4  
                                                                               u1655 103E  
                                                                               u3087 1AFE  
                                                                               u2641 178C  
                                                                               u1665 1074  
                                                                               u3097 1B14  
                                                                               _PIE3 000FA3  
                                                                               u1770 15C2  
                                                                               u2715 16A0  
                                                                               u1755 1542  
                                                                               u1780 15FC  
                                                                               u2661 17A6  
                                                                               u1765 1570  
                                                                               u1685 10EA  
                                                                               u1775 15B6  
                                                                               u1785 15F0  
                                                                               u2691 167C  
                                                                               u2915 0920  
                                                                               u2925 09F0  
                                                                               u2845 0662  
                                                                               u2935 0A14  
                                                                               u2855 072A  
                                                                               u2865 074A  
                                                                               _PIR3 000FA4  
                                                                               i2l91 0094  
                                                                               i2l84 0060  
                                                                               i2l86 0076  
                                                                               i2l87 007A  
                                                                               i2l88 007E  
                                                                               _TMR1 000FCE  
                                                                __size_of_CANSetMask 02E6  
                                                                __size_of_CANSetMode 005A  
                                                                       __CFG_STVR$ON 000000  
                                                                        LCD_GoToXy@x 0016  
                                                                        LCD_GoToXy@y 0015  
                                                                               _dist 00B1  
                                                                               _main 1250  
                                                                       ___ftpack@arg 0010  
                                                                       ___ftpack@exp 0013  
                                                                               fsr0h 000FEA  
                                                                               fsr1h 000FE2  
                                                                               indf0 000FEF  
                                                                               fsr2h 000FDA  
                                                                               fsr0l 000FE9  
                                                                               indf1 000FE7  
                                                                               indf2 000FDF  
                                                                               fsr1l 000FE1  
                                                                               fsr2l 000FD9  
                                                                               btemp 0050  
                                                                               prodh 000FF4  
                                                                               prodl 000FF3  
                                                                               start 00D4  
                                                                    __end_of_ComInit 2080  
                                                                      ?_GPIOPinWrite 0010  
                                                          CANMessageSend@TXBSIDH_PTR 0029  
                                                             AvgMeasure@average_dist 0067  
                                                          CANMessageSend@TXBSIDL_PTR 002F  
                                                                         _AvgMeasure 1924  
                                                                    ?_CANMessageSend 0010  
                                                                       ___param_bank 000000  
                                                            ??_GPIOPinTypeGPIOOutput 0011  
                                                                              ??_ISR 0002  
                                                                       ___fttol@exp1 0065  
                                                                       ___fttol@lval 0061  
                                                                    ?_CANSetBaudRate 0010  
                                                                         _Clock_Init 2080  
                                                                   __end_of_LCD_Init 1E7E  
                                                                    ?_LCD_DispString 0015  
                                                            CANSetMask@bDoubleBuffer 0013  
                                                                      __CFG_OSCS$OFF 000000  
                                                               __size_of_CANIntClear 008C  
                                                                              ?_main 0001  
                                                                    __end_of___ftdiv 1860  
                                                                    __end_of___fttol 177A  
                                                                    __end_of___lwdiv 2022  
                                                                    __end_of___lwmod 2186  
                                                                              i2l481 1DFC  
                                                                              i2l466 1D84  
                                                                              _TMR3H 000FB3  
                                                                              _TMR3L 000FB2  
                                                                              _PORTA 000F80  
                                                                              _PORTB 000F81  
                                                                              _PORTC 000F82  
                                                                              _PORTD 000F83  
                                                                              _PORTE 000F84  
                                                                              _TRISA 000F92  
                                                                              _TRISB 000F93  
                                                                              _TRISC 000F94  
                                                                              _TRISD 000F95  
                                                                              _TRISE 000F96  
                                                                      __CFG_PWRT$OFF 000000  
                                                                      __CFG_WRT0$OFF 000000  
                                                             __end_of_Hcsr04_Trigger 2264  
                                                                      __CFG_WRT1$OFF 000000  
                                                                      __CFG_WRT2$OFF 000000  
                                                                      __CFG_WRT3$OFF 000000  
                                                                     __CFG_EBTR0$OFF 000000  
                                                                     __CFG_EBTR1$OFF 000000  
                                                                     __CFG_EBTR2$OFF 000000  
                                                                     __CFG_EBTR3$OFF 000000  
                                                                              _Reply 0036  
                                                                      __CFG_WRTB$OFF 000000  
                                                                      __CFG_WRTC$OFF 000000  
                                                                      __CFG_WRTD$OFF 000000  
                                                                     __CFG_EBTRB$OFF 000000  
                                                                      ___ftpack@sign 0014  
                                                                              _speed 0601  
                                                                __size_of_LCD_GoToXy 002A  
                                                                   CANIntEnable@type 0010  
                                                                              pclath 000FFA  
                                                                              tablat 000FF5  
                                                             __size_ofi2_CANIntClear 008C  
                                                                              plusw2 000FDB  
                                                                              status 000FD8  
                                                             CANSetMask@ui8CanBfrNum 0019  
                                                                     ??_GPIOPinWrite 0012  
                                                                        _Hcsr04_Init 223A  
                                                                    __initialization 2214  
                                                                      ??_SendCommand 0014  
                                                                   __end_of_LedsInit 2272  
                                                                       __end_of_main 1478  
                                                                        _AllowTxFlag 00B3  
                                                                     __CFG_OSC$HSPLL 000000  
                                                                  main@ui16ReplyData 0095  
                                                                          ??_CANInit 0010  
                                                                   __end_of_SendData 1BBC  
                                                                             ??_main 0085  
                                                                      ___fttol@sign1 0060  
                                                                      __activetblptr 000002  
                                                                    ?_Hcsr04_Trigger 0001  
                                                              __size_of_CANIntEnable 009C  
                                                                             _CANCON 000F6F  
                                                                             _CCPR1H 000FBF  
                                                                             _CCPR1L 000FBE  
                                                                             _CIOCON 000F73  
                                                                   __end_of___ftpack 1924  
                                                                             _T1RD16 007E6F  
                                                              __size_of_CANIntStatus 003C  
                                                                             i2l2721 1DD8  
                                                                             i2l2713 1DB4  
                                                                             i2l2705 1D90  
                                                                             i2l2725 1DEA  
                                                                             i2l2717 1DC6  
                                                                             i2l2709 1DA2  
                                                                             i2l2799 0052  
                                                                   __end_of___lwtoft 2214  
                                                                          ??_ComInit 0021  
                                                                             _RXB0D0 000F66  
                                                                             _RXB1D0 000F56  
                                                                             _TMR1CS 007E69  
                                                                     __CFG_WDTPS$128 000000  
                                                                             _TMR1ON 007E68  
                                                                  AvgMeasure@counter 0066  
                                                              __size_of_CANSetFilter 01F2  
                                                                      ??_Timer1_Init 0010  
                                                                        ?_AvgMeasure 0033  
                                                            CANSetFilter@RXFEIDH_PTR 0016  
                                                            CANSetFilter@RXFEIDL_PTR 0018  
                                                                          ??___ftdiv 0021  
                                                                          ??___fttol 002E  
                                                                          ??___lwdiv 0014  
                                                                       ??_CANSetMask 0014  
                                                                       ??_CANSetMode 0010  
                                                                          ??___lwmod 0014  
                                                                        ?_Clock_Init 0001  
                                                                      i2_CANIntClear 1D76  
                                                                   GPIOPinWrite@Data 0011  
                                                                  i2CANIntClear@type 0001  
                                                                             clear_0 221A  
                                                                             clear_1 2226  
                                                                   GPIOPinWrite@Mask 0010  
                                                                   GPIOPinWrite@Port 0013  
                                                                       _CANIntEnable 1BBC  
                                                                   __end_of_itoa_new 1A84  
                                                                __end_of_SendCommand 1B20  
                                                                       _CANIntStatus 2186  
                                                                       __mediumconst 0000  
                                                                         _bRxMsgFlag 00B4  
                                                            CANSetFilter@RXFSIDH_PTR 001B  
                                                                             tblptrh 000FF7  
                                                                             tblptrl 000FF6  
                                                                             tblptru 000FF8  
                                                            CANSetFilter@RXFSIDL_PTR 001D  
                                                                       _CANSetFilter 1478  
                                                                         __accesstop 0060  
                                                            __end_of__initialization 222C  
                                                                          ?_LCD_Init 0001  
                                                                 __end_of_CANSetMask 1250  
                                                                 __end_of_CANSetMode 2136  
                                                                      ___rparam_used 000001  
                                                                         ___ftdiv@f1 001B  
                                                                         ___ftdiv@f2 001E  
                                                                         ___ftdiv@f3 0025  
                                                             CANMessageSend@data_ptr 0025  
                                                                         ___fttol@f1 002A  
                                                                     __pcstackCOMRAM 0001  
                                                                       ??_LCD_GoToXy 0016  
                                                                     ?i2_CANIntClear 0001  
                                                             CANMessageGet@RXMsgFlag 001F  
                                                                      __end_of_speed 0603  
                                                                __end_of_Timer1_Init 2280  
                                                                         ___lwtoft@c 0018  
                                                                        itoa_new@val 0017  
                                                                        itoa_new@str 0019  
                                                               __end_of_GPIOPinWrite 1CEA  
                                                          CANSetFilter@ui8CanFltrNum 001A  
                                                                __size_of_AvgMeasure 00B8  
                                                                CANSetFilter@pObject 0010  
                                                                          ?_LedsInit 0001  
                                                                         __pbssBANK0 00A9  
                                                                 __end_of_LCD_GoToXy 21EC  
                                                                __size_of_Clock_Init 005C  
                                                                         ??_LCD_Init 0017  
                                                                   ??_CANMessageSend 0013  
                                                                          ?_SendData 0001  
                                                                   ??_CANSetBaudRate 0014  
                                                                   ??_LCD_DispString 0017  
                                                                        _SendCommand 1A84  
                                                     CANMessageSend@TXB_BASE_ADDRESS 002D  
                                                     __size_of_GPIOPinTypeGPIOOutput 006A  
                                                      __end_of_GPIOPinTypeGPIOOutput 1F62  
                                                                            _CANSTAT 000F6E  
                                                                          ?___ftpack 0010  
                                                                            _CANInit 2280  
                                                                            _BRGCON1 000F70  
                                                                            _BRGCON2 000F71  
                                                                            _BRGCON3 000F72  
                                                                            _T1CKPS0 007E6C  
                                                                            _T1CKPS1 007E6D  
                                                                          ?___lwtoft 0018  
                                                            CANMessageSend@TXBD0_PTR 001F  
                                                                            _RXB0DLC 000F65  
                                                                            _RXB1DLC 000F55  
                                                                            _RXB0CON 000F60  
                                                                            _RXB1CON 000F50  
                                                                            _TXB0CON 000F40  
                                                                            _TXB1CON 000F30  
                                                             __size_of_CANMessageGet 05F2  
                                                          CANMessageGet@rxBuffer_ptr 0015  
                                                                         ??_LedsInit 0010  
                                                                            _ComInit 2022  
                                                                         ??_SendData 0014  
                                                                          ?_itoa_new 0017  
                                                                       ?_Hcsr04_Init 0001  
                                                                            __Hparam 0000  
                                                                        _Timer1_Init 2272  
                                                                            __Lparam 0000  
                                                                   itoa_new@temp_val 001B  
                                                                    ??i2_CANIntClear 0001  
                                                                      ??_CANIntClear 0010  
                                                                            ___ftdiv 177A  
                                                                            ___fttol 166A  
                                                                            ___lwdiv 1FC2  
                                                                            ___lwmod 2136  
                                                                       __psmallconst 0600  
                                                                            __pcinit 2214  
                                                                         ??___ftpack 0015  
                                                                   ??_Hcsr04_Trigger 0010  
                                                                            __ramtop 0600  
                                                                            __ptext0 1250  
                                                                            __ptext1 19DC  
                                                                            __ptext2 2136  
                                                                            __ptext3 2264  
                                                                            __ptext4 1E02  
                                                                            __ptext5 21C2  
                                                                            __ptext6 1A84  
                                                                            __ptext7 1EF8  
                                                                            __ptext8 1F62  
                                                                            __ptext9 1B20  
                                                                     CANMessageGet@i 0013  
                                                                         ??___lwtoft 001B  
                                                                       __size_of_ISR 00CC  
                                                         CANMessageSend@data_reg_ptr 0023  
                                                                            _counter 004F  
                                                            CANMessageSend@FrameType 0012  
                                                                          _T3CONbits 000FB1  
                                                               end_of_initialization 222C  
                                                                      __Lmediumconst 0000  
                                                           Clock_Init@ulCompareValue 0014  
                                                                         ??_itoa_new 001B  
                                                                       SendData@data 0014  
                                                                       ??_AvgMeasure 0035  
                                                                      _CANMessageGet 0618  
                                                                       _average_dist 004C  
                                                                            postdec2 000FDD  
                                                                            postinc0 000FEE  
                                                                            postinc2 000FDE  
                                                                       ??_Clock_Init 0010  
                                                              __size_of_GPIOPinWrite 0092  
                                                                          _PORTBbits 000F81  
                                                               main@response_time_ms 0091  
                                                                __end_of_CANIntClear 1D76  
                                                                     CANSetMode@mode 0012  
                                                                          _TRISBbits 000F93  
                                                                          _TRISDbits 000F95  
                                                                 __end_of_AvgMeasure 19DC  
                                                                CANSetMask@ui8IDType 0012  
                                                                 __end_of_Clock_Init 20DC  
                                                                        _CCP1CONbits 000FBD  
                                                                        ___ftdiv@exp 0028  
                                                                       _rxCANMessage 00B5  
                                                                  __size_of_LCD_Init 007C  
                                                                     ?_CANMessageGet 0010  
                                                                       _GPIOPinWrite 1C58  
                                                                    CANIntClear@type 0010  
                                                                start_initialization 2214  
                                                                        __end_of_ISR 00D4  
                                                      CANMessageGet@rxBuffer_ptr_976 001B  
                                                                  __size_of_LedsInit 000E  
                                                                  __size_of_SendData 009C  
                                                               __size_of_Hcsr04_Init 0018  
                                                                       ?_SendCommand 0001  
                                                                        _CANIntClear 1CEA  
                                                                           ?_CANInit 0001  
                                                                  __size_of___ftpack 00C4  
                                                                        __pbssCOMRAM 0036  
                                                                  __size_of___lwtoft 0028  
                                                                      __pcstackBANK0 0060  
                                                              SendCommand@command_id 0014  
                                                               LCD_DispString@StrPtr 0015  
                                                                           ?_ComInit 0001  
                                                                    ??_CANMessageGet 0060  
                                                                       ?_Timer1_Init 0001  
                                                                   ___lwdiv@dividend 0010  
                                                                  __size_of_itoa_new 00A8  
                                                                          __pintcode 0008  
                                                                           ?___ftdiv 001B  
                                                                           ?___fttol 002A  
                                                                           ?___lwdiv 0010  
                                                                           ?___lwmod 0010  
                                                      Clock_Init@ulConstCompareValue 0010  
                                                                          _ui8Status 004E  
                                                              _GPIOPinTypeGPIOOutput 1EF8  
                                                                        __smallconst 0600  
                                                                        _COMSTATbits 000F74  
                                                              CANMessageGet@data_ptr 0017  
                                                                   ___lwdiv@quotient 0015  
                                                                 CANMessageGet@i_975 0019  
                                                                        _clockcounts 004A  
                                                                           _LCD_Init 1E02  
                                                                           _LATDbits 000F8C  
                                                           CANMessageSend@TXBDLC_PTR 002B  
                                                                           _PIE1bits 000F9D  
                                                           CANMessageSend@TXBCON_PTR 0027  
                                                                           _PIR1bits 000F9E  
                                                                           _PIR3bits 000FA4  
                                                                           _RXB0EIDH 000F63  
                                                                           _RXB0EIDL 000F64  
                                                                           _RXB1EIDH 000F53  
                                                                           _RXB1EIDL 000F54  
                                                                           _RXB0SIDH 000F61  
                                                                           _RXB0SIDL 000F62  
                                                                           _RXB1SIDH 000F51  
                                                                           _RXB1SIDL 000F52  
                                                                           _RXF0SIDH 000F00  
                                                                           _RXF1SIDH 000F04  
                                                                           _RXF2SIDH 000F08  
                                                                           _RXF3SIDH 000F0C  
                                                                           _RXF4SIDH 000F10  
                                                                           _RXF5SIDH 000F14  
                                                                           _RXM0EIDH 000F1A  
                                                                           _RXM0EIDL 000F1B  
                                                                           _RXM1EIDH 000F1E  
                                                                           _RXM1EIDL 000F1F  
                                                              __end_ofi2_CANIntClear 1E02  
                                                                           _RXM0SIDH 000F18  
                                                                           _RXM0SIDL 000F19  
                                                                           _RXM1SIDH 000F1C  
                                                                           _RXM1SIDL 000F1D  
                                                            __size_of_CANMessageSend 0360  
                                                                      ?_CANIntEnable 0001  
                                                            __size_of_CANSetBaudRate 007A  
                                                                          main@Reply 0097  
                                                                   __size_of_CANInit 000E  
                                                            __size_of_LCD_DispString 0060  
                                                                      ?_CANIntStatus 0001  
                                                                      ?_CANSetFilter 0010  
                                                                           _LedsInit 2264  
                                                                   __size_of_ComInit 005E  
                                                                           _SendData 1B20  
                                                                           __Hrparam 0000  
                                                                       _RXB0SIDLbits 000F62  
                                                                           __Lrparam 0000  
                                                                       _RXB1SIDLbits 000F52  
                                                                         _CANSetMask 0F6A  
                                                                         _CANSetMode 20DC  
                                                                     ??_CANIntEnable 0010  
                                                                   __size_of___ftdiv 00E6  
                                                                   __size_of___fttol 0110  
                                                                   __size_of___lwdiv 0060  
                                                               __size_of_SendCommand 009C  
                                                                   __size_of___lwmod 0050  
                                                                           ___ftpack 1860  
                                                             ?_GPIOPinTypeGPIOOutput 0010  
                                                                           ___lwtoft 21EC  
                                                                 CANIntStatus@status 0001  
                                                                     ??_CANIntStatus 0001  
                                                                    ___lwdiv@divisor 0012  
                                                                    ___lwdiv@counter 0014  
                                                                     ??_CANSetFilter 0012  
                                                                           __ptext10 1C58  
                                                                           __ptext11 223A  
                                                                           __ptext20 2280  
                                                                           __ptext12 2272  
                                                                           __ptext21 2080  
                                                                           __ptext13 2022  
                                                                           __ptext30 2252  
                                                                           __ptext22 0C0A  
                                                                           __ptext14 20DC  
                                                                           __ptext23 0618  
                                                                           __ptext15 0F6A  
                                                                           __ptext32 1D76  
                                                                           __ptext24 1924  
                                                                           __ptext16 1478  
                                                                           __ptext33 2186  
                                                                           __ptext25 21EC  
                                                                           __ptext17 1E7E  
                                                                           __ptext26 1FC2  
                                                                           __ptext18 1BBC  
                                                                           __ptext27 166A  
                                                                           __ptext19 1CEA  
                                                                           __ptext28 177A  
                                                                           __ptext29 1860  
                                                            __size_of_Hcsr04_Trigger 0012  
                                                                           _distance 0048  
                                                           CANMessageGet@psMsgObject 0010  
                                                                    CANMessageSend@i 0021  
                                                          CANMessageGet@data_ptr_977 001D  
                                                                      __size_of_main 0228  
                                                                           _itoa_new 19DC  
                                                                           _tickcntr 00AD  
                                                          GPIOPinTypeGPIOOutput@Mask 0010  
                                                                         _LCD_GoToXy 21C2  
                                                          GPIOPinTypeGPIOOutput@Port 0011  
                                                               __size_of_Timer1_Init 000E  
                                                                           int$flags 0050  
                                                                       ?_CANIntClear 0001  
                                                                  CANSetMask@pObject 0010  
                                                                           _str_dist 00C7  
                                                                        _RXB0CONbits 000F60  
                                                                        _RXB1CONbits 000F50  
                                                                         _INTCONbits 000FF2  
                                                             CANSetBaudRate@baudrate 0010  
                                                                           intlevel2 228E  
                                                                   ___lwmod@dividend 0010  
                                                                      ??_Hcsr04_Init 0010  
                                                        CANMessageGet@bClrPendingInt 0012  
                                                          CANMessageSend@psMsgObject 0010  
                                                                  _Sync_Arrival_Time 00A9  
                                                                     _CANMessageSend 0C0A  
                                                                        ?_CANSetMask 0010  
                                                                        ?_CANSetMode 0001  
                                                                     _CANSetBaudRate 1E7E  
                                                                     _LCD_DispString 1F62  
                                                                    ___lwmod@divisor 0012  
                                                                    ___lwmod@counter 0014  
                                                    CANSetFilter@FILTER_BASE_ADDRESS 001F  
                                                               __end_of_CANIntEnable 1C58  
                                                               __end_of_CANIntStatus 21C2  
                                                              __end_of_CANMessageGet 0C0A  
                                                             __end_of_CANMessageSend 0F6A  
